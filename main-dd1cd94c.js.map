{"version":3,"file":"main-dd1cd94c.js","sources":["../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Node.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/visit.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/directives.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/anchors.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Alias.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/toJS.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/createNode.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyComment.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyString.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringify.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/log.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/Pair.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyPair.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/YAMLMap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/map.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/seq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/string.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/common/null.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/bool.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/float.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/int.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/core/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/json/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/tags.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/schema/Schema.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/applyReviver.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/doc/Document.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/errors.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-props.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-contains-newline.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-map-includes.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-map.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-end.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-collection.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-node.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/composer.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/compose/compose-doc.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-scalar.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-stringify.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst-visit.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/cst.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/lexer.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/line-counter.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/parse/parser.js","../node_modules/.pnpm/yaml@2.1.1/node_modules/yaml/browser/dist/public-api.js","../node_modules/.pnpm/ts-debounce@4.0.0/node_modules/ts-debounce/dist/src/index.esm.js","../src/main.ts"],"sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt === 'function' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                // TODO: assert being at last item?\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    map.range = [bm.offset, offset, offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        offset = props.end;\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(offset, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                // TODO: assert being at last item?\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, offset, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment)\n        node.comment = comment;\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","import css from './css/wikidot.css';\nimport init from './css/init.css';\nimport collapsible from './css/collapsible.css';\nimport YAML from 'yaml'\nimport { debounce } from \"ts-debounce\";\nimport { throttle } from 'throttle-typescript';\nimport ftmlWorker from './ftml.web.worker.js?bundled-worker&dataurl';\n\nlet ftml = new Worker(ftmlWorker, {\n  type: 'module',\n});\n\ndocument.querySelector(\"head > style#innercss\")!.innerHTML = css;\ndocument.querySelector(\"head > style#collapsible\")!.innerHTML = collapsible;\ndocument.querySelector(\"head > style#init\")!.innerHTML = init;\n\n// Workerスレッドから受信\nftml.onmessage = (event: MessageEvent) => {\n  const { html, styles, type } = event.data;\n  const pageStyles = document.getElementById('page-styles')!;\n  const pageContent = document.getElementById('page-content')!;\n  const sideContent = document.getElementById('side-bar')!;\n  const topContent = document.getElementById('top-bar')!;\n  if (type == 'page') {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'side') {\n    sideContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'top') {\n    topContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  }\n  if (styles.length > 0) {\n    pageStyles.innerHTML = styles.map((v: string) => `<style>\\n${v.replace(/\\\\</g, '&lt;')}\\n</style>`).join(\"\\n\\n\");\n  } else {\n    pageStyles.innerHTML = \"\";\n  }\n};\n\nasync function loadlocales(lang: string = 'en') {\n  const sideftml = await fetch(`./locales/${lang}/side.ftml`).then(v => v.text());\n  const topftml = await fetch(`./locales/${lang}/top.ftml`).then(v => v.text());\n  const theme = await fetch(`./locales/${lang}/theme.css`).then(v => v.text());\n  const messages = YAML.parse(await fetch(`./locales/${lang}/messages.yaml`).then(v => v.text()));\n  for (const key in messages.actionarea) {\n    let messagevalue = messages.actionarea[key];\n    if (Array.isArray(messagevalue)) {\n      const message = messagevalue.map((v: string) => `<li>${v}</li>`).join(\"\");\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = message;\n    }\n    else if (key == \"save\") {\n      document.querySelector(`#actionarea-${key}`)!.value = messagevalue;\n    }\n    else {\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = messagevalue;\n    }\n  }\n  readlang(lang);\n  document.querySelector(\"head > style#theme\")!.innerHTML = theme;\n  ftml.postMessage({ value: sideftml, type: \"side\" });\n  ftml.postMessage({ value: topftml, type: \"top\" });\n}\nasync function readlang(lang: string) {\n  document.getElementById(\"lang-select\")!.innerHTML = \"\";\n  const langconfig = YAML.parse(await fetch('./locales/index.yaml').then(v => v.text()));\n  for (const key in langconfig[\"lang\"]) {\n    let op = document.createElement(\"option\");\n    op.value = key;\n    op.label = langconfig[\"lang\"][key];\n    op.text = langconfig[\"lang\"][key];\n    if (key == lang)\n      op.selected = true;\n    document.getElementById(\"lang-select\")!.appendChild(op);\n  }\n}\n\nconst editpageField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-textarea')!;\nconst edittitleField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-title')!;\nconst editsideField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-side-textarea')!;\nconst editsaveButton: HTMLInputElement = <HTMLInputElement>document.getElementById('actionarea-save')!;\nconst langSelect: HTMLInputElement = <HTMLInputElement>document.getElementById('lang-select')!;\n\neditpageField.addEventListener('input', debounce((event) => {\n    const { target } = event;\n    if (!(target instanceof HTMLTextAreaElement)) {\n      return;\n    }\n    const value = target.value;\n    const type = \"page\"\n    const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n    localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n    ftml.postMessage({ value: value, type: type });\n}, 1000));\n\neditsideField.addEventListener('input', debounce((event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLTextAreaElement)) {\n    return;\n  }\n  const value = target.value;\n  const type = \"side\"\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n  ftml.postMessage({ value: value, type: type });\n}, 1000));\n\nedittitleField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n  const value = target.value;\n  document.querySelector(\"#page-title\")!.innerHTML = value;\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n});\n\nlangSelect.addEventListener('change', function () {\n  const lang = this.value;\n  loadlocales(lang);\n  const WPconfigItem = { lang: lang };\n  localStorage.setItem(\"WPconfig\", JSON.stringify(WPconfigItem));\n\n});\n\neditsaveButton.addEventListener('click', async () => {\n  const opts = {\n    suggestedName: edittitleField.value ? edittitleField.value : 'underfined',\n    types: [{\n      description: 'Foundation Text Markup Language',\n      accept: { 'text/plain': ['.ftml'] },\n    }],\n  };\n  try {\n    const handle = await window.showSaveFilePicker(opts);\n    const writable = await handle.createWritable();\n    await writable.write(editpageField.value);\n    await writable.close();\n  } catch (err) {\n    console.log(err)\n  }\n})\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const WPconfigItem = localStorage.getItem(\"WPconfig\");\n  if (WPconfigItem) {\n    const WPconfig = JSON.parse(WPconfigItem);\n    loadlocales(WPconfig.lang);\n  } else {\n    loadlocales();\n  }\n  const FtmlStorageItem = localStorage.getItem(\"FtmlStorage\");\n  if (FtmlStorageItem) {\n    const FtmlStorage = JSON.parse(FtmlStorageItem);\n    edittitleField.value = FtmlStorage.title;\n    editpageField.value = FtmlStorage.page;\n    editsideField.value = FtmlStorage.side;\n    if (FtmlStorage.page) {\n      const type = \"page\"\n      ftml.postMessage({ value: FtmlStorage.page, type: type });\n    }\n    if (FtmlStorage.side) {\n      const type = \"side\"\n      ftml.postMessage({ value: FtmlStorage.side, type: type });\n    }\n    if (FtmlStorage.title) {\n      document.querySelector(\"#page-title\")!.innerHTML = FtmlStorage.title;\n    }\n  }\n  const FtmlStrageItem = localStorage.getItem(\"FtmlStrage\");\n  if (FtmlStrageItem) {\n    localStorage.removeItem(\"FtmlStrage\");\n  }\n});\n"],"names":["ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","NodeBase","constructor","type","Object","defineProperty","this","value","clone","copy","create","getPrototypeOf","getOwnPropertyDescriptors","range","slice","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","Directives","yaml","tags","docStart","docEnd","defaultYaml","defaultTags","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","name","shift","handle","prefix","test","tagName","source","verbatim","suffix","match","decodeURIComponent","tagString","tag","entries","startsWith","substring","replace","ch","toString","doc","lines","tagEntries","tagNames","_key","keys","some","tn","push","join","anchorIsValid","sa","JSON","stringify","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","super","set","resolve","found","toJSON","_arg","ctx","maxAliasCount","msg","ReferenceError","data","get","count","aliasCount","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","toJS","arg","Array","isArray","map","v","String","onCreate","keep","Number","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","defaultTagPrefix","createNode","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onAnchor","onTagObj","sourceObjects","ref","tagObj","filter","t","find","format","identify","findTagObject","iterator","collectionFromPath","k","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","delete","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","maxFlowStringSingleLineLength","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","getFoldOptions","containsDocumentMarker","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","start","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockString","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","stringifyString","inFlow","ss","_stringify","_type","actualString","default","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","indentStep","repeat","resolvedAliases","TypeError","o","obj","nodeClass","getTagObject","props","stringifyProps","warn","logLevel","warning","process","emitWarning","console","addPairToJSMap","merge","isMergeKey","mergeToJSMap","jsKey","stringKey","strCtx","inStringifyKey","strKey","mapKeyWarned","jsonStr","stringifyKey","jsValue","srcMap","prototype","hasOwnProperty","call","createPair","_","mapAsMap","allNullValues","keyComment","explicitKey","keyCommentDone","chompKeep","vcb","valueComment","spaceBefore","flow","valueCommentDone","valueStr","ws","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","reqNewline","linesAtValue","iv","reduce","sum","ic","trimStart","findPair","YAMLMap","pair","overwrite","_pair","sortEntries","sortMapEntries","findIndex","Type","replacer","sort","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","binary","Uint8Array","Buffer","from","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","intTime","floatTime","timestamp","Date","RegExp","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","applyReviver","reviver","val","len","v0","v1","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","setAnchors","aliasObjects","prevAnchors","error","createNodeAnchors","sv","jsonArg","values","hasDirectives","dir","cs","contentComment","body","dc","stringifyDocument","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","startOnNewline","atNewline","hasSpace","commentSep","hasNewline","hasNewlineAfterProp","reqSpace","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveEnd","blockMsg","isBlock","composeCollection","CN","tagToken","coll","composeNode","composeEmptyNode","bm","atRoot","collItem","keyProps","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","fcName","prevItemComment","loop","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","expType","kt","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","m","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","rel","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","exec","lastIndex","e","r","N","L","P","fromCodePoint","composeScalar","matchWithTest","findScalarTagByName","findScalarTagByTest","emptyScalarPosition","before","isSrcToken","alias","composeAlias","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","forceDoc","endOffset","opts","contentEnd","composeDoc","addEndtoBlockProps","setFlowScalarValue","oa","tok","nl","stringifyToken","stringifyItem","cst","_visit","field","itemAtPath","index","parentCollection","BOM","DOCUMENT","FLOW_END","tokenType","context","he","head","afterKey","setBlockScalarValue","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","state","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atNextItem","fs","flowScalar","parseOptions","lineCounter","parser","composer","_doc","forEach","_reviver","docs","empty","round","isImmediate","callback","maxWait","now","l","arguments","Promise","clearTimeout","setTimeout","reject","cancel","ftml","Worker","loadlocales","lang","sideftml","fetch","then","topftml","theme","messages","YAML","actionarea","messagevalue","querySelector","innerHTML","getElementById","langconfig","op","createElement","label","selected","appendChild","readlang","postMessage","onmessage","event","html","styles","pageStyles","pageContent","sideContent","topContent","editpageField","edittitleField","editsideField","editsaveButton","langSelect","addEventListener","debounce","target","HTMLTextAreaElement","FtmlStorageItem","title","page","side","localStorage","setItem","HTMLInputElement","WPconfigItem","suggestedName","types","description","accept","window","showSaveFilePicker","createWritable","write","close","err","log","getItem","FtmlStorage","removeItem"],"mappings":"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"}