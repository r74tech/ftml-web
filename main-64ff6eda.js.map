{"version":3,"file":"main-64ff6eda.js","sources":["../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/identity.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/visit.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/doc/directives.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/doc/anchors.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/doc/applyReviver.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/toJS.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/Node.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/Alias.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/Scalar.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/doc/createNode.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/Collection.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyComment.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyString.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringify.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/log.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/Pair.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyPair.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/YAMLMap.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/common/map.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/common/seq.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/common/string.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/common/null.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/core/bool.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/core/float.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/core/int.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/core/schema.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/json/schema.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/tags.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/schema/Schema.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/doc/Document.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/errors.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-props.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/util-contains-newline.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/util-map-includes.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-block-map.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-end.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/compose-collection.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/compose-scalar.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/compose-node.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/composer.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/compose/compose-doc.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/cst-scalar.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/cst-stringify.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/cst-visit.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/cst.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/lexer.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/line-counter.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/parse/parser.js","../node_modules/.pnpm/yaml@2.3.1/node_modules/yaml/browser/dist/public-api.js","../node_modules/.pnpm/ts-debounce@4.0.0/node_modules/ts-debounce/dist/src/index.esm.js","../src/main.ts"],"sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './identity.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, indent, commentString(comment));\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq') ||\n        !expType) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","import '@/../resources/css/main.scss';\nimport css from './css/wikidot.css';\nimport init from './css/init.css';\nimport collapsible from './css/collapsible.css';\nimport YAML from 'yaml'\nimport { debounce } from \"ts-debounce\";\nimport { throttle } from 'throttle-typescript';\nimport ftmlWorker from './ftml.web.worker.js?bundled-worker&dataurl';\n\nlet ftml = new Worker(ftmlWorker, {\n  type: 'module',\n});\n\ndocument.querySelector(\"head > style#innercss\")!.innerHTML = css;\ndocument.querySelector(\"head > style#collapsible\")!.innerHTML = collapsible;\ndocument.querySelector(\"head > style#init\")!.innerHTML = init;\n\n// Workerスレッドから受信\nftml.onmessage = (event: MessageEvent) => {\n  const { html, styles, type } = event.data;\n  const pageStyles = document.getElementById('page-styles')!;\n  const pageContent = document.getElementById('page-content')!;\n  const sideContent = document.getElementById('side-bar')!;\n  const topContent = document.getElementById('top-bar')!;\n  if (type == 'page') {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'side') {\n    sideContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else if (type == 'top') {\n    topContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  } else {\n    pageContent.innerHTML = html.replace(\"\\<wj-body class=\\\"wj-body\\\"\\>\", \"\").replace(\"\\<\\/wj-body\\>\", \"\");\n  }\n  if (styles.length > 0) {\n    pageStyles.innerHTML = styles.map((v: string) => `<style>\\n${v.replace(/\\\\</g, '&lt;')}\\n</style>`).join(\"\\n\\n\");\n  } else {\n    pageStyles.innerHTML = \"\";\n  }\n};\n\nasync function loadlocales(lang: string = 'en') {\n  const sideftml = await fetch(`./locales/${lang}/side.ftml`).then(v => v.text());\n  const topftml = await fetch(`./locales/${lang}/top.ftml`).then(v => v.text());\n  const theme = await fetch(`./locales/${lang}/theme.css`).then(v => v.text());\n  const messages = YAML.parse(await fetch(`./locales/${lang}/messages.yaml`).then(v => v.text()));\n  for (const key in messages.actionarea) {\n    let messagevalue = messages.actionarea[key];\n    if (Array.isArray(messagevalue)) {\n      const message = messagevalue.map((v: string) => `<li>${v}</li>`).join(\"\");\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = message;\n    }\n    else if (key == \"save\") {\n      document.querySelector(`#actionarea-${key}`)!.value = messagevalue;\n    }\n    else {\n      document.querySelector(`#actionarea-${key}`)!.innerHTML = messagevalue;\n    }\n  }\n  readlang(lang);\n  document.querySelector(\"head > style#theme\")!.innerHTML = theme;\n  ftml.postMessage({ value: sideftml, type: \"side\" });\n  ftml.postMessage({ value: topftml, type: \"top\" });\n}\nasync function readlang(lang: string) {\n  document.getElementById(\"lang-select\")!.innerHTML = \"\";\n  const langconfig = YAML.parse(await fetch('./locales/index.yaml').then(v => v.text()));\n  for (const key in langconfig[\"lang\"]) {\n    let op = document.createElement(\"option\");\n    op.value = key;\n    op.label = langconfig[\"lang\"][key];\n    op.text = langconfig[\"lang\"][key];\n    if (key == lang)\n      op.selected = true;\n    document.getElementById(\"lang-select\")!.appendChild(op);\n  }\n}\n\nconst editpageField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-textarea')!;\nconst edittitleField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-page-title')!;\nconst editsideField: HTMLInputElement = <HTMLInputElement>document.getElementById('edit-side-textarea')!;\nconst editsaveButton: HTMLInputElement = <HTMLInputElement>document.getElementById('actionarea-save')!;\nconst langSelect: HTMLInputElement = <HTMLInputElement>document.getElementById('lang-select')!;\n\neditpageField.addEventListener('input', debounce((event) => {\n    const { target } = event;\n    if (!(target instanceof HTMLTextAreaElement)) {\n      return;\n    }\n    const value = target.value;\n    const type = \"page\"\n    const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n    localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n    ftml.postMessage({ value: value, type: type });\n}, 1000));\n\neditsideField.addEventListener('input', debounce((event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLTextAreaElement)) {\n    return;\n  }\n  const value = target.value;\n  const type = \"side\"\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n  ftml.postMessage({ value: value, type: type });\n}, 1000));\n\nedittitleField.addEventListener('input', (event) => {\n  const { target } = event;\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n  const value = target.value;\n  document.querySelector(\"#page-title\")!.innerHTML = value;\n  const FtmlStorageItem = { title: edittitleField.value, page: editpageField.value, side: editsideField.value };\n  localStorage.setItem(\"FtmlStorage\", JSON.stringify(FtmlStorageItem));\n});\n\nlangSelect.addEventListener('change', function () {\n  const lang = this.value;\n  loadlocales(lang);\n  const WPconfigItem = { lang: lang };\n  localStorage.setItem(\"WPconfig\", JSON.stringify(WPconfigItem));\n\n});\n\neditsaveButton.addEventListener('click', async () => {\n  const opts = {\n    suggestedName: edittitleField.value ? edittitleField.value : 'underfined',\n    types: [{\n      description: 'Foundation Text Markup Language',\n      accept: { 'text/plain': ['.ftml'] },\n    }],\n  };\n  try {\n    const handle = await window.showSaveFilePicker(opts);\n    const writable = await handle.createWritable();\n    await writable.write(editpageField.value);\n    await writable.close();\n  } catch (err) {\n    console.log(err)\n  }\n})\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const WPconfigItem = localStorage.getItem(\"WPconfig\");\n  if (WPconfigItem) {\n    const WPconfig = JSON.parse(WPconfigItem);\n    loadlocales(WPconfig.lang);\n  } else {\n    loadlocales();\n  }\n  const FtmlStorageItem = localStorage.getItem(\"FtmlStorage\");\n  if (FtmlStorageItem) {\n    const FtmlStorage = JSON.parse(FtmlStorageItem);\n    edittitleField.value = FtmlStorage.title;\n    editpageField.value = FtmlStorage.page;\n    editsideField.value = FtmlStorage.side;\n    if (FtmlStorage.page) {\n      const type = \"page\"\n      ftml.postMessage({ value: FtmlStorage.page, type: type });\n    }\n    if (FtmlStorage.side) {\n      const type = \"side\"\n      ftml.postMessage({ value: FtmlStorage.side, type: type });\n    }\n    if (FtmlStorage.title) {\n      document.querySelector(\"#page-title\")!.innerHTML = FtmlStorage.title;\n    }\n  }\n  const FtmlStrageItem = localStorage.getItem(\"FtmlStrage\");\n  if (FtmlStrageItem) {\n    localStorage.removeItem(\"FtmlStrage\");\n  }\n});\n"],"names":["ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","contents","Object","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","value","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","Directives","constructor","yaml","tags","this","docStart","docEnd","defaultYaml","defaultTags","clone","copy","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","name","shift","handle","prefix","test","tagName","source","verbatim","slice","suffix","match","decodeURIComponent","tagString","tag","entries","startsWith","substring","replace","ch","toString","doc","lines","tagEntries","tagNames","_key","keys","some","tn","push","join","anchorIsValid","sa","JSON","stringify","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","applyReviver","reviver","obj","val","Array","isArray","len","v0","v1","String","k","from","get","delete","set","call","toJS","arg","ctx","map","v","toJSON","data","aliasCount","count","onCreate","keep","Number","NodeBase","type","defineProperty","create","getPrototypeOf","getOwnPropertyDescriptors","range","mapAsMap","maxAliasCount","onAnchor","TypeError","mapKeyWarned","values","super","resolve","found","_arg","msg","ReferenceError","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","defaultTagPrefix","createNode","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","sourceObjects","ref","tagObj","filter","t","find","format","identify","findTagObject","iterator","nodeClass","default","collectionFromPath","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","maxFlowStringSingleLineLength","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","getFoldOptions","isBlock","containsDocumentMarker","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","start","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","RegExp","blockString","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","stringifyString","inFlow","ss","_stringify","_type","actualString","indentStep","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","resolvedAliases","o","getTagObject","props","stringifyProps","warn","logLevel","warning","process","emitWarning","console","addPairToJSMap","merge","isMergeKey","mergeToJSMap","jsKey","stringKey","strCtx","inStringifyKey","strKey","jsonStr","stringifyKey","jsValue","srcMap","prototype","hasOwnProperty","createPair","_","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","vs0","nl0","hasNewline","hasPropsLine","sp0","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","fcPadding","reqNewline","linesAtValue","iv","reduce","sum","ic","trimStart","findPair","YAMLMap","static","replacer","sortMapEntries","sort","pair","overwrite","_pair","sortEntries","findIndex","Type","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","binary","Uint8Array","Buffer","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","padStart","intTime","floatTime","timestamp","Date","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","setAnchors","aliasObjects","prevAnchors","error","createNodeAnchors","sv","jsonArg","hasDirectives","dir","cs","contentComment","body","dc","stringifyDocument","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","startOnNewline","atNewline","hasSpace","commentSep","hasNewlineAfterProp","reqSpace","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveEnd","blockMsg","resolveCollection","CN","coll","composeNode","composeEmptyNode","bm","atRoot","commentEnd","collItem","keyProps","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","fcName","prevItemComment","loop","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","m","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","rel","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","exec","lastIndex","e","r","N","L","P","fromCodePoint","composeScalar","tagToken","matchWithTest","kt","findScalarTagByName","findScalarTagByTest","emptyScalarPosition","before","isSrcToken","alias","composeAlias","expType","composeCollection","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","forceDoc","endOffset","opts","contentEnd","composeDoc","addEndtoBlockProps","setFlowScalarValue","oa","tok","nl","stringifyToken","stringifyItem","cst","_visit","field","itemAtPath","index","parentCollection","BOM","DOCUMENT","FLOW_END","tokenType","context","he","head","afterKey","setBlockScalarValue","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","state","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atNextItem","fs","flowScalar","parseOptions","lineCounter","parser","composer","_doc","forEach","_reviver","docs","empty","round","isImmediate","callback","maxWait","now","l","arguments","Promise","clearTimeout","setTimeout","reject","cancel","ftml","Worker","loadlocales","lang","sideftml","fetch","then","topftml","theme","messages","YAML","actionarea","messagevalue","querySelector","innerHTML","getElementById","langconfig","op","createElement","label","selected","appendChild","readlang","postMessage","onmessage","event","html","styles","pageStyles","pageContent","sideContent","topContent","editpageField","edittitleField","editsideField","editsaveButton","langSelect","addEventListener","debounce","target","HTMLTextAreaElement","FtmlStorageItem","title","page","side","localStorage","setItem","HTMLInputElement","WPconfigItem","suggestedName","types","description","accept","window","showSaveFilePicker","createWritable","write","close","err","log","getItem","FtmlStorage","removeItem"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70]}