{"version":3,"file":"worker-8577ed5f.js","sources":["modules/util/src/html.ts","modules/util/vendor/request-idle-callback-polyfill.js","modules/util/src/index.ts","node_modules/.pnpm/comlink@4.4.1/node_modules/comlink/dist/esm/comlink.mjs","modules/prism/vendor/prism.js","modules/prism/src/worker.ts","modules/prism/vendor/prism-langs.js","modules/prism/vendor/prism-svelte.js","modules/prism/src/ftml.ts"],"sourcesContent":["// so we can load this module in workers:\nlet domParser: DOMParser\ntry {\n  domParser = new DOMParser()\n} catch {}\n\n/** Takes a string of HTML and creates a {@link DocumentFragment}. */\nexport function toFragment(html: string) {\n  const parsed = domParser.parseFromString(html, \"text/html\")\n  const fragment = document.createDocumentFragment()\n  fragment.append(...Array.from(parsed.body.children))\n  return fragment\n}\n\n/**\n * **DOES NOT ESCAPE INPUT**\n *\n * Template string tag that creates a {@link DocumentFragment}.\n */\nexport function html(strings: TemplateStringsArray, ...subs: (string | string[])[]) {\n  const src = strings.raw.reduce((prev, cur, idx) => {\n    let sub = subs[idx - 1]\n    if (Array.isArray(sub)) sub = sub.join(\"\")\n    return prev + sub + cur\n  })\n  return toFragment(src)\n}\n\n/**\n * **DOES NOT ESCAPE INPUT**\n *\n * Template string tag for creating a CSS stylesheet.\n */\nexport function css(strings: TemplateStringsArray, ...subs: (string | string[])[]) {\n  const src = strings.raw.reduce((prev, cur, idx) => {\n    let sub = subs[idx - 1]\n    if (Array.isArray(sub)) sub = sub.join(\"\")\n    return prev + sub + cur\n  })\n  const style = document.createElement(\"style\")\n  style.textContent = src\n  return style\n}\n","// A request idle callback polyfill by Alexander Farkas.\n// https://github.com/aFarkas/requestIdleCallback\n\n(function (factory) {\n  globalThis.idleCallbackShim = factory();\n}(function(){\n\t'use strict';\n\tvar scheduleStart, throttleDelay, lazytimer, lazyraf;\n\tvar root = globalThis.window ? globalThis.window : globalThis;\n\tvar requestAnimationFrame = root.cancelRequestAnimationFrame && root.requestAnimationFrame || setTimeout;\n\tvar cancelRequestAnimationFrame = root.cancelRequestAnimationFrame || clearTimeout;\n\tvar tasks = [];\n\tvar runAttempts = 0;\n\tvar isRunning = false;\n\tvar remainingTime = 7;\n\tvar minThrottle = 35;\n\tvar throttle = 125;\n\tvar index = 0;\n\tvar taskStart = 0;\n\tvar tasklength = 0;\n\tvar IdleDeadline = {\n\t\tget didTimeout(){\n\t\t\treturn false;\n\t\t},\n\t\ttimeRemaining: function(){\n\t\t\tvar timeRemaining = remainingTime - (performance.now() - taskStart);\n\t\t\treturn Math.max(0, timeRemaining)\n\t\t},\n\t};\n\tvar setInactive = debounce(function(){\n\t\tremainingTime = 22;\n\t\tthrottle = 66;\n\t\tminThrottle = 0;\n\t});\n\n\tfunction debounce(fn){\n\t\tvar id, timestamp;\n\t\tvar wait = 99;\n\t\tvar check = function(){\n\t\t\tvar last = (performance.now()) - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tid = setTimeout(check, wait - last);\n\t\t\t} else {\n\t\t\t\tid = null;\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\t\treturn function(){\n\t\t\ttimestamp = performance.now();\n\t\t\tif(!id){\n\t\t\t\tid = setTimeout(check, wait);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction abortRunning(){\n\t\tif(isRunning){\n\t\t\tif(lazyraf){\n\t\t\t\tcancelRequestAnimationFrame(lazyraf);\n\t\t\t}\n\t\t\tif(lazytimer){\n\t\t\t\tclearTimeout(lazytimer);\n\t\t\t}\n\t\t\tisRunning = false;\n\t\t}\n\t}\n\n\tfunction onInputorMutation(){\n\t\tif(throttle != 125){\n\t\t\tremainingTime = 7;\n\t\t\tthrottle = 125;\n\t\t\tminThrottle = 35;\n\n\t\t\tif(isRunning) {\n\t\t\t\tabortRunning();\n\t\t\t\tscheduleLazy();\n\t\t\t}\n\t\t}\n\t\tsetInactive();\n\t}\n\n\tfunction scheduleAfterRaf() {\n\t\tlazyraf = null;\n\t\tlazytimer = setTimeout(runTasks, 0);\n\t}\n\n\tfunction scheduleRaf(){\n\t\tlazytimer = null;\n\t\trequestAnimationFrame(scheduleAfterRaf);\n\t}\n\n\tfunction scheduleLazy(){\n\n\t\tif(isRunning){return;}\n\t\tthrottleDelay = throttle - (performance.now() - taskStart);\n\n\t\tscheduleStart = performance.now();\n\n\t\tisRunning = true;\n\n\t\tif(minThrottle && throttleDelay < minThrottle){\n\t\t\tthrottleDelay = minThrottle;\n\t\t}\n\n\t\tif(throttleDelay > 9){\n\t\t\tlazytimer = setTimeout(scheduleRaf, throttleDelay);\n\t\t} else {\n\t\t\tthrottleDelay = 0;\n\t\t\tscheduleRaf();\n\t\t}\n\t}\n\n\tfunction runTasks(){\n\t\tvar task, i, len;\n\t\tvar timeThreshold = remainingTime > 9 ?\n\t\t\t9 :\n\t\t\t1\n\t\t;\n\n\t\ttaskStart = performance.now();\n\t\tisRunning = false;\n\n\t\tlazytimer = null;\n\n\t\tif(runAttempts > 2 || taskStart - throttleDelay - 50 < scheduleStart){\n\t\t\tfor(i = 0, len = tasks.length; i < len && IdleDeadline.timeRemaining() > timeThreshold; i++){\n\t\t\t\ttask = tasks.shift();\n\t\t\t\ttasklength++;\n\t\t\t\tif(task){\n\t\t\t\t\ttask(IdleDeadline);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(tasks.length){\n\t\t\tscheduleLazy();\n\t\t} else {\n\t\t\trunAttempts = 0;\n\t\t}\n\t}\n\n\tfunction requestIdleCallbackShim(task){\n\t\tindex++;\n\t\ttasks.push(task);\n\t\tscheduleLazy();\n\t\treturn index;\n\t}\n\n\tfunction cancelIdleCallbackShim(id){\n\t\tvar index = id - 1 - tasklength;\n\t\tif(tasks[index]){\n\t\t\ttasks[index] = null;\n\t\t}\n\t}\n\n\tif(!root.requestIdleCallback || !root.cancelIdleCallback){\n\t\troot.requestIdleCallback = requestIdleCallbackShim;\n\t\troot.cancelIdleCallback = cancelIdleCallbackShim;\n\n    if (root !== globalThis) {\n      globalThis.requestIdleCallback = requestIdleCallbackShim;\n      globalThis.cancelIdleCallback = cancelIdleCallbackShim;\n    }\n\n\t\tif(root.document && document.addEventListener){\n\t\t\troot.addEventListener('scroll', onInputorMutation, true);\n\t\t\troot.addEventListener('resize', onInputorMutation);\n\n\t\t\tdocument.addEventListener('focus', onInputorMutation, true);\n\t\t\tdocument.addEventListener('mouseover', onInputorMutation, true);\n\t\t\t['click', 'keypress', 'touchstart', 'mousedown'].forEach(function(name){\n\t\t\t\tdocument.addEventListener(name, onInputorMutation, {capture: true, passive: true});\n\t\t\t});\n\n\t\t\tif(root.MutationObserver){\n\t\t\t\tnew MutationObserver( onInputorMutation ).observe( document.documentElement, {childList: true, subtree: true, attributes: true} );\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttry{\n\t\t\troot.requestIdleCallback(function(){}, {timeout: 0});\n\t\t} catch(e){\n\t\t\t(function(rIC){\n\t\t\t\tvar timeRemainingProto, timeRemaining;\n\t\t\t\troot.requestIdleCallback = function(fn, timeout){\n\t\t\t\t\tif(timeout && typeof timeout.timeout == 'number'){\n\t\t\t\t\t\treturn rIC(fn, timeout.timeout);\n\t\t\t\t\t}\n\t\t\t\t\treturn rIC(fn);\n\t\t\t\t};\n\t\t\t\tif(root.IdleCallbackDeadline && (timeRemainingProto = IdleCallbackDeadline.prototype)){\n\t\t\t\t\ttimeRemaining = Object.getOwnPropertyDescriptor(timeRemainingProto, 'timeRemaining');\n\t\t\t\t\tif(!timeRemaining || !timeRemaining.configurable || !timeRemaining.get){return;}\n\t\t\t\t\tObject.defineProperty(timeRemainingProto, 'timeRemaining', {\n\t\t\t\t\t\tvalue:  function(){\n\t\t\t\t\t\t\treturn timeRemaining.get.call(this);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})(root.requestIdleCallback)\n\t\t}\n\t}\n\n\treturn {\n\t\trequest: requestIdleCallbackShim,\n\t\tcancel: cancelIdleCallbackShim,\n\t};\n}));\n","// smart idle callback polyfill\nimport \"../vendor/request-idle-callback-polyfill.js\"\n\nexport * from \"./decorators\"\nexport * from \"./html\"\nexport * from \"./pref\"\nexport * from \"./timeout\"\n\n// https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0#gistcomment-2694461\n/** Very quickly generates a (non-secure) hash from the given string. */\nexport function hash(s: string) {\n  let h = 0\n  for (let i = 0; i < s.length; i++) {\n    h = (Math.imul(31, h) + s.charCodeAt(i)) | 0\n  }\n  return h\n}\n\nexport interface SearchOpts {\n  /** Starting minimum index for the search. */\n  min?: number\n  /** Starting maximum index for the search. */\n  max?: number\n  /**\n   * If true, the search will return the closest index to the desired value\n   * on failure.\n   */\n  precise?: boolean\n}\n\n/**\n * Performs a binary search through an array.\n *\n * The comparator function should return -1 if undershooting the desired\n * value, +1 if overshooting, and 0 if the value was found.\n *\n * The comparator can also short-circuit the search by returning true or\n * false. Returning true is like returning a 0 (target found), but\n * returning false induces a null return.\n */\nexport function search<T, TR>(\n  haystack: T[],\n  target: TR,\n  comparator: (element: T, target: TR) => number | boolean,\n  { min = 0, max = haystack.length - 1, precise = true }: SearchOpts = {}\n) {\n  if (haystack.length === 0) return null\n\n  let index = -1\n  while (min <= max) {\n    index = min + ((max - min) >>> 1)\n    const cmp = comparator(haystack[index], target)\n    if (cmp === true || cmp === 0) return { element: haystack[index], index }\n    if (cmp === false) return null\n    if (cmp < 0) min = index + 1\n    else if (cmp > 0) max = index - 1\n  }\n\n  if (index === -1) return null\n\n  if (!precise) return { element: null, index }\n\n  return null\n}\n\n/** Checks if an array or object is empty. Will return true for non-objects. */\nexport function isEmpty(obj: any) {\n  if (!obj) return true\n  if (obj instanceof Array) return obj.length === 0\n  if (obj.constructor === Object) return Object.keys(obj).length === 0\n  return true\n}\n\n/** Creates a type that is the type of `T` if it had a known property `K`. */\ntype Has<K extends string, T> = T extends { [P in K]?: infer R }\n  ? Omit<T, K> & Record<K, R>\n  : never\n\n/**\n * Returns if an object `T` has a key `K`, and only returns true if the\n * value of that key isn't undefined.\n */\nexport function has<K extends string, T>(\n  key: K,\n  obj: T\n): obj is T extends Record<any, any> ? Has<K, T> : never {\n  if (typeof obj !== \"object\") return false\n  // @ts-ignore\n  return key in obj && obj[key] !== undefined\n}\n\n/** Removes all properties assigned to `undefined` in an object. */\nexport function removeUndefined<T>(obj: T) {\n  // this wacky approach is faster as it avoids an iterator\n  const keys = Object.keys(obj) as (keyof T)[]\n  for (let i = 0; i < keys.length; i++) {\n    if (obj[keys[i]] === undefined) delete obj[keys[i]]\n  }\n  return obj as { [K in keyof T]: Exclude<T[K], undefined> }\n}\n\n/** Takes a string and escapes any `RegExp` sensitive characters. */\nexport function escapeRegExp(str: string) {\n  return str.replace(/[.*+?^${}()|\\[\\]\\\\]/g, \"\\\\$&\")\n}\n\n/**\n * Checks if a string has any of the provided sigils.\n *\n * @example\n *\n * ```ts\n * hasSigil(\"!string\", \"!\") // true\n * ```\n */\nexport function hasSigil<T extends string = string>(\n  str: unknown,\n  sigils: string | string[]\n): str is T {\n  if (typeof str !== \"string\") return false\n  if (typeof sigils === \"string\") return str.startsWith(sigils)\n  for (const sigil of sigils) if (str.startsWith(sigil)) return true\n  return false\n}\n\n/** Removes sigils from a string recursively. */\nexport function unSigil<T extends string>(str: T, sigils: string | string[]): T {\n  if (typeof sigils === \"string\") {\n    return (str.startsWith(sigils) ? str.slice(sigils.length) : str) as T\n  } else {\n    for (const sigil of sigils) {\n      if (str.startsWith(sigil)) {\n        return unSigil(str.slice(sigil.length), sigils) as T\n      }\n    }\n  }\n  return str as T\n}\n\n/** Creates a simple pseudo-random ID, with an optional prefix attached. */\nexport function createID(prefix = \"\") {\n  const suffix = hash(Math.random() * 100 + prefix)\n  return `${prefix}-${suffix}`\n}\n\n/** Converts a string into an array of codepoints. */\nexport function toPoints(str: string) {\n  const codes: number[] = []\n  for (let i = 0; i < str.length; i++) {\n    codes.push(str.codePointAt(i)!)\n  }\n  return codes\n}\n\n/**\n * Checks an array of codepoints against a codepoint array or a string,\n * starting from a given position.\n */\nexport function pointsMatch(points: number[], str: string | number[], pos: number) {\n  if (typeof str === \"string\") {\n    for (let i = 0; i < points.length; i++) {\n      if (points[i] !== str.codePointAt(pos + i)) return false\n    }\n  } else {\n    for (let i = 0; i < points.length; i++) {\n      if (points[i] !== str[pos + i]) return false\n    }\n  }\n  return true\n}\n\n/**\n * Performance measuring utility.\n *\n * To use, execute the function and store the returned value. The returned\n * value is a function that will end the performance timer and log the\n * measured time to the console.\n */\nexport function perfy(meta?: string, threshold?: number): (msg?: string) => number {\n  const start = performance.now()\n  return (msg?: string) => {\n    const time = parseFloat((performance.now() - start).toFixed(4))\n    if (meta && threshold && time > threshold) {\n      if (msg) {\n        console.log(`${msg} | ${meta}: ${time}ms`)\n      } else {\n        console.log(`${meta}: ${time}ms`)\n      }\n    }\n    return time\n  }\n}\n\n/** Returns a promise that resolves after the specified number of miliseconds. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Creates and returns a promise that resolves when an invokation of\n * `requestAnimationFrame()` fires its callback.\n *\n * @param fn - An optional function to invoke and to resolve the promise\n *   with its return value. If the function returns a promise, that promise\n *   will be waited on as well.\n */\nexport function animationFrame(): Promise<void>\nexport function animationFrame<T>(fn: () => T): Promise<T>\nexport function animationFrame(fn?: () => any): Promise<void> {\n  // simple delay\n  if (!fn) return new Promise(resolve => requestAnimationFrame(() => resolve()))\n  // callback based\n  return new Promise(resolve =>\n    requestAnimationFrame(() => {\n      const result = fn()\n      if (result instanceof Promise) {\n        result.then(res => resolve(res))\n      } else {\n        resolve(result)\n      }\n    })\n  )\n}\n\n// Credit: https://gist.github.com/beaucharman/e46b8e4d03ef30480d7f4db5a78498ca\n// Personally, I think this is one of the more elegant JS throttle functions.\n/**\n * Returns a 'throttled' variant of the given function. This function will\n * only be able to execute every `limitMS` ms. Use to rate-limit functions\n * for performance. You can have the first call be immediate by setting the\n * third parameter to `true`.\n */\nexport function throttle<T extends AnyFunction>(\n  fn: T,\n  limitMS: number,\n  immediate = false\n) {\n  let timeout: number | null = null\n  let initialCall = true\n\n  return function (this: any, ...args: Parameters<T>) {\n    const callNow = immediate && initialCall\n    const next = () => {\n      // @ts-ignore\n      fn.apply(this, [...args])\n      timeout = null\n    }\n    if (callNow) {\n      initialCall = false\n      next()\n    }\n    if (!timeout) timeout = setTimeout(next, limitMS) as unknown as number\n  }\n}\n\n// Credit: https://gist.github.com/vincentorback/9649034\n/** Returns a 'debounced' variant of the given function. */\nexport function debounce<T extends AnyFunction>(fn: T, wait = 1) {\n  let timeout: any\n  return function (this: any, ...args: Parameters<T>) {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => void fn.call(this, ...args), wait)\n  }\n}\n\n/**\n * Waits until the specified function returns `true`. It will call the\n * specified async function to determine the polling interval. If none is\n * given, it will poll every 100ms.\n */\nexport async function waitFor(\n  conditionFn: () => Promisable<boolean>,\n  asyncTimerFn: () => Promise<void> = () => sleep(100)\n) {\n  while ((await conditionFn()) === false) {\n    await asyncTimerFn()\n    continue\n  }\n  return true\n}\n\n/**\n * Returns a new 'locked' async function, constructed using the specified\n * function. A locked asynchronous function will only allow a singular\n * instance of itself to be running at one time.\n */\nexport function createLock<T extends AnyFunction>(fn: T) {\n  type Return = PromiseValue<ReturnType<T>>\n  const call = async (args: any[]) => {\n    return (await fn(...args)) as Return\n  }\n\n  let running: Promise<Return> | null = null\n\n  return async (...args: Parameters<T>) => {\n    if (running) await running\n    running = call(args)\n    const result = await running\n    running = null\n    return result\n  }\n}\n\n/**\n * Returns a new 'locked' async function, constructed using the specified\n * function. A locked asynchronous function will only allow a singular\n * instance of itself to be running at one time.\n *\n * Additional calls will return null, but they will signal to the original,\n * still running call to \"restart\" with the new given value. This means\n * that the original call will only ever return the most freshly sourced result.\n */\nexport function createMutatingLock<T extends AnyFunction>(fn: T) {\n  type Return = PromiseValue<ReturnType<T>>\n  const call = async (args: any[]) => {\n    return (await fn(...args)) as Return\n  }\n\n  let running: boolean\n  let useArgs: any[] = []\n  return async (...args: Parameters<T>): Promise<Return | null> => {\n    useArgs = args\n    if (running) return null\n    running = true\n    let result = await call(args)\n    // loop to catch if other calls mutate the arguments\n    // if they don't this gets skipped\n    while (useArgs !== args) {\n      // @ts-ignore\n      args = useArgs\n      result = await call(args)\n    }\n    useArgs = []\n    running = false\n    return result\n  }\n}\n\n/**\n * Returns a function that will be \"queued\" to execute only on animation\n * frames. Calling multiple times will run only once on the next\n * requestAnimationFrame.\n *\n * @example\n *\n * ```ts\n * const func = createAnimQueued(function target(args) => { 'foo' })\n * func()\n * func() // doesn't run as the previous call is already queued\n * ```\n */\nexport function createAnimQueued<T extends AnyFunction>(fn: T) {\n  let queued: boolean\n  let useArgs: any[] = []\n  return (...args: Parameters<T>): void => {\n    useArgs = args\n    if (queued !== true) {\n      queued = true\n      requestAnimationFrame(async () => {\n        // @ts-ignore\n        await fn(...useArgs)\n        queued = false\n      })\n    }\n  }\n}\n\n/** Safely calls `requestIdleCallback` in an awaitable `Promise`. */\nexport function idleCallback<T>(fn: () => T, timeout?: number): Promise<T> {\n  return new Promise<T>(resolve => {\n    requestIdleCallback(\n      () => {\n        const result = fn()\n        if (result instanceof Promise) result.then(resolve)\n        else resolve(result)\n      },\n      { timeout }\n    )\n  })\n}\n\n/**\n * See `createAnimQueued` for a description of how this function works. The\n * only difference is that this function uses `requestIdleCallback` instead.\n *\n * @see {@link createAnimQueued}\n */\nexport function createIdleQueued<T extends AnyFunction>(fn: T, timeout = 100) {\n  let queued: boolean\n  let useArgs: any[] = []\n  return (...args: Parameters<T>): void => {\n    useArgs = args\n    if (queued !== true) {\n      queued = true\n      // @ts-ignore\n      requestIdleCallback(\n        async () => {\n          // @ts-ignore\n          await fn(...useArgs)\n          queued = false\n        },\n        { timeout }\n      )\n    }\n  }\n}\n\n/**\n * Performs a modulo operation. This differs from JavaScript's `%`\n * operator, which is more of a remainder operator.\n *\n * @param a - The dividend.\n * @param n - The divisor.\n */\nexport function mod(a: number, n: number) {\n  return ((a % n) + n) % n\n}\n\n/**\n * Replaces a range inside of a string with a substitute.\n *\n * @param str - The string which should have a range inside of it replaced.\n * @param from - The start of the replacement range.\n * @param to - The end of the replacement range.\n * @param sub - The replacement/substitute string.\n */\nexport function replaceRange(str: string, from: number, to: number, sub: string) {\n  return str.substring(0, from) + sub + str.substring(to)\n}\n\n/**\n * Uppercases a string.\n *\n * @param str - The string to uppercase.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function uppercase(str: string, locale?: string | string[]) {\n  return locale ? str.toLocaleUpperCase(locale) : str.toUpperCase()\n}\n\n/**\n * Lowercases a string.\n *\n * @param str - The string to lowercase.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function lowercase(str: string, locale?: string | string[]) {\n  return locale ? str.toLocaleLowerCase(locale) : str.toLowerCase()\n}\n\n/**\n * Titlecases a string.\n *\n * @param str - The string to titlecase.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function titlecase(str: string, locale?: string | string[]) {\n  return replaceRange(lowercase(str, locale), 0, 1, uppercase(str[0], locale))\n}\n\n/**\n * Determines if a string is titlecased.\n *\n * @param str - The string to check.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function isTitlecased(str: string, locale?: string | string[]) {\n  return uppercase(str[0], locale) === str[0]\n}\n\n/**\n * Determines if a string is completely uppercased.\n *\n * @param str - The string to check.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function isUppercased(str: string, locale?: string | string[]) {\n  return uppercase(str, locale) === str\n}\n\n/**\n * Determines if a string is completely lowercased.\n *\n * @param str - The string to check.\n * @param locale - Uses a locale, or a list of locales, case mapping if\n *   provided. This usually won't be needed, as JS tries to account for\n *   non-ASCII/Latin text when handling casing.\n */\nexport function isLowercased(str: string, locale?: string | string[]) {\n  return lowercase(str, locale) === str\n}\n\n/** Helper for turning a relative `?url` import into an absolute path. */\nexport async function url(imp: Promise<any>) {\n  return new URL((await imp).default, import.meta.url).toString()\n}\n\n/**\n * Deduplicates an array. Does not mutate the original array.\n *\n * @param arr - The array to deduplicate.\n * @param insert - Additional values to insert into the array, if desired.\n */\nexport function dedupe<T extends any[]>(arr: T, ...insert: T) {\n  return [...new Set([...arr, ...insert])] as T\n}\n\n/**\n * Simple helper for creating lazy singletons. Use the `.get()` method to\n * get the current instance. If `.get()` is being called for the first\n * time, the instance will be constructed using a factory function.\n */\nexport class LazySingleton<T> {\n  /** The singleton instance. */\n  private instance?: T\n\n  /** @param factory - The factory function to use to construct the instance. */\n  constructor(private factory: () => T) {}\n\n  /** Gets the current instance. */\n  get() {\n    return !this.instance ? (this.instance = this.factory()) : this.instance\n  }\n\n  /** Is `true` if the instance has ever been contructed. */\n  get loaded() {\n    return Boolean(this.instance)\n  }\n}\n\n// adapted from: https://stackoverflow.com/a/34920444\n// this, as far as I can tell, is basically the fastest way to do this.\n// there is a simpler method involving `TextEncoder`, but for large strings\n// that method is slower than this. It also has to allocate a new buffer\n// every time, which is a waste of memory.\n\n/**\n * Gets the byte length of a string.\n *\n * @param str - The string to get the byte length of.\n */\nexport function byteLength(str: string) {\n  // assuming the String is UCS-2(aka UTF-16) encoded\n  let len = 0\n\n  for (let i = 0; i < str.length; i++) {\n    let high = str.charCodeAt(i)\n\n    // [0x0000, 0x007F]\n    if (high < 0x0080) len += 1\n    // [0x0080, 0x07FF]\n    else if (high < 0x0800) len += 2\n    // [0x0800, 0xD7FF]\n    else if (high < 0xd800) len += 3\n    // [0xD800, 0xDBFF]\n    else if (high < 0xdc00) {\n      let low = str.charCodeAt(++i)\n      if (i < str.length && low >= 0xdc00 && low <= 0xdfff) {\n        // followed by [0xDC00, 0xDFFF]\n        len += 4\n      } else {\n        throw new Error(\"malformed UTF-16 string\")\n      }\n    }\n    // [0xDC00, 0xDFFF]\n    else if (high < 0xe000) {\n      throw new Error(\"malformed UTF-16 string\")\n    }\n    // [0xE000, 0xFFFF]\n    else len += 3\n  }\n\n  return len\n}\n\nconst decoder = new TextDecoder()\nconst encoder = new TextEncoder()\n\n/**\n * Convert a string or generic buffer into an `ArrayBuffer`.\n *\n * @param buffer - The string, `ArrayBuffer`, or typed array to convert.\n */\nexport function encode(buffer: string | ArrayBufferLike | ArrayBufferView) {\n  if (typeof buffer === \"string\") return encoder.encode(buffer).buffer\n  if (\"buffer\" in buffer) return buffer.buffer\n  if (buffer instanceof ArrayBuffer) return buffer\n  throw new TypeError(\"Expected a string, ArrayBuffer, or typed array!\")\n}\n\n/**\n * Decode an `ArrayBuffer` into a string.\n *\n * @param buffer - The `ArrayBuffer` to decode.\n */\nexport function decode(buffer: ArrayBufferLike | ArrayBufferView) {\n  return decoder.decode(buffer)\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","/* PrismJS 1.23.0\nhttps://prismjs.com/download.html#themes=prism&plugins=autolinker+custom-class+highlight-keywords */\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: true,\n\t\tdisableWorkerMessageHandler: true,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n;\n(function () {\n\n\tif (typeof Prism === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:=&@]+(?:\\?[\\w\\-+%~/.:=?&!$'()*,;@]*)?(?:#[\\w\\-+%~/.:#=?&!$'()*,;@]*)?/;\n\tvar email = /\\b\\S+@[\\w.]+[a-z]{2}/;\n\tvar linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/;\n\n\t// Tokens that may contain URLs and emails\n\tvar candidates = ['comment', 'url', 'attr-value', 'string'];\n\n\tPrism.plugins.autolinker = {\n\t\tprocessGrammar: function (grammar) {\n\t\t\t// Abort if grammar has already been processed\n\t\t\tif (!grammar || grammar['url-link']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPrism.languages.DFS(grammar, function (key, def, type) {\n\t\t\t\tif (candidates.indexOf(type) > -1 && !Array.isArray(def)) {\n\t\t\t\t\tif (!def.pattern) {\n\t\t\t\t\t\tdef = this[key] = {\n\t\t\t\t\t\t\tpattern: def\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tdef.inside = def.inside || {};\n\n\t\t\t\t\tif (type == 'comment') {\n\t\t\t\t\t\tdef.inside['md-link'] = linkMd;\n\t\t\t\t\t}\n\t\t\t\t\tif (type == 'attr-value') {\n\t\t\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdef.inside['url-link'] = url;\n\t\t\t\t\t}\n\n\t\t\t\t\tdef.inside['email-link'] = email;\n\t\t\t\t}\n\t\t\t});\n\t\t\tgrammar['url-link'] = url;\n\t\t\tgrammar['email-link'] = email;\n\t\t}\n\t};\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tPrism.plugins.autolinker.processGrammar(env.grammar);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (/-link$/.test(env.type)) {\n\t\t\tenv.tag = 'a';\n\n\t\t\tvar href = env.content;\n\n\t\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {\n\t\t\t\thref = 'mailto:' + href;\n\t\t\t} else if (env.type == 'md-link') {\n\t\t\t\t// Markdown\n\t\t\t\tvar match = env.content.match(linkMd);\n\n\t\t\t\thref = match[2];\n\t\t\t\tenv.content = match[1];\n\t\t\t}\n\n\t\t\tenv.attributes.href = href;\n\n\t\t\t// Silently catch any error thrown by decodeURIComponent (#1186)\n\t\t\ttry {\n\t\t\t\tenv.content = decodeURIComponent(env.content);\n\t\t\t} catch (e) { /* noop */ }\n\t\t}\n\t});\n\n}());\n\n(function () {\n\n\tif (typeof Prism === 'undefined') {\n\t\treturn;\n\t}\n\n\t/**\n\t * @callback ClassMapper\n\t * @param {string} className\n\t * @param {string} language\n\t * @returns {string}\n\t *\n\t * @callback ClassAdder\n\t * @param {ClassAdderEnvironment} env\n\t * @returns {undefined | string | string[]}\n\t *\n\t * @typedef ClassAdderEnvironment\n\t * @property {string} language\n\t * @property {string} type\n\t * @property {string} content\n\t */\n\n\t// options\n\n\t/** @type {ClassAdder | undefined} */\n\tvar adder;\n\t/** @type {ClassMapper | undefined} */\n\tvar mapper;\n\t/** @type {string} */\n\tvar prefixString = '';\n\n\n\tPrism.plugins.customClass = {\n\t\t/**\n\t\t * Sets the function which can be used to add custom aliases to any token.\n\t\t *\n\t\t * @param {ClassAdder} classAdder\n\t\t */\n\t\tadd: function (classAdder) {\n\t\t\tadder = classAdder;\n\t\t},\n\t\t/**\n\t\t * Maps all class names using the given object or map function.\n\t\t *\n\t\t * This does not affect the prefix.\n\t\t *\n\t\t * @param {Object<string, string> | ClassMapper} classMapper\n\t\t */\n\t\tmap: function map(classMapper) {\n\t\t\tif (typeof classMapper === 'function') {\n\t\t\t\tmapper = classMapper;\n\t\t\t} else {\n\t\t\t\tmapper = function (className) {\n\t\t\t\t\treturn classMapper[className] || className;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Adds the given prefix to all class names.\n\t\t *\n\t\t * @param {string} string\n\t\t */\n\t\tprefix: function prefix(string) {\n\t\t\tprefixString = string || '';\n\t\t}\n\t};\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (adder) {\n\t\t\tvar result = adder({\n\t\t\t\tcontent: env.content,\n\t\t\t\ttype: env.type,\n\t\t\t\tlanguage: env.language\n\t\t\t});\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tenv.classes.push.apply(env.classes, result);\n\t\t\t} else if (result) {\n\t\t\t\tenv.classes.push(result);\n\t\t\t}\n\t\t}\n\n\t\tif (!mapper && !prefixString) {\n\t\t\treturn;\n\t\t}\n\n\t\tenv.classes = env.classes.map(function (c) {\n\t\t\treturn prefixString + (mapper ? mapper(c, env.language) : c);\n\t\t});\n\t});\n\n}());\n\n(function () {\n\n\tif (typeof Prism === 'undefined') {\n\t\treturn;\n\t}\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'keyword') {\n\t\t\treturn;\n\t\t}\n\t\tenv.classes.push('keyword-' + env.content);\n\t});\n\n}());\n\n","import { Comlink } from \"@wikijump/comlink\"\nimport type PrismType from \"prismjs\"\nimport \"../vendor/prism\"\nimport { prismBase } from \"../vendor/prism-langs\"\nimport { prismSvelte } from \"../vendor/prism-svelte\"\nimport { prismFTML } from \"./ftml\"\n\n/** Reference to the Prism syntax highlighter. */\nexport const Prism: typeof PrismType = globalThis.Prism\n\n// add languages\nprismBase(Prism)\nprismSvelte(Prism)\nprismFTML(Prism)\n\n// set prism class prefix\n// https://prismjs.com/plugins/custom-class/\nPrism.plugins.customClass.prefix(\"wj-code-\")\n\n// yoink Prism's encode function so that we can escape strings identically\nconst encode: (src: string) => string = Prism.util.encode as any\n\nconst RAW_LANGS = [\"raw\", \"text\", \"none\", \"\"]\n\nconst module = {\n  /** Returns the list of languages (and their aliases) supported by Prism. */\n  getLanguages() {\n    return Object.keys(Prism.languages).filter(\n      lang => typeof Prism.languages[lang] !== \"function\"\n    )\n  },\n  /**\n   * Highlights a string of code and returns HTML, given a specified\n   * language. If the language specified isn't known by Prism, the string\n   * of code will be escaped and returned with no syntax highlighting.\n   *\n   * If the given language is `raw`, `text`, `none`, or an empty string,\n   * the string of code will be escaped and returned as is.\n   *\n   * @param code - The string to be highlighted.\n   * @param lang - The language to highlight the code with.\n   */\n  highlight(code: string, lang: string) {\n    try {\n      if (lang && !RAW_LANGS.includes(lang) && lang in Prism.languages) {\n        const grammar = Prism.languages[lang]\n        const html = Prism.highlight(code, grammar, lang)\n        return html\n      }\n    } catch {}\n\n    // fallback to just returning the escaped code\n    return encode(code)\n  },\n\n  /** Sets or gets the status of Prism's `manual` property. */\n  manual(set?: boolean) {\n    if (typeof set !== \"undefined\") Prism.manual = set\n    return Prism.manual\n  },\n\n  /** Sets or gets the status of Prism's `disableWorkerMessageHandler` property. */\n  disableWorkerMessageHandler(set?: boolean) {\n    if (typeof set !== \"undefined\") Prism.disableWorkerMessageHandler = set\n    return Prism.disableWorkerMessageHandler ?? false\n  }\n}\n\nexport type PrismModule = typeof module\n\nComlink.expose(module)\n","/* PrismJS 1.23.0\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript+abnf+actionscript+apl+arduino+asciidoc+aspnet+autohotkey+bash+basic+batch+bnf+brainfuck+brightscript+c+csharp+cpp+clojure+cobol+coffeescript+crystal+css-extras+csv+d+dart+diff+docker+ebnf+editorconfig+elixir+elm+erlang+fsharp+flow+fortran+git+glsl+go+graphql+haskell+hcl+hlsl+http+hpkp+hsts+ignore+ini+java+javadoc+javadoclike+jsdoc+js-extras+json+json5+jsonp+jsstacktrace+julia+kotlin+latex+less+lisp+log+lua+makefile+markdown+markup-templating+matlab+nasm+nginx+nim+objectivec+ocaml+opencl+pascal+perl+php+phpdoc+php-extras+plsql+powershell+purescript+python+qml+r+jsx+tsx+regex+rest+ruby+rust+sass+scss+scala+scheme+smalltalk+smarty+sql+stylus+swift+toml+typescript+v+vim+wasm+yaml+zig&plugins=autolinker+custom-class+highlight-keywords */\n\nexport function prismBase(Prism) {\n\tPrism.languages.markup = {\n\t\t'comment': /<!--[\\s\\S]*?-->/,\n\t\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t\t'doctype': {\n\t\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'internal-subset': {\n\t\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t\t'name': /[^\\s<>'\"]+/\n\t\t\t}\n\t\t},\n\t\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t\t'tag': {\n\t\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'special-attr': [],\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\t'entity': [\n\t\t\t{\n\t\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\t\talias: 'named-entity'\n\t\t\t},\n\t\t\t/&#x?[\\da-f]{1,8};/i\n\t\t]\n\t};\n\n\tPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\t\tPrism.languages.markup['entity'];\n\tPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\n\tObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t\t/**\n\t\t * Adds an inlined language to markup.\n\t\t *\n\t\t * An example of an inlined language is CSS with `<style>` tags.\n\t\t *\n\t\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t\t * case insensitive.\n\t\t * @param {string} lang The language key.\n\t\t * @example\n\t\t * addInlined('style', 'css');\n\t\t */\n\t\tvalue: function addInlined(tagName, lang) {\n\t\t\tvar includedCdataInside = {};\n\t\t\tincludedCdataInside['language-' + lang] = {\n\t\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages[lang]\n\t\t\t};\n\t\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\t\tvar inside = {\n\t\t\t\t'included-cdata': {\n\t\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\t\tinside: includedCdataInside\n\t\t\t\t}\n\t\t\t};\n\t\t\tinside['language-' + lang] = {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\tinside: Prism.languages[lang]\n\t\t\t};\n\n\t\t\tvar def = {};\n\t\t\tdef[tagName] = {\n\t\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: inside\n\t\t\t};\n\n\t\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t\t}\n\t});\n\tObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t\t/**\n\t\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t\t *\n\t\t * An example of an inlined language is CSS with `style` attributes.\n\t\t *\n\t\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t\t * case insensitive.\n\t\t * @param {string} lang The language key.\n\t\t * @example\n\t\t * addAttribute('style', 'css');\n\t\t */\n\t\tvalue: function (attrName, lang) {\n\t\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t\t'i'\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tPrism.languages.html = Prism.languages.markup;\n\tPrism.languages.mathml = Prism.languages.markup;\n\tPrism.languages.svg = Prism.languages.markup;\n\n\tPrism.languages.xml = Prism.languages.extend('markup', {});\n\tPrism.languages.ssml = Prism.languages.xml;\n\tPrism.languages.atom = Prism.languages.xml;\n\tPrism.languages.rss = Prism.languages.xml;\n\n\t(function (Prism) {\n\n\t\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\t\tPrism.languages.css = {\n\t\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t'atrule': {\n\t\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\t\tinside: {\n\t\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t\t'selector-function-argument': {\n\t\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'selector'\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': {\n\t\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'url': {\n\t\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /^url/i,\n\t\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\t\talias: 'url'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\t'string': {\n\t\t\t\tpattern: string,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\t'important': /!important\\b/i,\n\t\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t\t'punctuation': /[(){};:,]/\n\t\t};\n\n\t\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\t\tvar markup = Prism.languages.markup;\n\t\tif (markup) {\n\t\t\tmarkup.tag.addInlined('style', 'css');\n\t\t\tmarkup.tag.addAttribute('style', 'css');\n\t\t}\n\n\t}(Prism));\n\n\tPrism.languages.clike = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[.\\\\]/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'function': /\\w+(?=\\()/,\n\t\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'class-name': [\n\t\t\tPrism.languages.clike['class-name'],\n\t\t\t{\n\t\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /((?:^|})\\s*)catch\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t],\n\t\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n\t});\n\n\tPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'regex-source': {\n\t\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-regex',\n\t\t\t\t\tinside: Prism.languages.regex\n\t\t\t\t},\n\t\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t\t}\n\t\t},\n\t\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t\t'function-variable': {\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'parameter': [\n\t\t\t{\n\t\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t}\n\t\t],\n\t\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'string', {\n\t\t'hashbang': {\n\t\t\tpattern: /^#!.*/,\n\t\t\tgreedy: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'template-string': {\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'template-punctuation': {\n\t\t\t\t\tpattern: /^`|`$/,\n\t\t\t\t\talias: 'string'\n\t\t\t\t},\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t}\n\t});\n\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t\t// add attribute support for all DOM events.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\t\tPrism.languages.markup.tag.addAttribute(\n\t\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t\t'javascript'\n\t\t);\n\t}\n\n\tPrism.languages.js = Prism.languages.javascript;\n\n\t(function (Prism) {\n\n\t\tvar coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n\n\t\tPrism.languages.abnf = {\n\t\t\t'comment': /;.*/,\n\t\t\t'string': {\n\t\t\t\tpattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^%[is]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'range': {\n\t\t\t\tpattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t'terminal': {\n\t\t\t\tpattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t'repetition': {\n\t\t\t\tpattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'operator'\n\t\t\t},\n\t\t\t'definition': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /<|>/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'core-rule': {\n\t\t\t\tpattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: ['rule', 'constant'],\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /<|>/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rule': {\n\t\t\t\tpattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /<|>/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'operator': /=\\/?|\\//,\n\t\t\t'punctuation': /[()\\[\\]]/\n\t\t};\n\n\t}(Prism));\n\n\tPrism.languages.actionscript = Prism.languages.extend('javascript', {\n\t\t'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n\t\t'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n\t});\n\tPrism.languages.actionscript['class-name'].alias = 'function';\n\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('actionscript', 'string', {\n\t\t\t'xml': {\n\t\t\t\tpattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.markup\n\t\t\t}\n\t\t});\n\t}\n\t;\n\tPrism.languages.apl = {\n\t\t'comment': /(?:⍝|#[! ]).*$/m,\n\t\t'string': {\n\t\t\tpattern: /'(?:[^'\\r\\n]|'')*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n\t\t'statement': /:[A-Z][a-z][A-Za-z]*\\b/,\n\t\t'system-function': {\n\t\t\tpattern: /⎕[A-Z]+/i,\n\t\t\talias: 'function'\n\t\t},\n\t\t'constant': /[⍬⌾#⎕⍞]/,\n\t\t'function': /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n\t\t'monadic-operator': {\n\t\t\tpattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'dyadic-operator': {\n\t\t\tpattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'assignment': {\n\t\t\tpattern: /←/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'punctuation': /[\\[;\\]()◇⋄]/,\n\t\t'dfn': {\n\t\t\tpattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n\t\t\talias: 'builtin'\n\t\t}\n\t};\n\n\tPrism.languages.c = Prism.languages.extend('clike', {\n\t\t'comment': {\n\t\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t\t'function': /[a-z_]\\w*(?=\\s*\\()/i,\n\t\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n\t});\n\n\tPrism.languages.insertBefore('c', 'string', {\n\t\t'macro': {\n\t\t\t// allow for multiline macro definitions\n\t\t\t// spaces after the # character compile fine with gcc\n\t\t\tpattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t'string': [\n\t\t\t\t\t{\n\t\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\tPrism.languages.c['string']\n\t\t\t\t],\n\t\t\t\t'comment': Prism.languages.c['comment'],\n\t\t\t\t'macro-name': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t// highlight macro directives as keywords\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'directive-hash': /^#/,\n\t\t\t\t'punctuation': /##|\\\\(?=[\\r\\n])/,\n\t\t\t\t'expression': {\n\t\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\t\tinside: Prism.languages.c\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// highlight predefined macros as constants\n\t\t'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n\t});\n\n\tdelete Prism.languages.c['boolean'];\n\n\t(function (Prism) {\n\n\t\tvar keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n\t\tvar modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () { return keyword.source; });\n\n\t\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t\t'class-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source\n\t\t\t\t\t\t.replace(/<keyword>/g, function () { return keyword.source; })),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t// This is intended to capture the class name of method implementations like:\n\t\t\t\t//   void foo::bar() const {}\n\t\t\t\t// However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n\t\t\t\t// it starts with an uppercase letter. This approximation should give decent results.\n\t\t\t\t/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n\t\t\t\t// This will capture the class name before destructors like:\n\t\t\t\t//   Foo::~Foo() {}\n\t\t\t\t/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n\t\t\t\t// This also intends to capture the class name of method implementations but here the class has template\n\t\t\t\t// parameters, so it can't be a namespace (until C++ adds generic namespaces).\n\t\t\t\t/\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n\t\t\t],\n\t\t\t'keyword': keyword,\n\t\t\t'number': {\n\t\t\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n\t\t\t'boolean': /\\b(?:true|false)\\b/\n\t\t});\n\n\t\tPrism.languages.insertBefore('cpp', 'string', {\n\t\t\t'module': {\n\t\t\t\t// https://en.cppreference.com/w/cpp/language/modules\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/(\\b(?:module|import)\\s+)/.source +\n\t\t\t\t\t'(?:' +\n\t\t\t\t\t// header-name\n\t\t\t\t\t/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// module name or partition or both\n\t\t\t\t\t/<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () { return modName; }) +\n\t\t\t\t\t')'\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': /^[<\"][\\s\\S]+/,\n\t\t\t\t\t'operator': /:/,\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'raw-string': {\n\t\t\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\t\t\talias: 'string',\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('cpp', 'keyword', {\n\t\t\t'generic-function': {\n\t\t\t\tpattern: /\\b[a-z_]\\w*\\s*<(?:[^<>]|<(?:[^<>])*>)*>(?=\\s*\\()/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /^\\w+/,\n\t\t\t\t\t'generic': {\n\t\t\t\t\t\tpattern: /<[\\s\\S]+/,\n\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\tinside: Prism.languages.cpp\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('cpp', 'operator', {\n\t\t\t'double-colon': {\n\t\t\t\tpattern: /::/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('cpp', 'class-name', {\n\t\t\t// the base clause is an optional list of parent classes\n\t\t\t// https://en.cppreference.com/w/cpp/language/class\n\t\t\t'base-clause': {\n\t\t\t\tpattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: Prism.languages.extend('cpp', {})\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('inside', 'double-colon', {\n\t\t\t// All untokenized words that are not namespaces should be class names\n\t\t\t'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n\t\t}, Prism.languages.cpp['base-clause']);\n\n\t}(Prism));\n\n\tPrism.languages.arduino = Prism.languages.extend('cpp', {\n\t\t'constant': /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/,\n\t\t'keyword': /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n\t\t'builtin': /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/\n\t});\n\n\t(function (Prism) {\n\n\t\tvar attributes = {\n\t\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'quoted': {\n\t\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^[$`]|[$`]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpreted': {\n\t\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^'|'$/\n\t\t\t\t\t\t// See rest below\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t\t'variable': /\\w+(?==)/,\n\t\t\t\t'punctuation': /^\\[|\\]$|,/,\n\t\t\t\t'operator': /=/,\n\t\t\t\t// The negative look-ahead prevents blank matches\n\t\t\t\t'attr-value': /(?!^\\s+$).+/\n\t\t\t}\n\t\t};\n\n\t\tvar asciidoc = Prism.languages.asciidoc = {\n\t\t\t'comment-block': {\n\t\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n\t\t\t\talias: 'comment'\n\t\t\t},\n\t\t\t'table': {\n\t\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'specifiers': {\n\t\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n\t\t\t\t\t\talias: 'attr-value'\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'passthrough-block': {\n\t\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^\\++|\\++$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Literal blocks and listing blocks\n\t\t\t'literal-block': {\n\t\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Sidebar blocks, quote blocks, example blocks and open blocks\n\t\t\t'other-block': {\n\t\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// list-punctuation and list-label must appear before indented-block\n\t\t\t'list-punctuation': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'list-label': {\n\t\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\t\t\t'indented-block': {\n\t\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\n\t\t\t'comment': /^\\/\\/.*/m,\n\t\t\t'title': {\n\t\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attribute-entry': {\n\t\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\t'attributes': attributes,\n\t\t\t'hr': {\n\t\t\t\tpattern: /^'{3,}$/m,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'page-break': {\n\t\t\t\tpattern: /^<{3,}$/m,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'admonition': {\n\t\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'callout': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'symbol'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /<\\d+>/,\n\t\t\t\t\talias: 'symbol'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'macro': {\n\t\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,\n\t\t\t\t\t'punctuation': /^::?/,\n\t\t\t\t\t'attributes': {\n\t\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\t\t\t\tinside: attributes.inside\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'inline': {\n\t\t\t\t/*\n\t\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.\n\n\t\t\t\tQuoted text can be multi-line but cannot span an empty line.\n\t\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n\n\t\t\t\tFirst, we handle the constrained quotes.\n\t\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n\t\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n\n\t\t\t\tThen we handle the unconstrained quotes.\n\t\t\t\tThose do not have the restrictions of the constrained quotes.\n\t\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n\t\t\t\t */\n\t\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attributes': attributes,\n\t\t\t\t\t'url': {\n\t\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attribute-ref': {\n\t\t\t\t\t\tpattern: /^\\{.+\\}$/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'variable': {\n\t\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,\n\t\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'italic': {\n\t\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'bold': {\n\t\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'replacement': {\n\t\t\t\tpattern: /\\((?:C|TM|R)\\)/,\n\t\t\t\talias: 'builtin'\n\t\t\t},\n\t\t\t'entity': /&#?[\\da-z]{1,8};/i,\n\t\t\t'line-continuation': {\n\t\t\t\tpattern: /(^| )\\+$/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t};\n\n\n\t\t// Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n\t\tfunction copyFromAsciiDoc(keys) {\n\t\t\tkeys = keys.split(' ');\n\n\t\t\tvar o = {};\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\to[keys[i]] = asciidoc[keys[i]];\n\t\t\t}\n\t\t\treturn o;\n\t\t}\n\n\t\tattributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\t\tasciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n\n\t\tasciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n\n\t\tasciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n\n\t\tasciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n\n\t\tasciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\n\t\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\t\tPrism.hooks.add('wrap', function (env) {\n\t\t\tif (env.type === 'entity') {\n\t\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.adoc = Prism.languages.asciidoc;\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\t/**\n\t\t * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n\t\t *\n\t\t * Note: This is a simple text based replacement. Be careful when using backreferences!\n\t\t *\n\t\t * @param {string} pattern the given pattern.\n\t\t * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n\t\t * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n\t\t * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n\t\t */\n\t\tfunction replace(pattern, replacements) {\n\t\t\treturn pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n\t\t\t\treturn '(?:' + replacements[+index] + ')';\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * @param {string} pattern\n\t\t * @param {string[]} replacements\n\t\t * @param {string} [flags]\n\t\t * @returns {RegExp}\n\t\t */\n\t\tfunction re(pattern, replacements, flags) {\n\t\t\treturn RegExp(replace(pattern, replacements), flags || '');\n\t\t}\n\n\t\t/**\n\t\t * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n\t\t *\n\t\t * @param {string} pattern\n\t\t * @param {number} depthLog2\n\t\t * @returns {string}\n\t\t */\n\t\tfunction nested(pattern, depthLog2) {\n\t\t\tfor (var i = 0; i < depthLog2; i++) {\n\t\t\t\tpattern = pattern.replace(/<<self>>/g, function () { return '(?:' + pattern + ')'; });\n\t\t\t}\n\t\t\treturn pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n\t\t}\n\n\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n\t\tvar keywordKinds = {\n\t\t\t// keywords which represent a return or variable type\n\t\t\ttype: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n\t\t\t// keywords which are used to declare a type\n\t\t\ttypeDeclaration: 'class enum interface struct',\n\t\t\t// contextual keywords\n\t\t\t// (\"var\" and \"dynamic\" are missing because they are used like types)\n\t\t\tcontextual: 'add alias and ascending async await by descending from get global group into join let nameof not notnull on or orderby partial remove select set unmanaged value when where',\n\t\t\t// all other keywords\n\t\t\tother: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n\t\t};\n\n\t\t// keywords\n\t\tfunction keywordsToPattern(words) {\n\t\t\treturn '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n\t\t}\n\t\tvar typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n\t\tvar keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n\t\tvar nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n\t\tvar nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n\n\t\t// types\n\t\tvar generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2); // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n\t\tvar nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n\t\tvar name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n\t\tvar genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic]);\n\t\tvar identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [nonTypeKeywords, genericName]);\n\t\tvar array = /\\[\\s*(?:,\\s*)*\\]/.source;\n\t\tvar typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [identifier, array]);\n\t\tvar tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array]);\n\t\tvar tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n\t\tvar typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [tuple, identifier, array]);\n\n\t\tvar typeInside = {\n\t\t\t'keyword': keywords,\n\t\t\t'punctuation': /[<>()?,.:[\\]]/\n\t\t};\n\n\t\t// strings & characters\n\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n\t\tvar character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source; // simplified pattern\n\t\tvar regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n\t\tvar verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n\n\n\t\tPrism.languages.csharp = Prism.languages.extend('clike', {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\tpattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(character),\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\talias: 'character'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'class-name': [\n\t\t\t\t{\n\t\t\t\t\t// Using static\n\t\t\t\t\t// using static System.Math;\n\t\t\t\t\tpattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Using alias (type)\n\t\t\t\t\t// using Project = PC.MyCompany.Project;\n\t\t\t\t\tpattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [name, typeExpression]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Using alias (alias)\n\t\t\t\t\t// using Project = PC.MyCompany.Project;\n\t\t\t\t\tpattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Type declarations\n\t\t\t\t\t// class Foo<A, B>\n\t\t\t\t\t// interface Foo<out A, B>\n\t\t\t\t\tpattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [typeDeclarationKeywords, genericName]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Single catch exception declaration\n\t\t\t\t\t// catch(Foo)\n\t\t\t\t\t// (things like catch(Foo e) is covered by variable declaration)\n\t\t\t\t\tpattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Name of the type parameter of generic constraints\n\t\t\t\t\t// where Foo : class\n\t\t\t\t\tpattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Casts and checks via as and is.\n\t\t\t\t\t// as Foo<A>, is Bar<B>\n\t\t\t\t\t// (things like if(a is Foo b) is covered by variable declaration)\n\t\t\t\t\tpattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: typeInside\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Variable, field and parameter declaration\n\t\t\t\t\t// (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n\t\t\t\t\tpattern: re(/\\b<<0>>(?=\\s+(?!<<1>>)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [typeExpression, nonContextualKeywords, name]),\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t],\n\t\t\t'keyword': keywords,\n\t\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n\t\t\t'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:ul|lu|[dflmu])?\\b/i,\n\t\t\t'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n\t\t\t'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n\t\t});\n\n\t\tPrism.languages.insertBefore('csharp', 'number', {\n\t\t\t'range': {\n\t\t\t\tpattern: /\\.\\./,\n\t\t\t\talias: 'operator'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('csharp', 'punctuation', {\n\t\t\t'named-parameter': {\n\t\t\t\tpattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('csharp', 'class-name', {\n\t\t\t'namespace': {\n\t\t\t\t// namespace Foo.Bar {}\n\t\t\t\t// using Foo.Bar;\n\t\t\t\tpattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'type-expression': {\n\t\t\t\t// default(Foo), typeof(Foo<Bar>), sizeof(int)\n\t\t\t\tpattern: re(/(\\b(?:default|typeof|sizeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'class-name',\n\t\t\t\tinside: typeInside\n\t\t\t},\n\t\t\t'return-type': {\n\t\t\t\t// Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n\t\t\t\t// int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n\t\t\t\t// int Foo => 0; int Foo { get; set } = 0;\n\t\t\t\tpattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [typeExpression, identifier]),\n\t\t\t\tinside: typeInside,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'constructor-invocation': {\n\t\t\t\t// new List<Foo<Bar[]>> { }\n\t\t\t\tpattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: typeInside,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t/*'explicit-implementation': {\n\t\t\t\t// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\n\t\t\t\tpattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\n\t\t\t\tinside: classNameInside,\n\t\t\t\talias: 'class-name'\n\t\t\t},*/\n\t\t\t'generic-method': {\n\t\t\t\t// foo<Bar>()\n\t\t\t\tpattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n\t\t\t\tinside: {\n\t\t\t\t\t'function': re(/^<<0>>/.source, [name]),\n\t\t\t\t\t'generic': {\n\t\t\t\t\t\tpattern: RegExp(generic),\n\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\tinside: typeInside\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'type-list': {\n\t\t\t\t// The list of types inherited or of generic constraints\n\t\t\t\t// class Foo<F> : Bar, IList<FooBar>\n\t\t\t\t// where F : Bar, IList<int>\n\t\t\t\tpattern: re(\n\t\t\t\t\t/\\b((?:<<0>>\\s+<<1>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>)(?:\\s*,\\s*(?:<<3>>|<<4>>))*(?=\\s*(?:where|[{;]|=>|$))/.source,\n\t\t\t\t\t[typeDeclarationKeywords, genericName, name, typeExpression, keywords.source]\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': keywords,\n\t\t\t\t\t'class-name': {\n\t\t\t\t\t\tpattern: RegExp(typeExpression),\n\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\tinside: typeInside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /,/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'preprocessor': {\n\t\t\t\tpattern: /(^\\s*)#.*/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'property',\n\t\t\t\tinside: {\n\t\t\t\t\t// highlight preprocessor directives as keywords\n\t\t\t\t\t'directive': {\n\t\t\t\t\t\tpattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// attributes\n\t\tvar regularStringOrCharacter = regularString + '|' + character;\n\t\tvar regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n\t\tvar roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\n\t\t// https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n\t\tvar attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n\t\tvar attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [identifier, roundExpression]);\n\n\t\tPrism.languages.insertBefore('csharp', 'class-name', {\n\t\t\t'attribute': {\n\t\t\t\t// Attributes\n\t\t\t\t// [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n\t\t\t\tpattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [attrTarget, attr]),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'target': {\n\t\t\t\t\t\tpattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t},\n\t\t\t\t\t'attribute-arguments': {\n\t\t\t\t\t\tpattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n\t\t\t\t\t\tinside: Prism.languages.csharp\n\t\t\t\t\t},\n\t\t\t\t\t'class-name': {\n\t\t\t\t\t\tpattern: RegExp(identifier),\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /[:,]/\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\t\t// string interpolation\n\t\tvar formatString = /:[^}\\r\\n]+/.source;\n\t\t// multi line\n\t\tvar mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\t\tvar mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [mInterpolationRound, formatString]);\n\t\t// single line\n\t\tvar sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n\t\tvar sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [sInterpolationRound, formatString]);\n\n\t\tfunction createInterpolationInside(interpolation, interpolationRound) {\n\t\t\treturn {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'format-string': {\n\t\t\t\t\t\t\tpattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [interpolationRound, formatString]),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'punctuation': /^:/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /^\\{|\\}$/,\n\t\t\t\t\t\t'expression': {\n\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\talias: 'language-csharp',\n\t\t\t\t\t\t\tinside: Prism.languages.csharp\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t};\n\t\t}\n\n\t\tPrism.languages.insertBefore('csharp', 'string', {\n\t\t\t'interpolation-string': [\n\t\t\t\t{\n\t\t\t\t\tpattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: createInterpolationInside(mInterpolation, mInterpolationRound),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: createInterpolationInside(sInterpolation, sInterpolationRound),\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t}(Prism));\n\n\tPrism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n\n\tPrism.languages.aspnet = Prism.languages.extend('markup', {\n\t\t'page-directive': {\n\t\t\tpattern: /<%\\s*@.*%>/i,\n\t\t\talias: 'tag',\n\t\t\tinside: {\n\t\t\t\t'page-directive': {\n\t\t\t\t\tpattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.markup.tag.inside\n\t\t\t}\n\t\t},\n\t\t'directive': {\n\t\t\tpattern: /<%.*%>/i,\n\t\t\talias: 'tag',\n\t\t\tinside: {\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /<%\\s*?[$=%#:]{0,2}|%>/i,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.csharp\n\t\t\t}\n\t\t}\n\t});\n\t// Regexp copied from prism-markup, with a negative look-ahead added\n\tPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n\t// match directives of attribute value foo=\"<% Bar %>\"\n\tPrism.languages.insertBefore('inside', 'punctuation', {\n\t\t'directive': Prism.languages.aspnet['directive']\n\t}, Prism.languages.aspnet.tag.inside['attr-value']);\n\n\tPrism.languages.insertBefore('aspnet', 'comment', {\n\t\t'asp-comment': {\n\t\t\tpattern: /<%--[\\s\\S]*?--%>/,\n\t\t\talias: ['asp', 'comment']\n\t\t}\n\t});\n\n\t// script runat=\"server\" contains csharp, not javascript\n\tPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n\t\t'asp-script': {\n\t\t\tpattern: /(<script(?=.*runat=['\"]?server['\"]?)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\talias: ['asp', 'script'],\n\t\t\tinside: Prism.languages.csharp || {}\n\t\t}\n\t});\n\n\t// NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n\tPrism.languages.autohotkey = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|\\s);.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^\\s*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n\t\t'tag': /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m, //labels\n\t\t'variable': /%\\w+%/,\n\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t'operator': /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\n\t\t'selector': /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n\t\t'constant': /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|programfiles|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n\t\t'builtin': /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|ltrim|rtrim|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|strreplace|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n\t\t'symbol': /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n\t\t'important': /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n\n\t\t'keyword': /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Throw|Try|Catch|Finally|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n\t\t'function': /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,\n\t\t'punctuation': /[{}[\\]():,]/\n\t};\n\n\t(function (Prism) {\n\t\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t\t// + make sure PS1..4 are here as they are not always set,\n\t\t// - some useless things.\n\t\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\n\t\tvar commandAfterHeredoc = {\n\t\t\tpattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation', // this looks reasonably well in all themes\n\t\t\tinside: null // see below\n\t\t};\n\n\t\tvar insideString = {\n\t\t\t'bash': commandAfterHeredoc,\n\t\t\t'environment': {\n\t\t\t\tpattern: RegExp('\\\\$' + envVars),\n\t\t\t\talias: 'constant'\n\t\t\t},\n\t\t\t'variable': [\n\t\t\t\t// [0]: Arithmetic Environment\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t\t'variable': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t\t'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// [1]: Command Substitution\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// [2]: Brace expansion\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t\t'environment': {\n\t\t\t\t\t\t\tpattern: RegExp('(\\\\{)' + envVars),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t\t],\n\t\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n\t\t};\n\n\t\tPrism.languages.bash = {\n\t\t\t'shebang': {\n\t\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'function-name': [\n\t\t\t\t// a) function foo {\n\t\t\t\t// b) foo() {\n\t\t\t\t// c) function foo() {\n\t\t\t\t// but not “foo {”\n\t\t\t\t{\n\t\t\t\t\t// a) and c)\n\t\t\t\t\tpattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// b)\n\t\t\t\t\tpattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t\t'for-or-select': {\n\t\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\t\talias: 'variable',\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// Highlight variable names as variables in the left-hand part\n\t\t\t// of assignments (“=” and “+=”).\n\t\t\t'assign-left': {\n\t\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'variable',\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': [\n\t\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: insideString\n\t\t\t\t},\n\t\t\t\t// Here-document with quotes around the tag\n\t\t\t\t// → No expansion (so no “inside”).\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'bash': commandAfterHeredoc\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// “Normal” string\n\t\t\t\t{\n\t\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n\t\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: insideString\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n\t\t\t\t\tpattern: /(^|[^$\\\\])'[^']*'/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n\t\t\t\t\tpattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'entity': insideString.entity\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'environment': {\n\t\t\t\tpattern: RegExp('\\\\$?' + envVars),\n\t\t\t\talias: 'constant'\n\t\t\t},\n\t\t\t'variable': insideString.variable,\n\t\t\t'function': {\n\t\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t\t'builtin': {\n\t\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n\t\t\t\tlookbehind: true,\n\t\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'boolean': {\n\t\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'file-descriptor': {\n\t\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'operator': {\n\t\t\t\t// Lots of redirections here, but not just that.\n\t\t\t\tpattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'file-descriptor': {\n\t\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\t\talias: 'important'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t\t'number': {\n\t\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t};\n\n\t\tcommandAfterHeredoc.inside = Prism.languages.bash;\n\n\t\t/* Patterns in command substitution. */\n\t\tvar toBeCopied = [\n\t\t\t'comment',\n\t\t\t'function-name',\n\t\t\t'for-or-select',\n\t\t\t'assign-left',\n\t\t\t'string',\n\t\t\t'environment',\n\t\t\t'function',\n\t\t\t'keyword',\n\t\t\t'builtin',\n\t\t\t'boolean',\n\t\t\t'file-descriptor',\n\t\t\t'operator',\n\t\t\t'punctuation',\n\t\t\t'number'\n\t\t];\n\t\tvar inside = insideString.variable[1].inside;\n\t\tfor (var i = 0; i < toBeCopied.length; i++) {\n\t\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t\t}\n\n\t\tPrism.languages.shell = Prism.languages.bash;\n\t}(Prism));\n\n\tPrism.languages.basic = {\n\t\t'comment': {\n\t\t\tpattern: /(?:!|REM\\b).+/i,\n\t\t\tinside: {\n\t\t\t\t'keyword': /^REM/i\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n\t\t'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n\t\t'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n\t\t'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n\t\t'punctuation': /[,;:()]/\n\t};\n\n\t(function (Prism) {\n\t\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\n\t\tvar parameter = {\n\t\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n\t\t\talias: 'attr-name',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t};\n\t\tvar string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n\t\tvar number = /(?:\\b|-)\\d+\\b/;\n\n\t\tPrism.languages.batch = {\n\t\t\t'comment': [\n\t\t\t\t/^::.*/m,\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'label': {\n\t\t\t\tpattern: /^:.*/m,\n\t\t\t\talias: 'property'\n\t\t\t},\n\t\t\t'command': [\n\t\t\t\t{\n\t\t\t\t\t// FOR command\n\t\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t\t'variable': variable,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// IF command\n\t\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t\t'variable': variable,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// ELSE command\n\t\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^else\\b/i\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// SET command\n\t\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^set\\b/i,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t\t'variable': [\n\t\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n\t\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Other commands\n\t\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^\\w+\\b/i,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t\t'label': {\n\t\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'variable': variable,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': /\\^/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'operator': /[&@]/,\n\t\t\t'punctuation': /[()']/\n\t\t};\n\t}(Prism));\n\n\tPrism.languages.bnf = {\n\t\t'string': {\n\t\t\tpattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n\t\t},\n\t\t'definition': {\n\t\t\tpattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n\t\t\talias: ['rule', 'keyword'],\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^<|>$/\n\t\t\t}\n\t\t},\n\t\t'rule': {\n\t\t\tpattern: /<[^<>\\r\\n\\t]+>/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^<|>$/\n\t\t\t}\n\t\t},\n\t\t'operator': /::=|[|()[\\]{}*+?]|\\.{3}/\n\t};\n\n\tPrism.languages.rbnf = Prism.languages.bnf;\n\n\tPrism.languages.brainfuck = {\n\t\t'pointer': {\n\t\t\tpattern: /<|>/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'increment': {\n\t\t\tpattern: /\\+/,\n\t\t\talias: 'inserted'\n\t\t},\n\t\t'decrement': {\n\t\t\tpattern: /-/,\n\t\t\talias: 'deleted'\n\t\t},\n\t\t'branching': {\n\t\t\tpattern: /\\[|\\]/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': /[.,]/,\n\t\t'comment': /\\S+/\n\t};\n\tPrism.languages.brightscript = {\n\t\t'comment': /(?:\\brem|').*/i,\n\t\t'directive-statement': {\n\t\t\tpattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t'error-message': {\n\t\t\t\t\tpattern: /(^#error).+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'expression': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\bAs[\\t ]+)\\w+/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n\t\t'boolean': /\\b(?:true|false)\\b/i,\n\t\t'function': /\\b(?!\\d)\\w+(?=[\\t ]*\\()/i,\n\t\t'number': /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n\t\t'operator': /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n\t\t'punctuation': /[.,;()[\\]{}]/,\n\t\t'constant': /\\b(?:LINE_NUM)\\b/i\n\t};\n\n\tPrism.languages.brightscript['directive-statement'].inside.expression.inside = Prism.languages.brightscript;\n\n\t// Copied from https://github.com/jeluard/prism-clojure\n\tPrism.languages.clojure = {\n\t\t'comment': /;.*/,\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'operator': /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, //used for symbols and keywords\n\t\t'keyword': {\n\t\t\tpattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'boolean': /\\b(?:true|false|nil)\\b/,\n\t\t'number': /\\b[\\da-f]+\\b/i,\n\t\t'punctuation': /[{}\\[\\](),]/\n\t};\n\n\tPrism.languages.cobol = {\n\t\t'comment': {\n\t\t\tpattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t'level': {\n\t\t\tpattern: /(^[ \\t]*)\\d+\\b/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'number'\n\t\t},\n\n\t\t'class-name': {\n\t\t\t// https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n\t\t\tpattern: /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'number': {\n\t\t\t\t\tpattern: /(\\()\\d+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /[()]/\n\t\t\t}\n\t\t},\n\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOUNDS|BOTTOM|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COLLATING|COL|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOP|ERASE|ERROR|EOL|EOS|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTIONNAME|FUNCTION-POINTER|GENERATE|GOBACK|GIVING|GLOBAL|GO|GRID|GROUP|HEADING|HIGHLIGHT|HIGH-VALUE|HIGH-VALUES|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINES|LINE-COUNTER|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOWER|LOWLIGHT|LOW-VALUE|LOW-VALUES|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|POSITION|POSITIVE|PORT|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|READER|REMOTE|RD|REAL|READ|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|REVERSE-VIDEO|RESET|RETURN|RETURN-CODE|RETURNING|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TASK|TAPE|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYMMDD|YYYYDDD|ZERO-FILL|ZEROS|ZEROES)(?![\\w-])/i,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'boolean': {\n\t\t\tpattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': {\n\t\t\tpattern: /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': [\n\t\t\t/<>|[<>]=?|[=+*/&]/,\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.:,()]/\n\t};\n\n\t(function (Prism) {\n\n\t// Ignore comments starting with { to privilege string interpolation highlighting\n\tvar comment = /#(?!\\{).+/;\n\tvar interpolation = {\n\t\tpattern: /#\\{[^}]+\\}/,\n\t\talias: 'variable'\n\t};\n\n\tPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t\t'comment': comment,\n\t\t'string': [\n\n\t\t\t// Strings are multiline\n\t\t\t{\n\t\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t{\n\t\t\t\t// Strings are multiline\n\t\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t\t'class-member': {\n\t\t\tpattern: /@(?!\\d)\\w+/,\n\t\t\talias: 'variable'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('coffeescript', 'comment', {\n\t\t'multiline-comment': {\n\t\t\tpattern: /###[\\s\\S]+?###/,\n\t\t\talias: 'comment'\n\t\t},\n\n\t\t// Block regexp can contain comments and interpolation\n\t\t'block-regex': {\n\t\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\t\talias: 'regex',\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('coffeescript', 'string', {\n\t\t'inline-javascript': {\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^`|`$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\t'script': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\talias: 'language-javascript',\n\t\t\t\t\tinside: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Block strings\n\t\t'multiline-string': [\n\t\t\t{\n\t\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\tinterpolation: interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\n\t});\n\n\tPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t\t// Object property\n\t\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n\t});\n\n\tdelete Prism.languages.coffeescript['template-string'];\n\n\tPrism.languages.coffee = Prism.languages.coffeescript;\n\t}(Prism));\n\n\t/**\n\t * Original by Samuel Flores\n\t *\n\t * Adds the following new token classes:\n\t *     constant, builtin, variable, symbol, regex\n\t */\n\t(function (Prism) {\n\t\tPrism.languages.ruby = Prism.languages.extend('clike', {\n\t\t\t'comment': [\n\t\t\t\t/#.*/,\n\t\t\t\t{\n\t\t\t\t\tpattern: /^=begin\\s[\\s\\S]*?^=end/m,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'class-name': {\n\t\t\t\tpattern: /(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[.\\\\]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/\n\t\t});\n\n\t\tvar interpolation = {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t};\n\n\t\tdelete Prism.languages.ruby.function;\n\n\t\tPrism.languages.insertBefore('ruby', 'keyword', {\n\t\t\t'regex': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(/%r/.source + '(?:' + [\n\t\t\t\t\t\t/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n\t\t\t\t\t\t/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n\t\t\t\t\t\t// Here we need to specifically allow interpolation\n\t\t\t\t\t\t/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n\t\t\t\t\t\t/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n\t\t\t\t\t\t/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n\t\t\t\t\t].join('|') + ')' + /[egimnosux]{0,6}/.source),\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t\t'symbol': {\n\t\t\t\tpattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'method-definition': {\n\t\t\t\tpattern: /(\\bdef\\s+)[\\w.]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /\\w+$/,\n\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('ruby', 'number', {\n\t\t\t'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n\t\t\t'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n\t\t});\n\n\t\tPrism.languages.ruby.string = [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/%[qQiIwWxs]?/.source + '(?:' + [\n\t\t\t\t\t/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n\t\t\t\t\t/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n\t\t\t\t\t// Here we need to specifically allow interpolation\n\t\t\t\t\t/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n\t\t\t\t\t/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n\t\t\t\t\t/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n\t\t\t\t].join('|') + ')'),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tPrism.languages.rb = Prism.languages.ruby;\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tPrism.languages.crystal = Prism.languages.extend('ruby', {\n\t\t\tkeyword: [\n\t\t\t\t/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\n\t\t\tnumber: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n\t\t});\n\n\t\tPrism.languages.insertBefore('crystal', 'string', {\n\t\t\tattribute: {\n\t\t\t\tpattern: /@\\[.+?\\]/,\n\t\t\t\talias: 'attr-name',\n\t\t\t\tinside: {\n\t\t\t\t\tdelimiter: {\n\t\t\t\t\t\tpattern: /^@\\[|\\]$/,\n\t\t\t\t\t\talias: 'tag'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.crystal\n\t\t\t\t}\n\t\t\t},\n\n\t\t\texpansion: [\n\t\t\t{\n\t\t\t\tpattern: /\\{\\{.+?\\}\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\tdelimiter: {\n\t\t\t\t\t\tpattern: /^\\{\\{|\\}\\}$/,\n\t\t\t\t\t\talias: 'tag'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.crystal\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\{%.+?%\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\tdelimiter: {\n\t\t\t\t\t\tpattern: /^\\{%|%\\}$/,\n\t\t\t\t\t\talias: 'tag'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.crystal\n\t\t\t\t}\n\t\t\t}\n\t\t\t]\n\t\t});\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\t\tvar selectorInside;\n\n\t\tPrism.languages.css.selector = {\n\t\t\tpattern: Prism.languages.css.selector,\n\t\t\tinside: selectorInside = {\n\t\t\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n\t\t\t\t'pseudo-class': /:[-\\w]+/,\n\t\t\t\t'class': /\\.[-\\w]+/,\n\t\t\t\t'id': /#[-\\w]+/,\n\t\t\t\t'attribute': {\n\t\t\t\t\tpattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^\\[|\\]$/,\n\t\t\t\t\t\t'case-sensitivity': {\n\t\t\t\t\t\t\tpattern: /(\\s)[si]$/i,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'namespace': {\n\t\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'punctuation': /\\|$/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-value': [\n\t\t\t\t\t\t\tstring,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'operator': /[|~*^$]?=/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'n-th': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'number': /[\\dn]+/,\n\t\t\t\t\t\t\t'operator': /[+-]/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'combinator': />|\\+|~|\\|\\|/,\n\n\t\t\t\t// the `tag` token has been existed and removed.\n\t\t\t\t// because we can't find a perfect tokenize to match it.\n\t\t\t\t// if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n\t\t\t\t'punctuation': /[(),]/,\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n\n\t\tPrism.languages.insertBefore('css', 'property', {\n\t\t\t'variable': {\n\t\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t\tvar unit = {\n\t\t\tpattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n\t\t\tlookbehind: true\n\t\t};\n\t\t// 123 -123 .123 -.123 12.3 -12.3\n\t\tvar number = {\n\t\t\tpattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n\t\t\tlookbehind: true\n\t\t};\n\n\t\tPrism.languages.insertBefore('css', 'function', {\n\t\t\t'operator': {\n\t\t\t\tpattern: /(\\s)[+\\-*\\/](?=\\s)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// CAREFUL!\n\t\t\t// Previewers and Inline color use hexcode and color.\n\t\t\t'hexcode': {\n\t\t\t\tpattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n\t\t\t\talias: 'color'\n\t\t\t},\n\t\t\t'color': [\n\t\t\t\t/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'unit': unit,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\n\t\t\t\t\t\t'punctuation': /[(),]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t// it's important that there is no boundary assertion after the hex digits\n\t\t\t'entity': /\\\\[\\da-f]{1,8}/i,\n\t\t\t'unit': unit,\n\t\t\t'number': number\n\t\t});\n\n\t}(Prism));\n\n\t// https://tools.ietf.org/html/rfc4180\n\n\tPrism.languages.csv = {\n\t\t'value': /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n\t\t'punctuation': /,/\n\t};\n\n\tPrism.languages.d = Prism.languages.extend('clike', {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\t// Shebang\n\t\t\t\tpattern: /^\\s*#!.+/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(^|[^\\\\])/.source + '(?:' + [\n\t\t\t\t\t// /+ comment +/\n\t\t\t\t\t// Allow one level of nesting\n\t\t\t\t\t/\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n\t\t\t\t\t// // comment\n\t\t\t\t\t/\\/\\/.*/.source,\n\t\t\t\t\t// /* comment */\n\t\t\t\t\t/\\/\\*[\\s\\S]*?\\*\\//.source\n\t\t\t\t].join('|') + ')'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: RegExp([\n\t\t\t\t\t// r\"\", x\"\"\n\t\t\t\t\t/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n\n\t\t\t\t\t// q\"[]\", q\"()\", q\"<>\", q\"{}\"\n\t\t\t\t\t/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n\n\t\t\t\t\t// q\"IDENT\n\t\t\t\t\t// ...\n\t\t\t\t\t// IDENT\"\n\t\t\t\t\t/\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n\n\t\t\t\t\t// q\"//\", q\"||\", etc.\n\t\t\t\t\t/\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n\n\t\t\t\t\t// Characters\n\t\t\t\t\t// 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n\t\t\t\t\t/'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source,\n\n\t\t\t\t\t/([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n\t\t\t\t].join('|'), 'm'),\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'token-string'\n\t\t\t}\n\t\t],\n\n\t\t// In order: $, keywords and special tokens, globally defined symbols\n\t\t'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n\n\t\t'number': [\n\t\t\t// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n\t\t\t// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n\t\t\t/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n\t\t\t{\n\t\t\t\tpattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\n\t\t'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n\t});\n\n\tPrism.languages.insertBefore('d', 'keyword', {\n\t\t'property': /\\B@\\w*/\n\t});\n\n\tPrism.languages.insertBefore('d', 'function', {\n\t\t'register': {\n\t\t\t// Iasm registers\n\t\t\tpattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n\t\t\talias: 'variable'\n\t\t}\n\t});\n\n\t(function (Prism) {\n\t\tvar keywords = [\n\t\t\t/\\b(?:async|sync|yield)\\*/,\n\t\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n\t\t];\n\n\t\t// Handles named imports, such as http.Client\n\t\tvar packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t\t// based on the dart naming conventions\n\t\tvar className = {\n\t\t\tpattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'namespace': {\n\t\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.dart = Prism.languages.extend('clike', {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'class-name': [\n\t\t\t\tclassName,\n\t\t\t\t{\n\t\t\t\t\t// variables and parameters\n\t\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\t\tpattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: className.inside\n\t\t\t\t}\n\t\t\t],\n\t\t\t'keyword': keywords,\n\t\t\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n\t\t});\n\n\t\tPrism.languages.insertBefore('dart', 'function', {\n\t\t\t'metadata': {\n\t\t\t\tpattern: /@\\w+/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('dart', 'class-name', {\n\t\t\t'generics': {\n\t\t\t\tpattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n\t\t\t\tinside: {\n\t\t\t\t\t'class-name': className,\n\t\t\t\t\t'keyword': keywords,\n\t\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t\t'operator': /[?&|]/\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tPrism.languages.diff = {\n\t\t\t'coord': [\n\t\t\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n\t\t\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n\t\t\t\t// Match \"@@ ... @@\" coord lines in unified diff.\n\t\t\t\t/^@@.*@@$/m,\n\t\t\t\t// Match coord lines in normal diff (starts with a number).\n\t\t\t\t/^\\d.*$/m\n\t\t\t]\n\n\t\t\t// deleted, inserted, unchanged, diff\n\t\t};\n\n\t\t/**\n\t\t * A map from the name of a block to its line prefix.\n\t\t *\n\t\t * @type {Object<string, string>}\n\t\t */\n\t\tvar PREFIXES = {\n\t\t\t'deleted-sign': '-',\n\t\t\t'deleted-arrow': '<',\n\t\t\t'inserted-sign': '+',\n\t\t\t'inserted-arrow': '>',\n\t\t\t'unchanged': ' ',\n\t\t\t'diff': '!',\n\t\t};\n\n\t\t// add a token for each prefix\n\t\tObject.keys(PREFIXES).forEach(function (name) {\n\t\t\tvar prefix = PREFIXES[name];\n\n\t\t\tvar alias = [];\n\t\t\tif (!/^\\w+$/.test(name)) { // \"deleted-sign\" -> \"deleted\"\n\t\t\t\talias.push(/\\w+/.exec(name)[0]);\n\t\t\t}\n\t\t\tif (name === 'diff') {\n\t\t\t\talias.push('bold');\n\t\t\t}\n\n\t\t\tPrism.languages.diff[name] = {\n\t\t\t\tpattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n\t\t\t\talias: alias,\n\t\t\t\tinside: {\n\t\t\t\t\t'line': {\n\t\t\t\t\t\tpattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'prefix': {\n\t\t\t\t\t\tpattern: /[\\s\\S]/,\n\t\t\t\t\t\talias: /\\w+/.exec(name)[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t});\n\n\t\t// make prefixes available to Diff plugin\n\t\tObject.defineProperty(Prism.languages.diff, 'PREFIXES', {\n\t\t\tvalue: PREFIXES\n\t\t});\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\t// Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n\t\t// that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n\t\tvar spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n\t\t// At least one space, comment, or line break\n\t\tvar space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source\n\t\t\t.replace(/<SP_BS>/g, function () { return spaceAfterBackSlash; });\n\n\t\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n\t\tvar option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function () { return string; });\n\n\t\tvar stringRule = {\n\t\t\tpattern: RegExp(string),\n\t\t\tgreedy: true\n\t\t};\n\t\tvar commentRule = {\n\t\t\tpattern: /(^[ \\t]*)#.*/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t};\n\n\t\t/**\n\t\t * @param {string} source\n\t\t * @param {string} flags\n\t\t * @returns {RegExp}\n\t\t */\n\t\tfunction re(source, flags) {\n\t\t\tsource = source\n\t\t\t\t.replace(/<OPT>/g, function () { return option; })\n\t\t\t\t.replace(/<SP>/g, function () { return space; });\n\n\t\t\treturn RegExp(source, flags);\n\t\t}\n\n\t\tPrism.languages.docker = {\n\t\t\t'instruction': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/mi,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'options': {\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'property': {\n\t\t\t\t\t\t\t\tpattern: /(^|\\s)--[\\w-]+/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'string': [\n\t\t\t\t\t\t\t\tstringRule,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n\t\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'operator': /\\\\$/m,\n\t\t\t\t\t\t\t'punctuation': /=/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#healthcheck\n\t\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, 'i'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#from\n\t\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, 'i'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#onbuild\n\t\t\t\t\t\t\tpattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^\\w+/,\n\t\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'comment': commentRule,\n\t\t\t\t\t'string': stringRule,\n\t\t\t\t\t'variable': /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n\t\t\t\t\t'operator': /\\\\$/m\n\t\t\t\t}\n\t\t\t},\n\t\t\t'comment': commentRule\n\t\t};\n\n\t\tPrism.languages.dockerfile = Prism.languages.docker;\n\n\t}(Prism));\n\n\tPrism.languages.ebnf = {\n\t\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t\t'string': {\n\t\t\tpattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'special': {\n\t\t\tpattern: /\\?[^?\\r\\n]*\\?/,\n\t\t\tgreedy: true,\n\t\t\talias: 'class-name'\n\t\t},\n\n\t\t'definition': {\n\t\t\tpattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n\t\t\tlookbehind: true,\n\t\t\talias: ['rule', 'keyword']\n\t\t},\n\t\t'rule': /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n\n\t\t'punctuation': /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n\t\t'operator': /[-=|*/!]/\n\t};\n\n\tPrism.languages.editorconfig = {\n\t\t// https://editorconfig-specification.readthedocs.io/en/latest/\n\t\t'comment': /[;#].*/,\n\t\t'section': {\n\t\t\tpattern: /(^[ \\t]*)\\[.+]/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword',\n\t\t\tinside: {\n\t\t\t\t'regex': /\\\\\\\\[\\[\\]{},!?.*]/, // Escape special characters with '\\\\'\n\t\t\t\t'operator': /[!?]|\\.\\.|\\*{1,2}/,\n\t\t\t\t'punctuation': /[\\[\\]{},]/\n\t\t\t}\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'value': {\n\t\t\tpattern: /=.*/,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^=/\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.languages.elixir = {\n\t\t'doc': {\n\t\t\tpattern: /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n\t\t\tinside: {\n\t\t\t\t'attribute': /^@\\w+/,\n\t\t\t\t'string': /['\"][\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /#.*/m,\n\t\t\tgreedy: true\n\t\t},\n\t\t// ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n\t\t'regex': {\n\t\t\tpattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': [\n\t\t\t{\n\t\t\t\t// ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n\t\t\t\tpattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Multi-line strings are allowed\n\t\t\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'atom': {\n\t\t\t// Look-behind prevents bad highlighting of the :: operator\n\t\t\tpattern: /(^|[^:]):\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'module': {\n\t\t\tpattern: /\\b[A-Z]\\w*\\b/,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t// Look-ahead prevents bad highlighting of the :: operator\n\t\t'attr-name': /\\w+\\??:(?!:)/,\n\t\t'argument': {\n\t\t\t// Look-behind prevents bad highlighting of the && operator\n\t\t\tpattern: /(^|[^&])&\\d+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'attribute': {\n\t\t\tpattern: /@\\w+/,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'function': /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d+))/,\n\t\t'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n\t\t'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct|delegate)?|do|else|end|fn|for|if|import|not|or|raise|require|rescue|try|unless|use|when)\\b/,\n\t\t'boolean': /\\b(?:true|false|nil)\\b/,\n\t\t'operator': [\n\t\t\t/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n\t\t\t{\n\t\t\t\t// We don't want to match <<\n\t\t\t\tpattern: /([^<])<(?!<)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// We don't want to match >>\n\t\t\t\tpattern: /([^>])>(?!>)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n\t};\n\n\tPrism.languages.elixir.string.forEach(function (o) {\n\t\to.inside = {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.elixir\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\tPrism.languages.elm = {\n\t\t'comment': /--.*|{-[\\s\\S]*?-}/,\n\t\t'char': {\n\t\t\tpattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': [\n\t\t\t{\n\t\t\t\t// Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n\t\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'import-statement': {\n\t\t\t// The imported or hidden names are not included in this import\n\t\t\t// statement. This is because we want to highlight those exactly like\n\t\t\t// we do for the names in the program.\n\t\t\tpattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n\t\t\tinside: {\n\t\t\t\t'keyword': /\\b(?:import|as|exposing)\\b/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n\t\t// These are builtin variables only. Constructors are highlighted later as a constant.\n\t\t'builtin': /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n\t\t// decimal integers and floating point numbers | hexadecimal integers\n\t\t'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n\t\t// Most of this is needed because of the meaning of a single '.'.\n\t\t// If it stands alone freely, it is the function composition.\n\t\t// It may also be a separator between a module name and an identifier => no\n\t\t// operator. If it comes together with other special characters it is an\n\t\t// operator too.\n\t\t// Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n\t\t// Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n\t\t'operator': /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n\t\t// In Elm, nearly everything is a variable, do not highlight these.\n\t\t'hvariable': /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n\t\t'constant': /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n\t\t'punctuation': /[{}[\\]|(),.:]/\n\t};\n\n\tPrism.languages.erlang = {\n\t\t'comment': /%.+/,\n\t\t'string': {\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'quoted-function': {\n\t\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'quoted-atom': {\n\t\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n\t\t\talias: 'atom'\n\t\t},\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n\t\t'number': [\n\t\t\t/\\$\\\\?./,\n\t\t\t/\\d+#[a-z0-9]+/i,\n\t\t\t/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n\t\t],\n\t\t'function': /\\b[a-z][\\w@]*(?=\\()/,\n\t\t'variable': {\n\t\t\t// Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n\t\t\tpattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': [\n\t\t\t/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n\t\t\t{\n\t\t\t\t// We don't want to match <<\n\t\t\t\tpattern: /(^|[^<])<(?!<)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// We don't want to match >>\n\t\t\t\tpattern: /(^|[^>])>(?!>)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'atom': /\\b[a-z][\\w@]*/,\n\t\t'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n\n\t};\n\n\tPrism.languages.fsharp = Prism.languages.extend('clike', {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /->|\\*/,\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n\t\t'number': [\n\t\t\t/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n\t\t\t/\\b0b[01]+(?:y|uy)?\\b/,\n\t\t\t/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n\t\t\t/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n\t\t],\n\t\t'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n\t});\n\tPrism.languages.insertBefore('fsharp', 'keyword', {\n\t\t'preprocessor': {\n\t\t\tpattern: /^[^\\r\\n\\S]*#.*/m,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tPrism.languages.insertBefore('fsharp', 'punctuation', {\n\t\t'computation-expression': {\n\t\t\tpattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n\t\t\talias: 'keyword'\n\t\t}\n\t});\n\tPrism.languages.insertBefore('fsharp', 'string', {\n\t\t'annotation': {\n\t\t\tpattern: /\\[<.+?>\\]/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\[<|>\\]$/,\n\t\t\t\t'class-name': {\n\t\t\t\t\tpattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'annotation-content': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\tinside: Prism.languages.fsharp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t(function (Prism) {\n\t\tPrism.languages.flow = Prism.languages.extend('javascript', {});\n\n\t\tPrism.languages.insertBefore('flow', 'keyword', {\n\t\t\t'type': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tPrism.languages.flow['function-variable'].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i;\n\t\tdelete Prism.languages.flow['parameter'];\n\n\t\tPrism.languages.insertBefore('flow', 'operator', {\n\t\t\t'flow-punctuation': {\n\t\t\t\tpattern: /\\{\\||\\|\\}/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t});\n\n\t\tif (!Array.isArray(Prism.languages.flow.keyword)) {\n\t\t\tPrism.languages.flow.keyword = [Prism.languages.flow.keyword];\n\t\t}\n\t\tPrism.languages.flow.keyword.unshift(\n\t\t\t{\n\t\t\t\tpattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t);\n\t}(Prism));\n\n\tPrism.languages.fortran = {\n\t\t'quoted-number': {\n\t\t\tpattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n\t\t\talias: 'number'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n\t\t\tinside: {\n\t\t\t\t'comment': {\n\t\t\t\t\tpattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /!.*/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'boolean': /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n\t\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n\t\t'keyword': [\n\t\t\t// Types\n\t\t\t/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n\t\t\t// END statements\n\t\t\t/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n\t\t\t// Statements\n\t\t\t/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n\t\t\t// Others\n\t\t\t/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n\t\t],\n\t\t'operator': [\n\t\t\t/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n\t\t\t{\n\t\t\t\t// Use lookbehind to prevent confusion with (/ /)\n\t\t\t\tpattern: /(^|(?!\\().)\\/(?!\\))/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /\\(\\/|\\/\\)|[(),;:&]/\n\t};\n\n\tPrism.languages.git = {\n\t\t/*\n\t\t * A simple one line comment like in a git status command\n\t\t * For instance:\n\t\t * $ git status\n\t\t * # On branch infinite-scroll\n\t\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t\t * # and have 1 and 2 different commits each, respectively.\n\t\t * nothing to commit (working directory clean)\n\t\t */\n\t\t'comment': /^#.*/m,\n\n\t\t/*\n\t\t * Regexp to match the changed lines in a git diff output. Check the example below.\n\t\t */\n\t\t'deleted': /^[-–].*/m,\n\t\t'inserted': /^\\+.*/m,\n\n\t\t/*\n\t\t * a string (double and simple quote)\n\t\t */\n\t\t'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t\t/*\n\t\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t\t * For instance:\n\t\t * $ git add file.txt\n\t\t */\n\t\t'command': {\n\t\t\tpattern: /^.*\\$ git .*$/m,\n\t\t\tinside: {\n\t\t\t\t/*\n\t\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t\t\t\t * For instance:\n\t\t\t\t * $ git diff --cached\n\t\t\t\t * $ git log -p\n\t\t\t\t */\n\t\t\t\t'parameter': /\\s--?\\w+/m\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t * Coordinates displayed in a git diff command\n\t\t * For instance:\n\t\t * $ git diff\n\t\t * diff --git file.txt file.txt\n\t\t * index 6214953..1d54a52 100644\n\t\t * --- file.txt\n\t\t * +++ file.txt\n\t\t * @@ -1 +1,2 @@\n\t\t * -Here's my tetx file\n\t\t * +Here's my text file\n\t\t * +And this is the second line\n\t\t */\n\t\t'coord': /^@@.*@@$/m,\n\n\t\t/*\n\t\t * Match a \"commit [SHA1]\" line in a git log output.\n\t\t * For instance:\n\t\t * $ git log\n\t\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t\t * Author: lgiraudel\n\t\t * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t\t *\n\t\t *     Add of a new line\n\t\t */\n\t\t'commit-sha1': /^commit \\w{40}$/m\n\t};\n\n\tPrism.languages.glsl = Prism.languages.extend('c', {\n\t\t'keyword': /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n\t});\n\n\tPrism.languages.go = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n\t\t'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n\t\t'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n\t\t'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n\t\t'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n\t});\n\tdelete Prism.languages.go['class-name'];\n\n\tPrism.languages.graphql = {\n\t\t'comment': /#.*/,\n\t\t'description': {\n\t\t\tpattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'language-markdown': {\n\t\t\t\t\tpattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'variable': /\\$[a-z_]\\w*/i,\n\t\t'directive': {\n\t\t\tpattern: /@[a-z_]\\w*/i,\n\t\t\talias: 'function'\n\t\t},\n\t\t'attr-name': {\n\t\t\tpattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'fragment': {\n\t\t\tpattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n\t\t'operator': /[!=|&]|\\.{3}/,\n\t\t'punctuation': /[!(){}\\[\\]:=,]/,\n\t\t'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n\t};\n\n\tPrism.languages.haskell = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|{-[\\s\\S]*?-})/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n\t\t\talias: 'string'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n\t\t'import-statement': {\n\t\t\t// The imported or hidden names are not included in this import\n\t\t\t// statement. This is because we want to highlight those exactly like\n\t\t\t// we do for the names in the program.\n\t\t\tpattern: /(^\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n\t\t\t}\n\t\t},\n\t\t// These are builtin variables only. Constructors are highlighted later as a constant.\n\t\t'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n\t\t// decimal integers and floating point numbers | octal integers | hexadecimal integers\n\t\t'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n\t\t// Most of this is needed because of the meaning of a single '.'.\n\t\t// If it stands alone freely, it is the function composition.\n\t\t// It may also be a separator between a module name and an identifier => no\n\t\t// operator. If it comes together with other special characters it is an\n\t\t// operator too.\n\t\t'operator': /\\s\\.\\s|[-!#$%*+=?&@|~:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n\t\t// In Haskell, nearly everything is a variable, do not highlight these.\n\t\t'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n\t\t'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\n\tPrism.languages.hs = Prism.languages.haskell;\n\n\tPrism.languages.hcl = {\n\t\t'comment': /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t'heredoc': {\n\t\t\tpattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'type': {\n\t\t\t\t\t\tpattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'type': {\n\t\t\t\t\t\tpattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/[\\w-]+(?=\\s+{)/\n\t\t],\n\t\t'property': [\n\t\t\t/[\\w-\\.]+(?=\\s*=(?!=))/,\n\t\t\t/\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/,\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'type': {\n\t\t\t\t\t\t\tpattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'keyword': /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n\t\t\t\t\t\t'function': /\\w+(?=\\()/,\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n\t\t\t\t\t\t'punctuation': /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n\t\t'boolean': /\\b(?:true|false)\\b/i,\n\t\t'punctuation': /[=\\[\\]{}]/,\n\t};\n\n\tPrism.languages.hlsl = Prism.languages.extend('c', {\n\n\t\t// Regarding keywords and class names:\n\t\t// The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n\t\t// https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n\t\t// https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n\t\t'class-name': [\n\t\t\tPrism.languages.c['class-name'],\n\t\t\t/\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RasterizerState|RenderTargetView|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n\t\t],\n\t\t'keyword': [\n\t\t\t// HLSL keyword\n\t\t\t/\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n\t\t\t// scalar, vector, and matrix types\n\t\t\t/\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n\t\t],\n\t\t// https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n\t\t'number': /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/\n\t});\n\n\t(function (Prism) {\n\t\tPrism.languages.http = {\n\t\t\t'request-line': {\n\t\t\t\tpattern: /^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,\n\t\t\t\tinside: {\n\t\t\t\t\t// HTTP Method\n\t\t\t\t\t'method': {\n\t\t\t\t\t\tpattern: /^[A-Z]+\\b/,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t// Request Target e.g. http://example.com, /path/to/file\n\t\t\t\t\t'request-target': {\n\t\t\t\t\t\tpattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'url',\n\t\t\t\t\t\tinside: Prism.languages.uri\n\t\t\t\t\t},\n\t\t\t\t\t// HTTP Version\n\t\t\t\t\t'http-version': {\n\t\t\t\t\t\tpattern: /^(\\s)HTTP\\/[0-9.]+/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\t'response-status': {\n\t\t\t\tpattern: /^HTTP\\/[0-9.]+ \\d+ .+/m,\n\t\t\t\tinside: {\n\t\t\t\t\t// HTTP Version\n\t\t\t\t\t'http-version': {\n\t\t\t\t\t\tpattern: /^HTTP\\/[0-9.]+/,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t// Status Code\n\t\t\t\t\t'status-code': {\n\t\t\t\t\t\tpattern: /^(\\s)\\d+(?=\\s)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'number'\n\t\t\t\t\t},\n\t\t\t\t\t// Reason Phrase\n\t\t\t\t\t'reason-phrase': {\n\t\t\t\t\t\tpattern: /^(\\s).+/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'string'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// HTTP header name\n\t\t\t'header-name': {\n\t\t\t\tpattern: /^[\\w-]+:(?=.)/m,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t};\n\n\t\t// Create a mapping of Content-Type headers to language definitions\n\t\tvar langs = Prism.languages;\n\t\tvar httpLanguages = {\n\t\t\t'application/javascript': langs.javascript,\n\t\t\t'application/json': langs.json || langs.javascript,\n\t\t\t'application/xml': langs.xml,\n\t\t\t'text/xml': langs.xml,\n\t\t\t'text/html': langs.html,\n\t\t\t'text/css': langs.css\n\t\t};\n\n\t\t// Declare which types can also be suffixes\n\t\tvar suffixTypes = {\n\t\t\t'application/json': true,\n\t\t\t'application/xml': true\n\t\t};\n\n\t\t/**\n\t\t * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n\t\t *\n\t\t * @param {string} contentType\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getSuffixPattern(contentType) {\n\t\t\tvar suffix = contentType.replace(/^[a-z]+\\//, '');\n\t\t\tvar suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])';\n\t\t\treturn '(?:' + contentType + '|' + suffixPattern + ')';\n\t\t}\n\n\t\t// Insert each content type parser that has its associated language\n\t\t// currently loaded.\n\t\tvar options;\n\t\tfor (var contentType in httpLanguages) {\n\t\t\tif (httpLanguages[contentType]) {\n\t\t\t\toptions = options || {};\n\n\t\t\t\tvar pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n\t\t\t\toptions[contentType.replace(/\\//g, '-')] = {\n\t\t\t\t\tpattern: RegExp('(content-type:\\\\s*' + pattern + '(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*', 'i'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: httpLanguages[contentType]\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tif (options) {\n\t\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t\t}\n\n\t}(Prism));\n\n\t/**\n\t * Original by Scott Helme.\n\t *\n\t * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n\t */\n\n\tPrism.languages.hpkp = {\n\t\t'directive': {\n\t\t\tpattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'safe': {\n\t\t\tpattern: /\\b\\d{7,}\\b/,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'unsafe': {\n\t\t\tpattern: /\\b\\d{1,6}\\b/,\n\t\t\talias: 'function'\n\t\t}\n\t};\n\n\t/**\n\t * Original by Scott Helme.\n\t *\n\t * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n\t */\n\n\tPrism.languages.hsts = {\n\t\t'directive': {\n\t\t\tpattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'safe': {\n\t\t\tpattern: /\\b\\d{8,}\\b/,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'unsafe': {\n\t\t\tpattern: /\\b\\d{1,7}\\b/,\n\t\t\talias: 'function'\n\t\t}\n\t};\n\n\t(function (Prism) {\n\t\tPrism.languages.ignore = {\n\t\t\t// https://git-scm.com/docs/gitignore\n\t\t\t'comment': /^#.*/m,\n\t\t\t'entry': {\n\t\t\t\tpattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /^!|\\*\\*?|\\?/,\n\t\t\t\t\t'regex': {\n\t\t\t\t\t\tpattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /\\//\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.gitignore = Prism.languages.ignore;\n\t\tPrism.languages.hgignore = Prism.languages.ignore;\n\t\tPrism.languages.npmignore = Prism.languages.ignore;\n\n\t}(Prism));\n\n\tPrism.languages.ini = {\n\n\t\t/**\n\t\t * The component mimics the behavior of the Win32 API parser.\n\t\t *\n\t\t * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n\t\t */\n\n\t\t'comment': {\n\t\t\tpattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'header': {\n\t\t\tpattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'section-name': {\n\t\t\t\t\tpattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t}\n\t\t},\n\t\t'key': {\n\t\t\tpattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-name'\n\t\t},\n\t\t'value': {\n\t\t\tpattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value',\n\t\t\tinside: {\n\t\t\t\t'inner-value': {\n\t\t\t\t\tpattern: /^(\"|').+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /=/\n\t};\n\n\t(function (Prism) {\n\n\t\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n\t\t// full package (optional) + parent classes (optional)\n\t\tvar classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t\t// based on the java naming conventions\n\t\tvar className = {\n\t\t\tpattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'namespace': {\n\t\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t\t'class-name': [\n\t\t\t\tclassName,\n\t\t\t\t{\n\t\t\t\t\t// variables and parameters\n\t\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\t\tpattern: RegExp(classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/.source),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: className.inside\n\t\t\t\t}\n\t\t\t],\n\t\t\t'keyword': keywords,\n\t\t\t'function': [\n\t\t\t\tPrism.languages.clike.function,\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\:\\:\\s*)[a-z_]\\w*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t\t'operator': {\n\t\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('java', 'string', {\n\t\t\t'triple-quoted-string': {\n\t\t\t\t// http://openjdk.java.net/jeps/355#Description\n\t\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t\t'annotation': {\n\t\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'generics': {\n\t\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n\t\t\t\tinside: {\n\t\t\t\t\t'class-name': className,\n\t\t\t\t\t'keyword': keywords,\n\t\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t\t'operator': /[?&|]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'namespace': {\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\n\t\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\t/**\n\t\t * Returns the placeholder for the given language id and index.\n\t\t *\n\t\t * @param {string} language\n\t\t * @param {string|number} index\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getPlaceholder(language, index) {\n\t\t\treturn '___' + language.toUpperCase() + index + '___';\n\t\t}\n\n\t\tObject.defineProperties(Prism.languages['markup-templating'] = {}, {\n\t\t\tbuildPlaceholders: {\n\t\t\t\t/**\n\t\t\t\t * Tokenize all inline templating expressions matching `placeholderPattern`.\n\t\t\t\t *\n\t\t\t\t * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n\t\t\t\t * `true` will be replaced.\n\t\t\t\t *\n\t\t\t\t * @param {object} env The environment of the `before-tokenize` hook.\n\t\t\t\t * @param {string} language The language id.\n\t\t\t\t * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n\t\t\t\t * @param {(match: string) => boolean} [replaceFilter]\n\t\t\t\t */\n\t\t\t\tvalue: function (env, language, placeholderPattern, replaceFilter) {\n\t\t\t\t\tif (env.language !== language) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tokenStack = env.tokenStack = [];\n\n\t\t\t\t\tenv.code = env.code.replace(placeholderPattern, function (match) {\n\t\t\t\t\t\tif (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar i = tokenStack.length;\n\t\t\t\t\t\tvar placeholder;\n\n\t\t\t\t\t\t// Check for existing strings\n\t\t\t\t\t\twhile (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1)\n\t\t\t\t\t\t\t++i;\n\n\t\t\t\t\t\t// Create a sparse array\n\t\t\t\t\t\ttokenStack[i] = match;\n\n\t\t\t\t\t\treturn placeholder;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Switch the grammar to markup\n\t\t\t\t\tenv.grammar = Prism.languages.markup;\n\t\t\t\t}\n\t\t\t},\n\t\t\ttokenizePlaceholders: {\n\t\t\t\t/**\n\t\t\t\t * Replace placeholders with proper tokens after tokenizing.\n\t\t\t\t *\n\t\t\t\t * @param {object} env The environment of the `after-tokenize` hook.\n\t\t\t\t * @param {string} language The language id.\n\t\t\t\t */\n\t\t\t\tvalue: function (env, language) {\n\t\t\t\t\tif (env.language !== language || !env.tokenStack) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Switch the grammar back\n\t\t\t\t\tenv.grammar = Prism.languages[language];\n\n\t\t\t\t\tvar j = 0;\n\t\t\t\t\tvar keys = Object.keys(env.tokenStack);\n\n\t\t\t\t\tfunction walkTokens(tokens) {\n\t\t\t\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\t\t// all placeholders are replaced already\n\t\t\t\t\t\t\tif (j >= keys.length) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar token = tokens[i];\n\t\t\t\t\t\t\tif (typeof token === 'string' || (token.content && typeof token.content === 'string')) {\n\t\t\t\t\t\t\t\tvar k = keys[j];\n\t\t\t\t\t\t\t\tvar t = env.tokenStack[k];\n\t\t\t\t\t\t\t\tvar s = typeof token === 'string' ? token : token.content;\n\t\t\t\t\t\t\t\tvar placeholder = getPlaceholder(language, k);\n\n\t\t\t\t\t\t\t\tvar index = s.indexOf(placeholder);\n\t\t\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\t\t\t++j;\n\n\t\t\t\t\t\t\t\t\tvar before = s.substring(0, index);\n\t\t\t\t\t\t\t\t\tvar middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n\t\t\t\t\t\t\t\t\tvar after = s.substring(index + placeholder.length);\n\n\t\t\t\t\t\t\t\t\tvar replacement = [];\n\t\t\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([before]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treplacement.push(middle);\n\t\t\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([after]));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\t\t\t\t\t\ttokens.splice.apply(tokens, [i, 1].concat(replacement));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttoken.content = replacement;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (token.content /* && typeof token.content !== 'string' */) {\n\t\t\t\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn tokens;\n\t\t\t\t\t}\n\n\t\t\t\t\twalkTokens(env.tokens);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}(Prism));\n\n\t/**\n\t * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n\t * Modified by Miles Johnson: http://milesj.me\n\t * Rewritten by Tom Pavelec\n\t *\n\t * Supports PHP 5.3 - 8.0\n\t */\n\t(function (Prism) {\n\t\tvar comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n\t\tvar constant = [\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\t\talias: 'boolean'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t},\n\t\t\t/\\b(?:null)\\b/i,\n\t\t\t/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/,\n\t\t];\n\t\tvar number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n\t\tvar operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n\t\tvar punctuation = /[{}\\[\\](),:;]/;\n\n\t\tPrism.languages.php = {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'comment': comment,\n\t\t\t'variable': /\\$+(?:\\w+\\b|(?={))/i,\n\t\t\t'package': {\n\t\t\t\tpattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'class-name-definition': {\n\t\t\t\tpattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'function-definition': {\n\t\t\t\tpattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'keyword': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n\t\t\t\t\talias: 'type-casting',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n\t\t\t\t\talias: 'type-hint',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /([(,?]\\s*[a-z0-9_|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n\t\t\t\t\talias: 'type-hint',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\t\talias: 'return-type',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[a-z0-9_|]\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\t\talias: 'return-type',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\t\talias: 'type-declaration',\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\t\talias: 'type-declaration',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n\t\t\t\t\talias: 'static-context',\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// yield from\n\t\t\t\t\tpattern: /(\\byield\\s+)from\\b/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t// `class` is always a keyword unlike other keywords\n\t\t\t\t/\\bclass\\b/i,\n\t\t\t\t{\n\t\t\t\t\t// https://www.php.net/manual/en/reserved.keywords.php\n\t\t\t\t\t//\n\t\t\t\t\t// keywords cannot be preceded by \"->\"\n\t\t\t\t\t// the complex lookbehind means `(?<!(?:->|::)\\s*)`\n\t\t\t\t\tpattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'argument-name': {\n\t\t\t\tpattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'class-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n\t\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n\t\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\t\talias: 'type-declaration',\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\t\talias: ['class-name-fully-qualified', 'type-declaration'],\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n\t\t\t\t\talias: 'static-context',\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n\t\t\t\t\talias: ['class-name-fully-qualified', 'static-context'],\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\t\talias: 'type-hint',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\t\talias: ['class-name-fully-qualified', 'type-hint'],\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\talias: 'return-type',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\t\talias: ['class-name-fully-qualified', 'return-type'],\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'constant': constant,\n\t\t\t'function': /\\b\\w+(?=\\s*\\()/,\n\t\t\t'property': {\n\t\t\t\tpattern: /(->\\s*)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'number': number,\n\t\t\t'operator': operator,\n\t\t\t'punctuation': punctuation\n\t\t};\n\n\t\tvar string_interpolation = {\n\t\t\tpattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.php\n\t\t};\n\n\t\tvar string = [\n\t\t\t{\n\t\t\t\tpattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n\t\t\t\talias: 'nowdoc-string',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\t\talias: 'symbol',\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n\t\t\t\talias: 'heredoc-string',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\t\talias: 'symbol',\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'interpolation': string_interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\t\t\talias: 'backtick-quoted-string',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\t\talias: 'single-quoted-string',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\t\talias: 'double-quoted-string',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': string_interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tPrism.languages.insertBefore('php', 'variable', {\n\t\t\t'string': string,\n\t\t\t'attribute': {\n\t\t\t\tpattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/mi,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attribute-content': {\n\t\t\t\t\t\tpattern: /^(#\\[)[\\s\\S]+(?=]$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t// inside can appear subset of php\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'comment': comment,\n\t\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t\t'attribute-class-name': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n\t\t\t\t\t\t\t\t\talias: [\n\t\t\t\t\t\t\t\t\t\t'class-name',\n\t\t\t\t\t\t\t\t\t\t'class-name-fully-qualified'\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'constant': constant,\n\t\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t\t'operator': operator,\n\t\t\t\t\t\t\t'punctuation': punctuation\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^#\\[|]$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tPrism.hooks.add('before-tokenize', function (env) {\n\t\t\tif (!/<\\?/.test(env.code)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n\t\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t\t});\n\n\t\tPrism.hooks.add('after-tokenize', function (env) {\n\t\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t\t});\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar javaDocLike = Prism.languages.javadoclike = {\n\t\t\t'parameter': {\n\t\t\t\tpattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'keyword': {\n\t\t\t\t// keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n\t\t\t\t// @word, {@word}\n\t\t\t\tpattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /[{}]/\n\t\t};\n\n\n\t\t/**\n\t\t * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n\t\t *\n\t\t * @param {string} lang the language add doc comment support to.\n\t\t * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n\t\t */\n\t\tfunction docCommentSupport(lang, callback) {\n\t\t\tvar tokenName = 'doc-comment';\n\n\t\t\tvar grammar = Prism.languages[lang];\n\t\t\tif (!grammar) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar token = grammar[tokenName];\n\n\t\t\tif (!token) {\n\t\t\t\t// add doc comment: /** */\n\t\t\t\tvar definition = {};\n\t\t\t\tdefinition[tokenName] = {\n\t\t\t\t\tpattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'comment'\n\t\t\t\t};\n\n\t\t\t\tgrammar = Prism.languages.insertBefore(lang, 'comment', definition);\n\t\t\t\ttoken = grammar[tokenName];\n\t\t\t}\n\n\t\t\tif (token instanceof RegExp) { // convert regex to object\n\t\t\t\ttoken = grammar[tokenName] = { pattern: token };\n\t\t\t}\n\n\t\t\tif (Array.isArray(token)) {\n\t\t\t\tfor (var i = 0, l = token.length; i < l; i++) {\n\t\t\t\t\tif (token[i] instanceof RegExp) {\n\t\t\t\t\t\ttoken[i] = { pattern: token[i] };\n\t\t\t\t\t}\n\t\t\t\t\tcallback(token[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback(token);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adds doc-comment support to the given languages for the given documentation language.\n\t\t *\n\t\t * @param {string[]|string} languages\n\t\t * @param {Object} docLanguage\n\t\t */\n\t\tfunction addSupport(languages, docLanguage) {\n\t\t\tif (typeof languages === 'string') {\n\t\t\t\tlanguages = [languages];\n\t\t\t}\n\n\t\t\tlanguages.forEach(function (lang) {\n\t\t\t\tdocCommentSupport(lang, function (pattern) {\n\t\t\t\t\tif (!pattern.inside) {\n\t\t\t\t\t\tpattern.inside = {};\n\t\t\t\t\t}\n\t\t\t\t\tpattern.inside.rest = docLanguage;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tObject.defineProperty(javaDocLike, 'addSupport', { value: addSupport });\n\n\t\tjavaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar codeLinePattern = /(^(?:\\s*(?:\\*\\s*)*))[^*\\s].*$/m;\n\n\t\tvar memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n\t\tvar reference = /(?:[a-zA-Z]\\w+\\s*\\.\\s*)*[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () { return memberReference; });\n\n\t\tPrism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n\t\tPrism.languages.insertBefore('javadoc', 'keyword', {\n\t\t\t'reference': {\n\t\t\t\tpattern: RegExp(/(@(?:exception|throws|see|link|linkplain|value)\\s+(?:\\*\\s*)?)/.source + '(?:' + reference + ')'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': {\n\t\t\t\t\t\tpattern: /(#\\s*)\\w+(?=\\s*\\()/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'field': {\n\t\t\t\t\t\tpattern: /(#\\s*)\\w+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'namespace': {\n\t\t\t\t\t\tpattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'class-name': /\\b[A-Z]\\w*/,\n\t\t\t\t\t'keyword': Prism.languages.java.keyword,\n\t\t\t\t\t'punctuation': /[#()[\\],.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'class-name': {\n\t\t\t\t// @param <T> the first generic type parameter\n\t\t\t\tpattern: /(@param\\s+)<[A-Z]\\w*>/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[.<>]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'code-section': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\t// there can't be any HTML inside of {@code} tags\n\t\t\t\t\t\t\tpattern: codeLinePattern,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: Prism.languages.java,\n\t\t\t\t\t\t\talias: 'language-java'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'line': {\n\t\t\t\t\t\t\tpattern: codeLinePattern,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t// highlight HTML tags and entities\n\t\t\t\t\t\t\t\t'tag': Prism.languages.markup.tag,\n\t\t\t\t\t\t\t\t'entity': Prism.languages.markup.entity,\n\t\t\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\t\t\t// everything else is Java code\n\t\t\t\t\t\t\t\t\tpattern: /.+/,\n\t\t\t\t\t\t\t\t\tinside: Prism.languages.java,\n\t\t\t\t\t\t\t\t\talias: 'language-java'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'tag': Prism.languages.markup.tag,\n\t\t\t'entity': Prism.languages.markup.entity,\n\t\t});\n\n\t\tPrism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t\t'class-name': {\n\t\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\n\t\t});\n\n\t\t// The keywords TypeScript adds to JavaScript\n\t\tPrism.languages.typescript.keyword.push(\n\t\t\t/\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/,\n\t\t\t// keywords that have to be followed by an identifier\n\t\t\t/\\b(?:asserts|infer|interface|module|namespace|type)(?!\\s*[^\\s_${}*a-zA-Z\\xA0-\\uFFFF])/\n\t\t);\n\n\t\t// doesn't work with TS because TS is too complex\n\t\tdelete Prism.languages.typescript['parameter'];\n\n\t\t// a version of typescript specifically for highlighting types\n\t\tvar typeInside = Prism.languages.extend('typescript', {});\n\t\tdelete typeInside['class-name'];\n\n\t\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\t\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t\t'decorator': {\n\t\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'at': {\n\t\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\t\talias: 'operator'\n\t\t\t\t\t},\n\t\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'generic-function': {\n\t\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t\t'generic': {\n\t\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\tinside: typeInside\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.ts = Prism.languages.typescript;\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar javascript = Prism.languages.javascript;\n\n\t\tvar type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n\t\tvar parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n\n\t\tPrism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n\t\t\t'parameter': {\n\t\t\t\t// @param {string} foo - foo bar\n\t\t\t\tpattern: RegExp(parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('jsdoc', 'keyword', {\n\t\t\t'optional-parameter': {\n\t\t\t\t// @param {string} [baz.foo=\"bar\"] foo bar\n\t\t\t\tpattern: RegExp(parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'parameter': {\n\t\t\t\t\t\tpattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'code': {\n\t\t\t\t\t\tpattern: /(=)[\\s\\S]*(?=\\]$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: javascript,\n\t\t\t\t\t\talias: 'language-javascript'\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /[=[\\]]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'class-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(/(@(?:augments|extends|class|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function () { return type; })),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp('(@[a-z]+\\\\s+)' + type),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'string': javascript.string,\n\t\t\t\t\t\t'number': javascript.number,\n\t\t\t\t\t\t'boolean': javascript.boolean,\n\t\t\t\t\t\t'keyword': Prism.languages.typescript.keyword,\n\t\t\t\t\t\t'operator': /=>|\\.\\.\\.|[&|?:*]/,\n\t\t\t\t\t\t'punctuation': /[.,;=<>{}()[\\]]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'example': {\n\t\t\t\tpattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code': {\n\t\t\t\t\t\tpattern: /^(\\s*(?:\\*\\s*)?)\\S.*$/m,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: javascript,\n\t\t\t\t\t\talias: 'language-javascript'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tPrism.languages.insertBefore('javascript', 'function-variable', {\n\t\t\t'method-variable': {\n\t\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: ['function-variable', 'method', 'function', 'property-access']\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('javascript', 'function', {\n\t\t\t'method': {\n\t\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: ['function', 'property-access']\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('javascript', 'constant', {\n\t\t\t'known-class-name': [\n\t\t\t\t{\n\t\t\t\t\t// standard built-ins\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n\t\t\t\t\tpattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n\t\t\t\t\talias: 'class-name'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// errors\n\t\t\t\t\tpattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n\t\t\t\t\talias: 'class-name'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t/**\n\t\t * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n\t\t *\n\t\t * @param {string} source\n\t\t * @param {string} [flags]\n\t\t * @returns {RegExp}\n\t\t */\n\t\tfunction withId(source, flags) {\n\t\t\treturn RegExp(\n\t\t\t\tsource.replace(/<ID>/g, function () { return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source; }),\n\t\t\t\tflags);\n\t\t}\n\t\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t\t'imports': {\n\t\t\t\t// https://tc39.es/ecma262/#sec-imports\n\t\t\t\tpattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t'exports': {\n\t\t\t\t// https://tc39.es/ecma262/#sec-exports\n\t\t\t\tpattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.javascript['keyword'].unshift(\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:as|default|export|from|import)\\b/,\n\t\t\t\talias: 'module'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n\t\t\t\talias: 'control-flow'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\bnull\\b/,\n\t\t\t\talias: ['null', 'nil']\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\bundefined\\b/,\n\t\t\t\talias: 'nil'\n\t\t\t}\n\t\t);\n\n\t\tPrism.languages.insertBefore('javascript', 'operator', {\n\t\t\t'spread': {\n\t\t\t\tpattern: /\\.{3}/,\n\t\t\t\talias: 'operator'\n\t\t\t},\n\t\t\t'arrow': {\n\t\t\t\tpattern: /=>/,\n\t\t\t\talias: 'operator'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('javascript', 'punctuation', {\n\t\t\t'property-access': {\n\t\t\t\tpattern: withId(/(\\.\\s*)#?<ID>/.source),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'maybe-class-name': {\n\t\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'dom': {\n\t\t\t\t// this contains only a few commonly used DOM variables\n\t\t\t\tpattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\t'console': {\n\t\t\t\tpattern: /\\bconsole(?=\\s*\\.)/,\n\t\t\t\talias: 'class-name'\n\t\t\t}\n\t\t});\n\n\n\t\t// add 'maybe-class-name' to tokens which might be a class name\n\t\tvar maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n\t\tfor (var i = 0; i < maybeClassNameTokens.length; i++) {\n\t\t\tvar token = maybeClassNameTokens[i];\n\t\t\tvar value = Prism.languages.javascript[token];\n\n\t\t\t// convert regex to object\n\t\t\tif (Prism.util.type(value) === 'RegExp') {\n\t\t\t\tvalue = Prism.languages.javascript[token] = {\n\t\t\t\t\tpattern: value\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep in mind that we don't support arrays\n\n\t\t\tvar inside = value.inside || {};\n\t\t\tvalue.inside = inside;\n\n\t\t\tinside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n\t\t}\n\n\t}(Prism));\n\n\t// https://www.json.org/json-en.html\n\tPrism.languages.json = {\n\t\t'property': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t\t'punctuation': /[{}[\\],]/,\n\t\t'operator': /:/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'null': {\n\t\t\tpattern: /\\bnull\\b/,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\n\tPrism.languages.webmanifest = Prism.languages.json;\n\n\t(function (Prism) {\n\n\t\tvar string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\t\tPrism.languages.json5 = Prism.languages.extend('json', {\n\t\t\t'property': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(string.source + '(?=\\\\s*:)'),\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n\t\t\t\t\talias: 'unquoted'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'string': {\n\t\t\t\tpattern: string,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'number': /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n\t\t});\n\n\t}(Prism));\n\n\tPrism.languages.jsonp = Prism.languages.extend('json', {\n\t\t'punctuation': /[{}[\\]();,.]/\n\t});\n\n\tPrism.languages.insertBefore('jsonp', 'punctuation', {\n\t\t'function': /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n\t});\n\n\tPrism.languages.jsstacktrace = {\n\t\t'error-message': {\n\t\t\tpattern: /^\\S.*/m,\n\t\t\talias: 'string'\n\t\t},\n\n\t\t'stack-frame': {\n\t\t\tpattern: /^[ \\t]+at[ \\t].*/m,\n\t\t\tinside: {\n\t\t\t\t'not-my-code': {\n\t\t\t\t\tpattern: /[ \\t]+at[ \\t]+(?!\\s)(?:node\\.js|\\<unknown\\>|.*(?:node_modules|\\(\\<anonymous\\>\\)|\\(\\<unknown\\>|\\<anonymous\\>$|\\(internal\\/|\\(node\\.js)).*/m,\n\t\t\t\t\talias: 'comment'\n\t\t\t\t},\n\n\t\t\t\t'filename': {\n\t\t\t\t\tpattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'url'\n\t\t\t\t},\n\n\t\t\t\t'function': {\n\t\t\t\t\tpattern: /(at\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t'punctuation': /[()]/,\n\n\t\t\t\t'keyword': /\\b(?:at|new)\\b/,\n\n\t\t\t\t'alias': {\n\t\t\t\t\tpattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\n\t\t\t\t'line-number': {\n\t\t\t\t\tpattern: /:[0-9]+(?::[0-9]+)?\\b/,\n\t\t\t\t\talias: 'number',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /:/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.languages.julia = {\n\t\t'comment': {\n\t\t\t// support one level of nested comments\n\t\t\t// https://github.com/JuliaLang/julia/pull/6128\n\t\t\tpattern: /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'regex': {\n\t\t\t// https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n\t\t\tpattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': {\n\t\t\t// https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n\t\t\t// https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n\t\t\t// https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n\t\t\t// https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n\t\t\tpattern: /\"\"\"[\\s\\S]+?\"\"\"|\\w*\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n\t\t// https://docs.julialang.org/en/v1/manual/mathematical-operations/\n\t\t// https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n\t\t'operator': /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n\t\t'punctuation': /::?|[{}[\\]();,.?]/,\n\t\t// https://docs.julialang.org/en/v1/base/numbers/#Base.im\n\t\t'constant': /\\b(?:(?:NaN|Inf)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n\t};\n\n\t(function (Prism) {\n\t\tPrism.languages.kotlin = Prism.languages.extend('clike', {\n\t\t\t'keyword': {\n\t\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t\t\t\tpattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'function': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\()/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n\t\t});\n\n\t\tdelete Prism.languages.kotlin['class-name'];\n\n\t\tPrism.languages.insertBefore('kotlin', 'string', {\n\t\t\t'raw-string': {\n\t\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\t\talias: 'string'\n\t\t\t\t// See interpolation below\n\t\t\t}\n\t\t});\n\t\tPrism.languages.insertBefore('kotlin', 'keyword', {\n\t\t\t'annotation': {\n\t\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t\t\t\talias: 'builtin'\n\t\t\t}\n\t\t});\n\t\tPrism.languages.insertBefore('kotlin', 'function', {\n\t\t\t'label': {\n\t\t\t\tpattern: /\\w+@|@\\w+/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t});\n\n\t\tvar interpolation = [\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.kotlin\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\$\\w+/,\n\t\t\t\talias: 'variable'\n\t\t\t}\n\t\t];\n\n\t\tPrism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n\t\t\tinterpolation: interpolation\n\t\t};\n\n\t\tPrism.languages.kt = Prism.languages.kotlin;\n\t\tPrism.languages.kts = Prism.languages.kotlin;\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tvar funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i;\n\t\tvar insideEqu = {\n\t\t\t'equation-command': {\n\t\t\t\tpattern: funcPattern,\n\t\t\t\talias: 'regex'\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.latex = {\n\t\t\t'comment': /%.*/m,\n\t\t\t// the verbatim environment prints whitespace to the document\n\t\t\t'cdata': {\n\t\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/*\n\t\t\t * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n\t\t\t * (all are multiline)\n\t\t\t */\n\t\t\t'equation': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n\t\t\t\t\tinside: insideEqu,\n\t\t\t\t\talias: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: insideEqu,\n\t\t\t\t\talias: 'string'\n\t\t\t\t}\n\t\t\t],\n\t\t\t/*\n\t\t\t * arguments which are keywords or references are highlighted\n\t\t\t * as keywords\n\t\t\t */\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'url': {\n\t\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/*\n\t\t\t * section or chapter headlines are highlighted as bold so that\n\t\t\t * they stand out more\n\t\t\t */\n\t\t\t'headline': {\n\t\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: funcPattern,\n\t\t\t\talias: 'selector'\n\t\t\t},\n\t\t\t'punctuation': /[[\\]{}&]/\n\t\t};\n\n\t\tPrism.languages.tex = Prism.languages.latex;\n\t\tPrism.languages.context = Prism.languages.latex;\n\t}(Prism));\n\n\t/* FIXME :\n\t :extend() is not handled specifically : its highlighting is buggy.\n\t Mixin usage must be inside a ruleset to be highlighted.\n\t At-rules (e.g. import) containing interpolations are buggy.\n\t Detached rulesets are highlighted as at-rules.\n\t A comment before a mixin usage prevents the latter to be properly highlighted.\n\t */\n\n\tPrism.languages.less = Prism.languages.extend('css', {\n\t\t'comment': [\n\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[:()]/\n\t\t\t}\n\t\t},\n\t\t// selectors and mixins are considered the same\n\t\t'selector': {\n\t\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n\t\t\tinside: {\n\t\t\t\t// mixin parameters\n\t\t\t\t'variable': /@+[\\w-]+/\n\t\t\t}\n\t\t},\n\n\t\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n\t\t'operator': /[+\\-*\\/]/\n\t});\n\n\tPrism.languages.insertBefore('less', 'property', {\n\t\t'variable': [\n\t\t\t// Variable declaration (the colon must be consumed!)\n\t\t\t{\n\t\t\t\tpattern: /@[\\w-]+\\s*:/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /:/\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Variable usage\n\t\t\t/@@?[\\w-]+/\n\t\t],\n\t\t'mixin-usage': {\n\t\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t}\n\t});\n\n\t(function (Prism) {\n\t\t// Functions to construct regular expressions\n\t\t// simple form\n\t\t// e.g. (interactive ... or (interactive)\n\t\tfunction simple_form(name) {\n\t\t\treturn RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n\t\t}\n\t\t// booleans and numbers\n\t\tfunction primitive(pattern) {\n\t\t\treturn RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n\t\t}\n\n\t\t// Patterns in regular expressions\n\n\t\t// Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n\t\t// & and : are excluded as they are usually used for special purposes\n\t\tvar symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n\t\t// symbol starting with & used in function arguments\n\t\tvar marker = '&' + symbol;\n\t\t// Open parenthesis for look-behind\n\t\tvar par = '(\\\\()';\n\t\tvar endpar = '(?=\\\\))';\n\t\t// End the pattern with look-ahead space\n\t\tvar space = '(?=\\\\s)';\n\n\t\tvar language = {\n\t\t\t// Three or four semicolons are considered a heading.\n\t\t\t// See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n\t\t\theading: {\n\t\t\t\tpattern: /;;;.*/,\n\t\t\t\talias: ['comment', 'title']\n\t\t\t},\n\t\t\tcomment: /;.*/,\n\t\t\tstring: {\n\t\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\targument: /[-A-Z]+(?=[.,\\s])/,\n\t\t\t\t\tsymbol: RegExp('`' + symbol + \"'\")\n\t\t\t\t}\n\t\t\t},\n\t\t\t'quoted-symbol': {\n\t\t\t\tpattern: RegExp(\"#?'\" + symbol),\n\t\t\t\talias: ['variable', 'symbol']\n\t\t\t},\n\t\t\t'lisp-property': {\n\t\t\t\tpattern: RegExp(':' + symbol),\n\t\t\t\talias: 'property'\n\t\t\t},\n\t\t\tsplice: {\n\t\t\t\tpattern: RegExp(',@?' + symbol),\n\t\t\t\talias: ['symbol', 'variable']\n\t\t\t},\n\t\t\tkeyword: [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(\n\t\t\t\t\t\tpar +\n\t\t\t\t\t\t\t'(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n\t\t\t\t\t\t\tspace\n\t\t\t\t\t),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(\n\t\t\t\t\t\tpar + '(?:for|do|collect|return|finally|append|concat|in|by)' + space\n\t\t\t\t\t),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t],\n\t\t\tdeclare: {\n\t\t\t\tpattern: simple_form('declare'),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\tinteractive: {\n\t\t\t\tpattern: simple_form('interactive'),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\tboolean: {\n\t\t\t\tpattern: primitive('(?:t|nil)'),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tpattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\tdefvar: {\n\t\t\t\tpattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tkeyword: /^def[a-z]+/,\n\t\t\t\t\tvariable: RegExp(symbol)\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefun: {\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\tpar +\n\t\t\t\t\t\t'(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n\t\t\t\t\t\tsymbol +\n\t\t\t\t\t\t'\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tkeyword: /^(?:cl-)?def\\S+/,\n\t\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t\t// reference the language object.\n\t\t\t\t\targuments: null,\n\t\t\t\t\tfunction: {\n\t\t\t\t\t\tpattern: RegExp('(^\\\\s)' + symbol),\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\tpunctuation: /[()]/\n\t\t\t\t}\n\t\t\t},\n\t\t\tlambda: {\n\t\t\t\tpattern: RegExp(par + 'lambda\\\\s+\\\\(\\\\s*(?:&?' + symbol + '(?:\\\\s+&?' + symbol + ')*\\\\s*)?\\\\)'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tkeyword: /^lambda/,\n\t\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t\t// reference the language object.\n\t\t\t\t\targuments: null,\n\t\t\t\t\tpunctuation: /[()]/\n\t\t\t\t}\n\t\t\t},\n\t\t\tcar: {\n\t\t\t\tpattern: RegExp(par + symbol),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\tpunctuation: [\n\t\t\t\t// open paren, brackets, and close paren\n\t\t\t\t/(?:['`,]?\\(|[)\\[\\]])/,\n\t\t\t\t// cons\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\s)\\.(?=\\s)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\tvar arg = {\n\t\t\t'lisp-marker': RegExp(marker),\n\t\t\trest: {\n\t\t\t\targument: {\n\t\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\tvarform: {\n\t\t\t\t\tpattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tstring: language.string,\n\t\t\t\t\t\tboolean: language.boolean,\n\t\t\t\t\t\tnumber: language.number,\n\t\t\t\t\t\tsymbol: language.symbol,\n\t\t\t\t\t\tpunctuation: /[()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n\t\tvar arglist = {\n\t\t\tpattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'rest-vars': {\n\t\t\t\t\tpattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n\t\t\t\t\tinside: arg\n\t\t\t\t},\n\t\t\t\t'other-marker-vars': {\n\t\t\t\t\tpattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n\t\t\t\t\tinside: arg\n\t\t\t\t},\n\t\t\t\tkeys: {\n\t\t\t\t\tpattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n\t\t\t\t\tinside: arg\n\t\t\t\t},\n\t\t\t\targument: {\n\t\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\tpunctuation: /[()]/\n\t\t\t}\n\t\t};\n\n\t\tlanguage['lambda'].inside.arguments = arglist;\n\t\tlanguage['defun'].inside.arguments = Prism.util.clone(arglist);\n\t\tlanguage['defun'].inside.arguments.inside.sublist = arglist;\n\n\t\tPrism.languages.lisp = language;\n\t\tPrism.languages.elisp = language;\n\t\tPrism.languages.emacs = language;\n\t\tPrism.languages['emacs-lisp'] = language;\n\t}(Prism));\n\n\t// This is a language definition for generic log files.\n\t// Since there is no one log format, this language definition has to support all formats to some degree.\n\t//\n\t// Based on https://github.com/MTDL9/vim-log-highlighting\n\n\tPrism.languages.log = {\n\t\t'string': {\n\t\t\t// Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n\t\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t\t\tgreedy: true,\n\t\t},\n\n\t\t'level': [\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n\t\t\t\talias: ['error', 'important']\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n\t\t\t\talias: ['warning', 'important']\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n\t\t\t\talias: ['info', 'keyword']\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n\t\t\t\talias: ['debug', 'keyword']\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n\t\t\t\talias: ['trace', 'comment']\n\t\t\t}\n\t\t],\n\n\t\t'property': {\n\t\t\tpattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'separator': {\n\t\t\tpattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\n\t\t'url': /\\b(?:https?|ftp|file):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n\t\t'email': {\n\t\t\tpattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'url'\n\t\t},\n\n\t\t'ip-address': {\n\t\t\tpattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'mac-address': {\n\t\t\tpattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'domain': {\n\t\t\tpattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'constant'\n\t\t},\n\n\t\t'uuid': {\n\t\t\tpattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'hash': {\n\t\t\tpattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\n\t\t'file-path': {\n\t\t\tpattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\n\t\t'date': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n\t\t\t\t'|' +\n\t\t\t\t/\\b\\d{1,4}[-/ ](?:\\d{1,2}|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[-/ ]\\d{2,4}T?\\b/.source +\n\t\t\t\t'|' +\n\t\t\t\t/\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:\\s{1,2}(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))?|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s{1,2}\\d{1,2}\\b/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\talias: 'number'\n\t\t},\n\t\t'time': {\n\t\t\tpattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n\t\t\talias: 'number'\n\t\t},\n\n\t\t'boolean': /\\b(?:true|false|null)\\b/i,\n\t\t'number': {\n\t\t\tpattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'operator': /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n\t\t'punctuation': /[\\[\\].,]/\n\t};\n\n\tPrism.languages.lua = {\n\t\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n\t\t// \\z may be used to skip the following space\n\t\t'string': {\n\t\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n\t\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n\t\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n\t\t'operator': [\n\t\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n\t\t\t{\n\t\t\t\t// Match \"..\" but don't break \"...\"\n\t\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\n\t};\n\n\tPrism.languages.makefile = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// Built-in target names\n\t\t'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n\t\t// Targets\n\t\t'symbol': {\n\t\t\tpattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n\t\t\tinside: {\n\t\t\t\t'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n\t\t\t}\n\t\t},\n\t\t'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n\t\t'keyword': [\n\t\t\t// Directives\n\t\t\t/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n\t\t\t// Functions\n\t\t\t{\n\t\t\t\tpattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'operator': /(?:::|[?:+!])?=|[|@]/,\n\t\t'punctuation': /[:;(){}]/\n\t};\n\n\t(function (Prism) {\n\n\t\t// Allow only one line break\n\t\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n\n\t\t/**\n\t\t * This function is intended for the creation of the bold or italic pattern.\n\t\t *\n\t\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t\t *\n\t\t * _Note:_ Keep in mind that this adds a capturing group.\n\t\t *\n\t\t * @param {string} pattern\n\t\t * @returns {RegExp}\n\t\t */\n\t\tfunction createInline(pattern) {\n\t\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t\t}\n\n\n\t\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\t\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\t\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\t\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\t\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t\t'front-matter-block': {\n\t\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t\t'font-matter': {\n\t\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'blockquote': {\n\t\t\t\t// > ...\n\t\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'table': {\n\t\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\t\tinside: {\n\t\t\t\t\t'table-data-rows': {\n\t\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'table-line': {\n\t\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'table-header-row': {\n\t\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'code': [\n\t\t\t\t{\n\t\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// `code`\n\t\t\t\t\t// ``code``\n\t\t\t\t\tpattern: /``.+?``|`[^`\\r\\n]+`/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// ```optional language\n\t\t\t\t\t// code block\n\t\t\t\t\t// ```\n\t\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'code-block': {\n\t\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'code-language': {\n\t\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /```/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'title': [\n\t\t\t\t{\n\t\t\t\t\t// title 1\n\t\t\t\t\t// =======\n\n\t\t\t\t\t// title 2\n\t\t\t\t\t// -------\n\t\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\t\talias: 'important',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// # title 1\n\t\t\t\t\t// ###### title 6\n\t\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'important',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'hr': {\n\t\t\t\t// ***\n\t\t\t\t// ---\n\t\t\t\t// * * *\n\t\t\t\t// -----------\n\t\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'list': {\n\t\t\t\t// * item\n\t\t\t\t// + item\n\t\t\t\t// - item\n\t\t\t\t// 1. item\n\t\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'url-reference': {\n\t\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': {\n\t\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t\t},\n\t\t\t\talias: 'url'\n\t\t\t},\n\t\t\t'bold': {\n\t\t\t\t// **strong**\n\t\t\t\t// __strong__\n\n\t\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'content': {\n\t\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {} // see below\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'italic': {\n\t\t\t\t// *em*\n\t\t\t\t// _em_\n\n\t\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'content': {\n\t\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {} // see below\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /[*_]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'strike': {\n\t\t\t\t// ~~strike through~~\n\t\t\t\t// ~strike~\n\t\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'content': {\n\t\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {} // see below\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /~~?/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'url': {\n\t\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t\t// [example][id]\n\t\t\t\t// [example] [id]\n\t\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /^!/,\n\t\t\t\t\t'content': {\n\t\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {} // see below\n\t\t\t\t\t},\n\t\t\t\t\t'variable': {\n\t\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'url': {\n\t\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t\t['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n\t\t\t\tif (token !== inside) {\n\t\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tPrism.hooks.add('after-tokenize', function (env) {\n\t\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction walkTokens(tokens) {\n\t\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\t\tvar token = tokens[i];\n\n\t\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t\t *\n\t\t\t\t\t * token.content = [\n\t\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t\t * ];\n\t\t\t\t\t */\n\n\t\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n\t\t\t\t\t\t// only use the first word\n\t\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t\t// add alias\n\t\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twalkTokens(env.tokens);\n\t\t});\n\n\t\tPrism.hooks.add('wrap', function (env) {\n\t\t\tif (env.type !== 'code-block') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar codeLang = '';\n\t\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\t\tvar cls = env.classes[i];\n\t\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\t\tif (match) {\n\t\t\t\t\tcodeLang = match[1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar grammar = Prism.languages[codeLang];\n\n\t\t\tif (!grammar) {\n\t\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\t\tif (ele) {\n\t\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// get the textContent of the given env HTML\n\t\t\t\tvar tempContainer = document.createElement('div');\n\t\t\t\ttempContainer.innerHTML = env.content;\n\t\t\t\tvar code = tempContainer.textContent;\n\n\t\t\t\tenv.content = Prism.highlight(code, grammar, codeLang);\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.md = Prism.languages.markdown;\n\n\t}(Prism));\n\n\tPrism.languages.matlab = {\n\t\t'comment': [\n\t\t\t/%\\{[\\s\\S]*?\\}%/,\n\t\t\t/%.+/\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// FIXME We could handle imaginary numbers as a whole\n\t\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n\t\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n\t\t'function': /(?!\\d)\\w+(?=\\s*\\()/,\n\t\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n\t\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n\t};\n\n\tPrism.languages.nasm = {\n\t\t'comment': /;.*$/m,\n\t\t'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t'label': {\n\t\t\tpattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'keyword': [\n\t\t\t/\\[?BITS (?:16|32|64)\\]?/,\n\t\t\t{\n\t\t\t\tpattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/(?:extern|global)[^;\\r\\n]*/i,\n\t\t\t/(?:CPU|FLOAT|DEFAULT).*$/m\n\t\t],\n\t\t'register': {\n\t\t\tpattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'number': /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n\t\t'operator': /[\\[\\]*+\\-\\/%<>=&|$!]/\n\t};\n\n\t(function (Prism) {\n\n\t\tvar variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n\n\t\tPrism.languages.nginx = {\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[\\s{};])#.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'directive': {\n\t\t\t\tpattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'escape': {\n\t\t\t\t\t\t\t\tpattern: /\\\\[\"'\\\\nrt]/,\n\t\t\t\t\t\t\t\talias: 'entity'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'variable': variable\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'comment': {\n\t\t\t\t\t\tpattern: /(\\s)#.*/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': {\n\t\t\t\t\t\tpattern: /^\\S+/,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\n\t\t\t\t\t// other patterns\n\n\t\t\t\t\t'boolean': {\n\t\t\t\t\t\tpattern: /(\\s)(?:off|on)(?!\\S)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'number': {\n\t\t\t\t\t\tpattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'variable': variable\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /[{};]/\n\t\t};\n\n\t}(Prism));\n\n\tPrism.languages.nim = {\n\t\t'comment': /#.*/,\n\t\t// Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n\t\t// Character literals are handled specifically to prevent issues with numeric type suffixes\n\t\t'string': {\n\t\t\tpattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// The negative look ahead prevents wrong highlighting of the .. operator\n\t\t'number': /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n\t\t'keyword': /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n\t\t'function': {\n\t\t\tpattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n\t\t\tinside: {\n\t\t\t\t'operator': /\\*$/\n\t\t\t}\n\t\t},\n\t\t// We don't want to highlight operators inside backticks\n\t\t'ignore': {\n\t\t\tpattern: /`[^`\\r\\n]+`/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /`/\n\t\t\t}\n\t\t},\n\t\t'operator': {\n\t\t\t// Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n\t\t\t// but allow the slice operator .. to take precedence over them\n\t\t\t// One can define his own operators in Nim so all combination of operators might be an operator.\n\t\t\tpattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n\t};\n\tPrism.languages.objectivec = Prism.languages.extend('c', {\n\t\t'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t\t'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n\t\t'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n\t});\n\n\tdelete Prism.languages.objectivec['class-name'];\n\n\tPrism.languages.objc = Prism.languages.objectivec;\n\n\tPrism.languages.ocaml = {\n\t\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n\t\t'directive': {\n\t\t\tpattern: /\\B#\\w+/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'label': {\n\t\t\tpattern: /\\B~\\w+/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'type-variable': {\n\t\t\tpattern: /\\B'\\w+/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'variant': {\n\t\t\tpattern: /`\\w+/,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'module': {\n\t\t\tpattern: /\\b[A-Z]\\w+/,\n\t\t\talias: 'variable'\n\t\t},\n\t\t// For the list of keywords and operators,\n\t\t// see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n\t\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t// Custom operators are allowed\n\t\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n\t\t'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n\t};\n\n\t(function (Prism) {\n\t\t/* OpenCL kernel language */\n\t\tPrism.languages.opencl = Prism.languages.extend('c', {\n\t\t\t// Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n\t\t\t'keyword': /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|auto|break|case|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n\t\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n\t\t\t// Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n\t\t\t// Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n\t\t\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n\t\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t\t'constant-opencl-kernel': {\n\t\t\t\tpattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF?|INFINITY|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|(?:UCHAR|USHRT|UINT|ULONG)_MAX|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN)\\b/,\n\t\t\t\talias: 'constant'\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('opencl', 'class-name', {\n\t\t\t// https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n\t\t\t// https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n\t\t\t'builtin-type': {\n\t\t\t\tpattern: /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t});\n\n\t\tvar attributes = {\n\t\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n\t\t\t'type-opencl-host': {\n\t\t\t\tpattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'boolean-opencl-host': {\n\t\t\t\tpattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n\t\t\t\talias: 'boolean'\n\t\t\t},\n\t\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n\t\t\t'constant-opencl-host': {\n\t\t\t\tpattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n\t\t\t\talias: 'constant'\n\t\t\t},\n\t\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n\t\t\t'function-opencl-host': {\n\t\t\t\tpattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t};\n\n\t\t/* OpenCL host API */\n\t\tPrism.languages.insertBefore('c', 'keyword', attributes);\n\n\t\t// C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n\t\tif (Prism.languages.cpp) {\n\t\t\t// Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n\t\t\tattributes['type-opencl-host-cpp'] = {\n\t\t\t\tpattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n\t\t\t\talias: 'keyword'\n\t\t\t};\n\n\t\t\tPrism.languages.insertBefore('cpp', 'keyword', attributes);\n\t\t}\n\t}(Prism));\n\n\t// Based on Free Pascal\n\n\t/* TODO\n\t\tSupport inline asm ?\n\t*/\n\n\tPrism.languages.pascal = {\n\t\t'comment': [\n\t\t\t/\\(\\*[\\s\\S]+?\\*\\)/,\n\t\t\t/\\{[\\s\\S]+?\\}/,\n\t\t\t/\\/\\/.*/\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\t// Turbo Pascal\n\t\t\t\tpattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Free Pascal\n\t\t\t\tpattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Object Pascal\n\t\t\t\tpattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Modifiers\n\t\t\t\tpattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': [\n\t\t\t// Hexadecimal, octal and binary\n\t\t\t/(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n\t\t\t// Decimal\n\t\t\t/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n\t\t],\n\t\t'operator': [\n\t\t\t/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n\t\t\t{\n\t\t\t\tpattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n\t};\n\n\tPrism.languages.objectpascal = Prism.languages.pascal;\n\n\tPrism.languages.perl = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\t// POD\n\t\t\t\tpattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\$])#.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t// TODO Could be nice to handle Heredoc too.\n\t\t'string': [\n\t\t\t// q/.../\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// q a...a\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// q(...)\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// q{...}\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// q[...]\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// q<...>\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// \"...\", `...`\n\t\t\t{\n\t\t\t\tpattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// '...'\n\t\t\t// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n\t\t\t{\n\t\t\t\tpattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'regex': [\n\t\t\t// m/.../\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// m a...a\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// m(...)\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// m{...}\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// m[...]\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// m<...>\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// The lookbehinds prevent -s from breaking\n\t\t\t// FIXME We don't handle change of separator like s(...)[...]\n\t\t\t// s/.../.../\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// s a...a...a\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// s(...)(...)\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// s{...}{...}\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// s[...][...]\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// s<...><...>\n\t\t\t{\n\t\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\n\t\t\t// /.../\n\t\t\t// The look-ahead tries to prevent two divisions on\n\t\t\t// the same line from being highlighted as regex.\n\t\t\t// This does not support multi-line regex.\n\t\t\t{\n\t\t\t\tpattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\n\t\t// FIXME Not sure about the handling of ::, ', and #\n\t\t'variable': [\n\t\t\t// ${^POSTMATCH}\n\t\t\t/[&*$@%]\\{\\^[A-Z]+\\}/,\n\t\t\t// $^V\n\t\t\t/[&*$@%]\\^[A-Z_]/,\n\t\t\t// ${...}\n\t\t\t/[&*$@%]#?(?=\\{)/,\n\t\t\t// $foo\n\t\t\t/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/i,\n\t\t\t// $1\n\t\t\t/[&*$@%]\\d+/,\n\t\t\t// $_, @_, %!\n\t\t\t// The negative lookahead prevents from breaking the %= operator\n\t\t\t/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n\t\t],\n\t\t'filehandle': {\n\t\t\t// <>, <FOO>, _\n\t\t\tpattern: /<(?![<=])\\S*>|\\b_\\b/,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'vstring': {\n\t\t\t// v1.2, 1.2.3\n\t\t\tpattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n\t\t\talias: 'string'\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /sub [a-z0-9_]+/i,\n\t\t\tinside: {\n\t\t\t\tkeyword: /sub/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n\t\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n\t\t'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n\t\t'punctuation': /[{}[\\];(),:]/\n\t};\n\n\t(function (Prism) {\n\n\t\tvar typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source;\n\n\t\tPrism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n\t\t\t'parameter': {\n\t\t\t\tpattern: RegExp('(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' + typeExpression + '\\\\s+)?)\\\\$\\\\w+'),\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('phpdoc', 'keyword', {\n\t\t\t'class-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp('(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' + typeExpression),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,\n\t\t\t\t\t\t'punctuation': /[|\\\\[\\]()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t});\n\n\t\tPrism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc);\n\n\t}(Prism));\n\n\tPrism.languages.insertBefore('php', 'variable', {\n\t\t'this': /\\$this\\b/,\n\t\t'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n\t\t'scope': {\n\t\t\tpattern: /\\b[\\w\\\\]+::/,\n\t\t\tinside: {\n\t\t\t\tkeyword: /static|self|parent/,\n\t\t\t\tpunctuation: /::|\\\\/\n\t\t\t}\n\t\t}\n\t});\n\tPrism.languages.sql = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'variable': [\n\t\t\t{\n\t\t\t\tpattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t/@[\\w.$]+/\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, // Should we highlight user defined functions too?\n\t\t'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n\t\t'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n\t\t'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n\t\t'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|IN|ILIKE|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n\t\t'punctuation': /[;[\\]()`,.]/\n\t};\n\n\t(function (Prism) {\n\n\t\tvar plsql = Prism.languages.plsql = Prism.languages.extend('sql', {\n\t\t\t'comment': [\n\t\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t\t/--.*/\n\t\t\t]\n\t\t});\n\n\t\tvar keyword = plsql['keyword'];\n\t\tif (!Array.isArray(keyword)) {\n\t\t\tkeyword = plsql['keyword'] = [keyword];\n\t\t}\n\t\tkeyword.unshift(\n\t\t\t/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i\n\t\t);\n\n\t\tvar operator = plsql['operator'];\n\t\tif (!Array.isArray(operator)) {\n\t\t\toperator = plsql['operator'] = [operator];\n\t\t}\n\t\toperator.unshift(\n\t\t\t/:=/\n\t\t);\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar powershell = Prism.languages.powershell = {\n\t\t\t'comment': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^|[^`])<#[\\s\\S]*?#>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^|[^`])#.*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'function': {\n\t\t\t\t\t\t\t// Allow for one level of nesting\n\t\t\t\t\t\t\tpattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t// Populated at end of file\n\t\t\t\t\t\t\tinside: {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /'(?:[^']|'')*'/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t// Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n\t\t\t// Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n\t\t\t'namespace': /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n\t\t\t'boolean': /\\$(?:true|false)\\b/i,\n\t\t\t'variable': /\\$\\w+\\b/,\n\t\t\t// Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n\t\t\t// Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n\t\t\t// Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n\t\t\t'function': [\n\t\t\t\t/\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n\t\t\t\t/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n\t\t\t],\n\t\t\t// per http://technet.microsoft.com/en-us/library/hh847744.aspx\n\t\t\t'keyword': /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n\t\t\t'operator': {\n\t\t\t\tpattern: /(\\W?)(?:!|-(?:eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /[|{}[\\];(),.]/\n\t\t};\n\n\t\t// Variable interpolation inside strings, and nested expressions\n\t\tvar stringInside = powershell.string[0].inside;\n\t\tstringInside.boolean = powershell.boolean;\n\t\tstringInside.variable = powershell.variable;\n\t\tstringInside.function.inside = powershell;\n\n\t}(Prism));\n\n\tPrism.languages.purescript = Prism.languages.extend('haskell', {\n\t\t'keyword': /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n\n\t\t'import-statement': {\n\t\t\t// The imported or hidden names are not included in this import\n\t\t\t// statement. This is because we want to highlight those exactly like\n\t\t\t// we do for the names in the program.\n\t\t\tpattern: /(^\\s*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': /\\b(?:import|as|hiding)\\b/\n\t\t\t}\n\t\t},\n\n\t\t// These are builtin functions only. Constructors are highlighted later as a constant.\n\t\t'builtin': /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n\t});\n\n\tPrism.languages.purs = Prism.languages.purescript;\n\n\tPrism.languages.python = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string-interpolation': {\n\t\t\tpattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\t\tpattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=}$)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'triple-quoted-string': {\n\t\t\tpattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'decorator': {\n\t\t\tpattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n\t\t\tlookbehind: true,\n\t\t\talias: ['annotation', 'punctuation'],\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t\t'boolean': /\\b(?:True|False|None)\\b/,\n\t\t'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\n\tPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\n\tPrism.languages.py = Prism.languages.python;\n\n\t(function (Prism) {\n\n\t\tvar jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n\t\tvar jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n\n\t\tvar jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/\n\t\t\t.source.replace(/<string>/g, function () { return jsString; }).replace(/<comment>/g, function () { return jsComment; });\n\n\t\t// the pattern will blow up, so only a few iterations\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tjsExpr = jsExpr.replace(/<expr>/g, function () { return jsExpr; });\n\t\t}\n\t\tjsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n\n\n\t\tPrism.languages.qml = {\n\t\t\t'comment': {\n\t\t\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'javascript-function': {\n\t\t\t\tpattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () { return jsExpr; }), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'language-javascript',\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t'class-name': {\n\t\t\t\tpattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'property': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^property/,\n\t\t\t\t\t\t'property': /\\w+(?:\\.\\w+)*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'javascript-expression': {\n\t\t\t\tpattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () { return jsExpr; }), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'language-javascript',\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t'string': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\t'keyword': /\\b(?:as|import|on)\\b/,\n\t\t\t'punctuation': /[{}[\\]:;,]/\n\t\t};\n\n\t}(Prism));\n\n\tPrism.languages.r = {\n\t\t'comment': /#.*/,\n\t\t'string': {\n\t\t\tpattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'percent-operator': {\n\t\t\t// Includes user-defined operators\n\t\t\t// and %%, %*%, %/%, %in%, %o%, %x%\n\t\t\tpattern: /%[^%\\s]*%/,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'boolean': /\\b(?:TRUE|FALSE)\\b/,\n\t\t'ellipsis': /\\.\\.(?:\\.|\\d+)/,\n\t\t'number': [\n\t\t\t/\\b(?:NaN|Inf)\\b/,\n\t\t\t/(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n\t\t],\n\t\t'keyword': /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n\t\t'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n\t\t'punctuation': /[(){}\\[\\],;]/\n\t};\n\n\t(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?={)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t\t'alias': 'language-javascript'\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tvar typescript = Prism.util.clone(Prism.languages.typescript);\n\t\tPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n\t\t// This will prevent collisions between TSX tags and TS generic types.\n\t\t// Idea by https://github.com/karlhorky\n\t\t// Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\t\tvar tag = Prism.languages.tsx.tag;\n\t\ttag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n\t\ttag.lookbehind = true;\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tvar specialEscape = {\n\t\t\tpattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n\t\t\talias: 'escape'\n\t\t};\n\t\tvar escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n\t\tvar charClass = {\n\t\t\tpattern: /\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,\n\t\t\talias: 'class-name'\n\t\t};\n\t\tvar charClassWithoutDot = {\n\t\t\tpattern: /\\\\[wsd]|\\\\p{[^{}]+}/i,\n\t\t\talias: 'class-name'\n\t\t};\n\n\t\tvar rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n\t\tvar range = RegExp(rangeChar + '-' + rangeChar);\n\n\t\t// the name of a capturing group\n\t\tvar groupName = {\n\t\t\tpattern: /(<|')[^<>']+(?=[>']$)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable'\n\t\t};\n\n\t\tPrism.languages.regex = {\n\t\t\t'charset': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'charset-negation': {\n\t\t\t\t\t\tpattern: /(^\\[)\\^/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'operator'\n\t\t\t\t\t},\n\t\t\t\t\t'charset-punctuation': {\n\t\t\t\t\t\tpattern: /^\\[|\\]$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\t'range': {\n\t\t\t\t\t\tpattern: range,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'escape': escape,\n\t\t\t\t\t\t\t'range-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /-/,\n\t\t\t\t\t\t\t\talias: 'operator'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'special-escape': specialEscape,\n\t\t\t\t\t'charclass': charClassWithoutDot,\n\t\t\t\t\t'escape': escape\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-escape': specialEscape,\n\t\t\t'charclass': charClass,\n\t\t\t'backreference': [\n\t\t\t\t{\n\t\t\t\t\t// a backreference which is not an octal escape\n\t\t\t\t\tpattern: /\\\\(?![123][0-7]{2})[1-9]/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\\\k<[^<>']+>/,\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'group-name': groupName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'anchor': {\n\t\t\t\tpattern: /[$^]|\\\\[ABbGZz]/,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'escape': escape,\n\t\t\t'group': [\n\t\t\t\t{\n\t\t\t\t\t// https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n\t\t\t\t\t// https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n\t\t\t\t\t// (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n\t\t\t\t\tpattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n\t\t\t\t\talias: 'punctuation',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'group-name': groupName\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'quantifier': {\n\t\t\t\tpattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t'alternation': {\n\t\t\t\tpattern: /\\|/,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t};\n\n\t}(Prism));\n\n\tPrism.languages.rest = {\n\t\t'table': [\n\t\t\t{\n\t\t\t\tpattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\||(?:\\+[=-]+)+\\+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\s*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=-]+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\n\t\t// Directive-like patterns\n\n\t\t'substitution-def': {\n\t\t\tpattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'substitution': {\n\t\t\t\t\tpattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n\t\t\t\t\talias: 'attr-value',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^\\||\\|$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /( +)(?! )[^:]+::/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /::$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'link-target': [\n\t\t\t{\n\t\t\t\tpattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^\\[|\\]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^_|:$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'directive': {\n\t\t\tpattern: /(^\\s*\\.\\. )[^:]+::/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::$/\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\t// The two alternatives try to prevent highlighting of blank comments\n\t\t\tpattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'title': [\n\t\t\t// Overlined and underlined\n\t\t\t{\n\t\t\t\tpattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n\t\t\t\t\t'important': /.+/\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Underlined only\n\t\t\t{\n\t\t\t\tpattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n\t\t\t\t\t'important': /.+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\tpattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'field': {\n\t\t\tpattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-name'\n\t\t},\n\t\t'command-line-option': {\n\t\t\tpattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'literal-block': {\n\t\t\tpattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n\t\t\tinside: {\n\t\t\t\t'literal-block-punctuation': {\n\t\t\t\t\tpattern: /^::/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'quoted-literal-block': {\n\t\t\tpattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n\t\t\tinside: {\n\t\t\t\t'literal-block-punctuation': {\n\t\t\t\t\tpattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'list-bullet': {\n\t\t\tpattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'doctest-block': {\n\t\t\tpattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^>>>/\n\t\t\t}\n\t\t},\n\n\t\t'inline': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'bold': {\n\t\t\t\t\t\tpattern: /(^\\*\\*).+(?=\\*\\*$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'italic': {\n\t\t\t\t\t\tpattern: /(^\\*).+(?=\\*$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'inline-literal': {\n\t\t\t\t\t\tpattern: /(^``).+(?=``$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'symbol'\n\t\t\t\t\t},\n\t\t\t\t\t'role': {\n\t\t\t\t\t\tpattern: /^:[^:]+:|:[^:]+:$/,\n\t\t\t\t\t\talias: 'function',\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /^:|:$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'interpreted-text': {\n\t\t\t\t\t\tpattern: /(^`).+(?=`$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'attr-value'\n\t\t\t\t\t},\n\t\t\t\t\t'substitution': {\n\t\t\t\t\t\tpattern: /(^\\|).+(?=\\|$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'attr-value'\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /\\*\\*?|``?|\\|/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\n\t\t'link': [\n\t\t\t{\n\t\t\t\tpattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^\\[|\\]_$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^_?`|`$|`?_?_$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\n\t\t// Line block start,\n\t\t// quote attribution,\n\t\t// explicit markup start,\n\t\t// and anonymous hyperlink target shortcut (__)\n\t\t'punctuation': {\n\t\t\tpattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\t(function (Prism) {\n\n\t\tvar multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t// support 4 levels of nested comments\n\t\t\tmultilineComment = multilineComment.replace(/<self>/g, function () { return multilineComment; });\n\t\t}\n\t\tmultilineComment = multilineComment.replace(/<self>/g, function () { return /[^\\s\\S]/.source; });\n\n\n\t\tPrism.languages.rust = {\n\t\t\t'comment': [\n\t\t\t\t{\n\t\t\t\t\tpattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'string': {\n\t\t\t\tpattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'char': {\n\t\t\t\tpattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'attribute': {\n\t\t\t\tpattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'attr-name',\n\t\t\t\tinside: {\n\t\t\t\t\t'string': null // see below\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Closure params should not be confused with bitwise OR |\n\t\t\t'closure-params': {\n\t\t\t\tpattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'closure-punctuation': {\n\t\t\t\t\t\tpattern: /^\\||\\|$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null // see below\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'lifetime-annotation': {\n\t\t\t\tpattern: /'\\w+/,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\n\t\t\t'fragment-specifier': {\n\t\t\t\tpattern: /(\\$\\w+:)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'variable': /\\$\\w+/,\n\n\t\t\t'function-definition': {\n\t\t\t\tpattern: /(\\bfn\\s+)\\w+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'type-definition': {\n\t\t\t\tpattern: /(\\b(?:enum|struct|union)\\s+)\\w+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'module-declaration': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'namespace'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'namespace',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /::/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'keyword': [\n\t\t\t\t// https://github.com/rust-lang/reference/blob/master/src/keywords.md\n\t\t\t\t/\\b(?:abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|Self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\t\t\t\t// primitives and str\n\t\t\t\t// https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n\t\t\t\t/\\b(?:[ui](?:8|16|32|64|128|size)|f(?:32|64)|bool|char|str)\\b/\n\t\t\t],\n\n\t\t\t// functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n\t\t\t// and Rust's naming conventions recommend snake_case anyway.\n\t\t\t// https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n\t\t\t'function': /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n\t\t\t'macro': {\n\t\t\t\tpattern: /\\w+!/,\n\t\t\t\talias: 'property'\n\t\t\t},\n\t\t\t'constant': /\\b[A-Z_][A-Z_\\d]+\\b/,\n\t\t\t'class-name': /\\b[A-Z]\\w*\\b/,\n\n\t\t\t'namespace': {\n\t\t\t\tpattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /::/\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Hex, oct, bin, dec numbers with visual separators and type suffix\n\t\t\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64|size)?|f32|f64))?\\b/,\n\t\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t\t'punctuation': /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n\t\t\t'operator': /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n\t\t};\n\n\t\tPrism.languages.rust['closure-params'].inside.rest = Prism.languages.rust;\n\t\tPrism.languages.rust['attribute'].inside['string'] = Prism.languages.rust['string'];\n\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tPrism.languages.sass = Prism.languages.extend('css', {\n\t\t\t// Sass comments don't need to be closed, only indented\n\t\t\t'comment': {\n\t\t\t\tpattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('sass', 'atrule', {\n\t\t\t// We want to consume the whole line\n\t\t\t'atrule-line': {\n\t\t\t\t// Includes support for = and + shortcuts\n\t\t\t\tpattern: /^(?:[ \\t]*)[@+=].+/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'atrule': /(?:@[\\w-]+|[+=])/m\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdelete Prism.languages.sass.atrule;\n\n\n\t\tvar variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n\t\tvar operator = [\n\t\t\t/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,\n\t\t\t{\n\t\t\t\tpattern: /(\\s+)-(?=\\s)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t];\n\n\t\tPrism.languages.insertBefore('sass', 'property', {\n\t\t\t// We want to consume the whole line\n\t\t\t'variable-line': {\n\t\t\t\tpattern: /^[ \\t]*\\$.+/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'operator': operator\n\t\t\t\t}\n\t\t\t},\n\t\t\t// We want to consume the whole line\n\t\t\t'property-line': {\n\t\t\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n\t\t\t\tinside: {\n\t\t\t\t\t'property': [\n\t\t\t\t\t\t/[^:\\s]+(?=\\s*:)/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(:)[^:\\s]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'operator': operator,\n\t\t\t\t\t'important': Prism.languages.sass.important\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdelete Prism.languages.sass.property;\n\t\tdelete Prism.languages.sass.important;\n\n\t\t// Now that whole lines for other patterns are consumed,\n\t\t// what's left should be selectors\n\t\tPrism.languages.insertBefore('sass', 'punctuation', {\n\t\t\t'selector': {\n\t\t\t\tpattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t}(Prism));\n\n\tPrism.languages.scss = Prism.languages.extend('css', {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// url, compassified\n\t\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t\t// CSS selector regex is not appropriate for Sass\n\t\t// since there can be lot more things (var, @ directive, nesting..)\n\t\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t\t// this one was hard to do, so please be careful if you edit this one :)\n\t\t'selector': {\n\t\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n\t\t\tinside: {\n\t\t\t\t'parent': {\n\t\t\t\t\tpattern: /&/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t},\n\t\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t\t}\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\t\tinside: {\n\t\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('scss', 'atrule', {\n\t\t'keyword': [\n\t\t\t/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i,\n\t\t\t{\n\t\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t]\n\t});\n\n\tPrism.languages.insertBefore('scss', 'important', {\n\t\t// var and interpolated vars\n\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t});\n\n\tPrism.languages.insertBefore('scss', 'function', {\n\t\t'module-modifier': {\n\t\t\tpattern: /\\b(?:as|with|show|hide)\\b/i,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'placeholder': {\n\t\t\tpattern: /%[-\\w]+/,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'statement': {\n\t\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'null': {\n\t\t\tpattern: /\\bnull\\b/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'operator': {\n\t\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n\n\tPrism.languages.scala = Prism.languages.extend('java', {\n\t\t'triple-quoted-string': {\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n\t\t'number': /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n\t\t'builtin': /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n\t\t'symbol': /'[^\\d\\s\\\\]\\w*/\n\t});\n\tdelete Prism.languages.scala['class-name'];\n\tdelete Prism.languages.scala['function'];\n\n\t(function (Prism) {\n\t\tPrism.languages.scheme = {\n\t\t\t// this supports \"normal\" single-line comments:\n\t\t\t//   ; comment\n\t\t\t// and (potentially nested) multiline comments:\n\t\t\t//   #| comment #| nested |# still comment |#\n\t\t\t// (only 1 level of nesting is supported)\n\t\t\t'comment': /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n\t\t\t'string': {\n\t\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'symbol': {\n\t\t\t\tpattern: /'[^()\\[\\]#'\\s]+/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'character': {\n\t\t\t\tpattern: /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'lambda-parameter': [\n\t\t\t\t// https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'keyword': {\n\t\t\t\tpattern: /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|export|except|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'builtin': {\n\t\t\t\t// all functions of the base library of R7RS plus some of built-ins of R5Rs\n\t\t\t\tpattern: /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'operator': {\n\t\t\t\tpattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'number': {\n\t\t\t\t// The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n\t\t\t\t//\n\t\t\t\t// <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n\t\t\t\t// <num R>       := <prefix R><complex R>\n\t\t\t\t// <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n\t\t\t\t// <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n\t\t\t\t// <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n\t\t\t\t// <ureal R>     := <uint R>(?:\\/<uint R>)?\n\t\t\t\t//                | <decimal R>\n\t\t\t\t//\n\t\t\t\t// <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n\t\t\t\t// <uint R>      := <digit R>+\n\t\t\t\t// <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n\t\t\t\t// <radix 2>     := #b\n\t\t\t\t// <radix 8>     := #o\n\t\t\t\t// <radix 10>    := (?:#d)?\n\t\t\t\t// <radix 16>    := #x\n\t\t\t\t// <digit 2>     := [01]\n\t\t\t\t// <digit 8>     := [0-7]\n\t\t\t\t// <digit 10>    := \\d\n\t\t\t\t// <digit 16>    := [0-9a-f]\n\t\t\t\t//\n\t\t\t\t// The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n\t\t\t\t// non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n\t\t\t\t// pattern:\n\t\t\t\tpattern: RegExp(SortedBNF({\n\t\t\t\t\t'<ureal dec>': /\\d+(?:\\/\\d+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/.source,\n\t\t\t\t\t'<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n\t\t\t\t\t'<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n\t\t\t\t\t'<complex dec>': /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,\n\t\t\t\t\t'<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n\n\t\t\t\t\t'<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n\t\t\t\t\t'<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n\t\t\t\t\t'<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n\t\t\t\t\t'<complex box>': /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,\n\t\t\t\t\t'<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,\n\n\t\t\t\t\t'<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/.source,\n\t\t\t\t}), 'i'),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'boolean': {\n\t\t\t\tpattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'identifier': {\n\t\t\t\tpattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /[()\\[\\]']/\n\t\t};\n\n\t\t/**\n\t\t * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n\t\t *\n\t\t * @param {Record<string, string>} grammar\n\t\t * @returns {string}\n\t\t */\n\t\tfunction SortedBNF(grammar) {\n\t\t\tfor (var key in grammar) {\n\t\t\t\tgrammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n\t\t\t\t\treturn '(?:' + grammar[key].trim() + ')';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// return the last item\n\t\t\treturn grammar[key];\n\t\t}\n\n\t}(Prism));\n\n\tPrism.languages.smalltalk = {\n\t\t'comment': /\"(?:\"\"|[^\"])*\"/,\n\t\t'character': {\n\t\t\tpattern: /\\$./,\n\t\t\talias: 'string'\n\t\t},\n\t\t'string': /'(?:''|[^'])*'/,\n\t\t'symbol': /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n\t\t'block-arguments': {\n\t\t\tpattern: /(\\[\\s*):[^\\[|]*\\|/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'variable': /:[\\da-z]+/i,\n\t\t\t\t'punctuation': /\\|/\n\t\t\t}\n\t\t},\n\t\t'temporary-variables': {\n\t\t\tpattern: /\\|[^|]+\\|/,\n\t\t\tinside: {\n\t\t\t\t'variable': /[\\da-z]+/i,\n\t\t\t\t'punctuation': /\\|/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:nil|true|false|self|super|new)\\b/,\n\t\t'number': [\n\t\t\t/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n\t\t\t/\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n\t\t],\n\t\t'operator': /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n\t\t'punctuation': /[.;:?\\[\\](){}]/\n\t};\n\n\t/* TODO\n\t\tAdd support for variables inside double quoted strings\n\t\tAdd support for {php}\n\t*/\n\n\t(function (Prism) {\n\n\t\tPrism.languages.smarty = {\n\t\t\t'comment': /\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t\t'variable': [\n\t\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'function': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t/^\\/?(?!\\d)\\w+/,\n\t\t\t\t/(?!\\d)\\w+(?=\\()/\n\t\t\t],\n\t\t\t'attr-name': {\n\t\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': {\n\t\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'operator': /=/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': [\n\t\t\t\t/[\\[\\]().,:`]|->/\n\t\t\t],\n\t\t\t'operator': [\n\t\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n\t\t\t],\n\t\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t\t};\n\n\t\t// Tokenize all inline Smarty expressions\n\t\tPrism.hooks.add('before-tokenize', function (env) {\n\t\t\tvar smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n\t\t\tvar smartyLitteralStart = '{literal}';\n\t\t\tvar smartyLitteralEnd = '{/literal}';\n\t\t\tvar smartyLitteralMode = false;\n\n\t\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\t\tif (match === smartyLitteralEnd) {\n\t\t\t\t\tsmartyLitteralMode = false;\n\t\t\t\t}\n\n\t\t\t\tif (!smartyLitteralMode) {\n\t\t\t\t\tif (match === smartyLitteralStart) {\n\t\t\t\t\t\tsmartyLitteralMode = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\n\t\t// Re-insert the tokens after tokenizing\n\t\tPrism.hooks.add('after-tokenize', function (env) {\n\t\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t\t});\n\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tvar unit = {\n\t\t\tpattern: /(\\b\\d+)(?:%|[a-z]+)/,\n\t\t\tlookbehind: true\n\t\t};\n\t\t// 123 -123 .123 -.123 12.3 -12.3\n\t\tvar number = {\n\t\t\tpattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n\t\t\tlookbehind: true\n\t\t};\n\n\t\tvar inside = {\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'url': {\n\t\t\t\tpattern: /url\\(([\"']?).*?\\1\\)/i,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'interpolation': null, // See below\n\t\t\t'func': null, // See below\n\t\t\t'important': /\\B!(?:important|optional)\\b/i,\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'hexcode': /#[\\da-f]{3,6}/i,\n\t\t\t'color': [\n\t\t\t\t/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'unit': unit,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\n\t\t\t\t\t\t'punctuation': /[(),]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'entity': /\\\\[\\da-f]{1,8}/i,\n\t\t\t'unit': unit,\n\t\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t\t'operator': [\n\t\t\t\t// We want non-word chars around \"-\" because it is\n\t\t\t\t// accepted in property names.\n\t\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n\t\t\t],\n\t\t\t'number': number,\n\t\t\t'punctuation': /[{}()\\[\\];:,]/\n\t\t};\n\n\t\tinside['interpolation'] = {\n\t\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\n\t\t\talias: 'variable',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^{|}$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: inside\n\t\t\t}\n\t\t};\n\t\tinside['func'] = {\n\t\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\n\t\t\tinside: {\n\t\t\t\t'function': /^[^(]+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t};\n\n\t\tPrism.languages.stylus = {\n\t\t\t'atrule-declaration': {\n\t\t\t\tpattern: /(^\\s*)@.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'atrule': /^@[\\w-]+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\t\t\t'variable-declaration': {\n\t\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\S+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'statement': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\S+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// A property/value pair cannot end with a comma or a brace\n\t\t\t// It cannot have indented content unless it ended with a semicolon\n\t\t\t'property-declaration': {\n\t\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'property': {\n\t\t\t\t\t\tpattern: /^[^\\s:]+/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation': inside.interpolation\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\n\n\n\t\t\t// A selector can contain parentheses only as part of a pseudo-element\n\t\t\t// It can span multiple lines.\n\t\t\t// It must end with a comma or an accolade or have indented content.\n\t\t\t'selector': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': inside.interpolation,\n\t\t\t\t\t'comment': inside.comment,\n\t\t\t\t\t'punctuation': /[{},]/\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'func': inside.func,\n\t\t\t'string': inside.string,\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'interpolation': inside.interpolation,\n\t\t\t'punctuation': /[{}()\\[\\];:.]/\n\t\t};\n\t}(Prism));\n\n\t// issues: nested multiline comments\n\tPrism.languages.swift = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[^(])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tdelimiter: {\n\t\t\t\t\t\t\tpattern: /^\\\\\\(|\\)$/,\n\t\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// See rest below\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|some|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n\t\t'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n\t\t'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n\t\t'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n\t\t'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n\t});\n\tPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n\n\t(function (Prism) {\n\n\t\tvar key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n\n\t\t/**\n\t\t * @param {string} pattern\n\t\t */\n\t\tfunction insertKey(pattern) {\n\t\t\treturn pattern.replace(/__/g, function () { return key; });\n\t\t}\n\n\t\tPrism.languages.toml = {\n\t\t\t'comment': {\n\t\t\t\tpattern: /#.*/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'table': {\n\t\t\t\tpattern: RegExp(insertKey(/(^\\s*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'key': {\n\t\t\t\tpattern: RegExp(insertKey(/(^\\s*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'property'\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'date': [\n\t\t\t\t{\n\t\t\t\t\t// Offset Date-Time, Local Date-Time, Local Date\n\t\t\t\t\tpattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n\t\t\t\t\talias: 'number'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// Local Time\n\t\t\t\t\tpattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n\t\t\t\t\talias: 'number'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n\t\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t\t'punctuation': /[.,=[\\]{}]/\n\t\t};\n\t}(Prism));\n\n\t(function (Prism) {\n\t\tvar interpolationExpr = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: null\n\t\t};\n\n\t\tPrism.languages.v = Prism.languages.extend('clike', {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /`(?:\\\\\\`|\\\\?[^\\`]{1,2})`/, // using {1,2} instead of `u` flag for compatibility\n\t\t\t\t\talias: 'rune'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\t\talias: 'quoted-string',\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'interpolation-variable': {\n\t\t\t\t\t\t\t\t\tpattern: /^\\$\\w[\\s\\S]*$/,\n\t\t\t\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'interpolation-expression': interpolationExpr\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'class-name': {\n\t\t\t\tpattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?[\\w]+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'keyword': /(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,\n\t\t\t'number': /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n\t\t\t'operator': /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n\t\t\t'builtin': /\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n\t\t});\n\n\t\tinterpolationExpr.inside = Prism.languages.v;\n\n\t\tPrism.languages.insertBefore('v', 'operator', {\n\t\t\t'attribute': {\n\t\t\t\tpattern: /^\\s*\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,\n\t\t\t\talias: 'annotation',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'keyword': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'generic': {\n\t\t\t\tpattern: /\\<\\w+\\>(?=\\s*[\\)\\{])/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[<>]/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tPrism.languages.insertBefore('v', 'function', {\n\t\t\t'generic-function': {\n\t\t\t\t// e.g. foo<T>( ...\n\t\t\t\tpattern: /\\w+\\s*<\\w+>(?=\\()/,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': /^\\w+/,\n\t\t\t\t\t'generic': {\n\t\t\t\t\t\tpattern: /<\\w+>/,\n\t\t\t\t\t\tinside: Prism.languages.v.generic.inside\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}(Prism));\n\tPrism.languages.vim = {\n\t\t'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n\t\t'comment': /\".*/,\n\t\t'function': /\\w+(?=\\()/,\n\t\t'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n\t\t'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n\t\t'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n\t\t'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n\t\t'punctuation': /[{}[\\](),;:]/\n\t};\n\n\tPrism.languages.wasm = {\n\t\t'comment': [\n\t\t\t/\\(;[\\s\\S]*?;\\)/,\n\t\t\t{\n\t\t\t\tpattern: /;;.*/,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:align|offset)=/,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /=/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n\t\t],\n\t\t'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n\t\t'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n\t\t'punctuation': /[()]/\n\t};\n\t(function (Prism) {\n\n\t\t// https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n\t\t// https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n\t\tvar anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n\t\t// https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\t\tvar tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n\t\t// https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\t\tvar properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|'\n\t\t\t+ anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n\t\t// https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n\t\t// This is a simplified version that doesn't support \"#\" and multiline keys\n\t\t// All these long scarry character classes are simplified versions of YAML's characters\n\t\tvar plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source\n\t\t\t.replace(/<PLAIN>/g, function () { return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source; });\n\t\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n\n\t\t/**\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {string} [flags]\n\t\t * @returns {RegExp}\n\t\t */\n\t\tfunction createValuePattern(value, flags) {\n\t\t\tflags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\t\t\tvar pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source\n\t\t\t\t.replace(/<<prop>>/g, function () { return properties; }).replace(/<<value>>/g, function () { return value; });\n\t\t\treturn RegExp(pattern, flags);\n\t\t}\n\n\t\tPrism.languages.yaml = {\n\t\t\t'scalar': {\n\t\t\t\tpattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source\n\t\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'comment': /#.*/,\n\t\t\t'key': {\n\t\t\t\tpattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n\t\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })\n\t\t\t\t\t.replace(/<<key>>/g, function () { return '(?:' + plainKey + '|' + string + ')'; })),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'atrule'\n\t\t\t},\n\t\t\t'directive': {\n\t\t\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'datetime': {\n\t\t\t\tpattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t'boolean': {\n\t\t\t\tpattern: createValuePattern(/true|false/.source, 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'null': {\n\t\t\t\tpattern: createValuePattern(/null|~/.source, 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: createValuePattern(string),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'number': {\n\t\t\t\tpattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'tag': tag,\n\t\t\t'important': anchorOrAlias,\n\t\t\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n\t\t};\n\n\t\tPrism.languages.yml = Prism.languages.yaml;\n\n\t}(Prism));\n\n\t(function (Prism) {\n\n\t\tfunction literal(str) {\n\t\t\treturn function () { return str; };\n\t\t}\n\n\t\tvar keyword = /\\b(?:align|allowzero|and|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/;\n\n\t\tvar IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b';\n\t\tvar ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n\t\tvar PREFIX_TYPE_OP = /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(/<ALIGN>/g, literal(ALIGN));\n\t\tvar SUFFIX_EXPR = /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(/<ID>/g, literal(IDENTIFIER));\n\t\tvar TYPE = '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+';\n\n\t\t/*\n\t\t * A simplified grammar for Zig compile time type literals:\n\t\t *\n\t\t * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n\t\t *\n\t\t * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n\t\t *\n\t\t * PREFIX_TYPE_OP = \"?\"\n\t\t *                | \\b \"promise\" \"->\"\n\t\t *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n\t\t *\n\t\t * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n\t\t *\n\t\t * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n\t\t *\n\t\t*/\n\n\t\tPrism.languages.zig = {\n\t\t\t'comment': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\/{3}.*/,\n\t\t\t\t\talias: 'doc-comment'\n\t\t\t\t},\n\t\t\t\t/\\/{2}.*/\n\t\t\t],\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// \"string\" and c\"string\"\n\t\t\t\t\tpattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// multiline strings and c-strings\n\t\t\t\t\tpattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n\t\t\t\t\tpattern: /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'builtin': /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n\t\t\t'label': {\n\t\t\t\tpattern: /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'class-name': [\n\t\t\t\t// const Foo = struct {};\n\t\t\t\t/\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n\t\t\t\t{\n\t\t\t\t\t// const x: i32 = 9;\n\t\t\t\t\t// var x: Bar;\n\t\t\t\t\t// fn foo(x: bool, y: f32) void {}\n\t\t\t\t\tpattern: RegExp(/(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// extern fn foo(x: f64) f64; (optional alignment)\n\t\t\t\t\tpattern: RegExp(/(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t}\n\t\t\t],\n\t\t\t'builtin-types': {\n\t\t\t\tpattern: /\\b(?:anyerror|bool|c_u?(?:short|int|long|longlong)|c_longdouble|c_void|comptime_(?:float|int)|[iu](?:8|16|32|64|128|size)|f(?:16|32|64|128)|noreturn|type|void)\\b/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'keyword': keyword,\n\t\t\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n\t\t\t'number': /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n\t\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t\t'operator': /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n\t\t\t'punctuation': /[.:,;(){}[\\]]/\n\t\t};\n\n\t\tPrism.languages.zig['class-name'].forEach(function (obj) {\n\t\t\tif (obj.inside === null) {\n\t\t\t\tobj.inside = Prism.languages.zig;\n\t\t\t}\n\t\t});\n\n\t}(Prism));\n}\n","// Full credit goes to: https://github.com/pngwn/prism-svelte\n// This is just a slightly modified version of their grammar so that it works\n// with our ESM setup, which only involves wrapping everything in a exported function.\n\nexport function prismSvelte(Prism) {\n  const blocks = '(if|else if|await|then|catch|each|html|debug)';\n\n  Prism.languages.svelte = Prism.languages.extend('markup', {\n    each: {\n      pattern: new RegExp(\n        '{[#/]each' +\n          '(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n      ),\n      inside: {\n        'language-javascript': [\n          {\n            pattern: /(as[\\s\\S]*)\\([\\s\\S]*\\)(?=\\s*\\})/,\n            lookbehind: true,\n            inside: Prism.languages['javascript'],\n          },\n          {\n            pattern: /(as[\\s]*)[\\s\\S]*(?=\\s*)/,\n            lookbehind: true,\n            inside: Prism.languages['javascript'],\n          },\n          {\n            pattern: /(#each[\\s]*)[\\s\\S]*(?=as)/,\n            lookbehind: true,\n            inside: Prism.languages['javascript'],\n          },\n        ],\n        keyword: /[#/]each|as/,\n        punctuation: /{|}/,\n      },\n    },\n    block: {\n      pattern: new RegExp(\n        '{[#:/@]/s' +\n          blocks +\n          '(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n      ),\n      inside: {\n        punctuation: /^{|}$/,\n        keyword: [new RegExp('[#:/@]' + blocks + '( )*'), /as/, /then/],\n        'language-javascript': {\n          pattern: /[\\s\\S]*/,\n          inside: Prism.languages['javascript'],\n        },\n      },\n    },\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?:\"[^\"]*\"|'[^']*'|{[\\s\\S]+?}(?=[\\s/>])))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/,\n          },\n        },\n        'language-javascript': {\n          pattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n          inside: Prism.languages['javascript'],\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true,\n              },\n            ],\n            'language-javascript': {\n              pattern: /{[\\s\\S]+}/,\n              inside: Prism.languages['javascript'],\n            },\n          },\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/,\n          },\n        },\n      },\n    },\n    'language-javascript': {\n      pattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n      lookbehind: true,\n      inside: Prism.languages['javascript'],\n    },\n  });\n\n  Prism.languages.svelte['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.svelte['entity'];\n\n  Prism.hooks.add('wrap', env => {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.replace(/&amp;/, '&');\n    }\n  });\n\n  Object.defineProperty(Prism.languages.svelte.tag, 'addInlined', {\n    value: function addInlined(tagName, lang) {\n      const includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang],\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n      const inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside,\n        },\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang],\n      };\n\n      const def = {};\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            tagName\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside,\n      };\n\n      Prism.languages.insertBefore('svelte', 'cdata', def);\n    },\n  });\n\n  Prism.languages.svelte.tag.addInlined('style', 'css');\n  Prism.languages.svelte.tag.addInlined('script', 'javascript');\n}\n","import type { Prism as PrismType } from \"./index\"\n\n/** Adds FTML syntax highlighting to a Prism instance. */\nexport function prismFTML(Prism: PrismType) {\n  function generateEmbedded(embed: string, start: string, end = start) {\n    const pattern = new RegExp(\n      `(\\\\[\\\\[\\\\s*${start}[^]*?\\\\]\\\\])([^]*?(?=\\\\[\\\\[\\\\/\\\\s*${end}\\\\s*\\\\]\\\\]))`,\n      \"im\"\n    )\n    return {\n      pattern,\n      lookbehind: true,\n      // use a getter so that the language doesn't have to exist right away\n      // this is so that we can do recursive highlighting (see below)\n      get inside() {\n        return Prism.languages[embed]\n      }\n    }\n  }\n\n  const codePatterns: Record<string, ReturnType<typeof generateEmbedded>> = {}\n  // languages that we'll add [[code]] embedded highlighting for\n  const highlightLanguages = [\n    \"ftml\",\n    \"wikidot\",\n    \"wikijump\",\n    \"wikitext\",\n    ...Object.keys(Prism.languages)\n  ]\n  // make a embedded highlighting rule for every language from the above list\n  for (const language of highlightLanguages) {\n    codePatterns[`code-${language}`] = generateEmbedded(\n      language,\n      `code[^]*?type\\\\s*=\\\\s*\"\\\\s*${language}\\\\s*\"`,\n      \"code\"\n    )\n  }\n\n  Prism.languages.ftml = {\n    \"comment\": /\\[!--[^]*?--\\]/im,\n\n    \"escape-nl\": {\n      pattern: / (_|\\\\)$/im,\n      alias: \"escaped\"\n    },\n\n    \"escape-at\": {\n      pattern: /@@[^]+?@@/i,\n      alias: \"escaped\"\n    },\n\n    \"escape-bracket\": {\n      pattern: /@<[^]+?>@/im,\n      alias: \"escaped\"\n    },\n\n    \"link-triple\": {\n      pattern: /(\\[{3}(?!\\[))([^\\n\\[\\]]+)((?!\\]{4})\\]{3})/,\n      inside: {\n        \"punctuation\": /\\[\\[\\[|\\]\\]\\]|\\|/,\n        \"url\": /[^\\[\\]\\|]+/\n      }\n    },\n\n    \"embedded-css\": generateEmbedded(\"css\", \"css\"),\n    \"embedded-css-module\": generateEmbedded(\"css\", \"module\\\\s*css\", \"module\"),\n    \"embedded-html\": generateEmbedded(\"html\", \"html\"),\n    \"embedded-math\": generateEmbedded(\"tex\", \"math\"),\n\n    ...codePatterns,\n    \"code\": generateEmbedded(\"plaintext\", \"code\"),\n\n    \"block\": {\n      // this horrifying pattern is actually what the CM parser uses (mostly, anyways)\n      // however unlike in Tarnation we can't use regexp variables easily so...\n      // just accept this as black magic and move on - if it needs to be edited,\n      // use the Tarnation parser as reference and don't try to hand make this\n      pattern:\n        /((\\[{2}(?!\\[)\\s*(?!\\/))|(\\[{2}\\/\\s*))(((?:[*=><](?![*=><])|f>|f<)(?![^\\S\\r\\n]|(\\s*(?!\\]{3})\\]{2})))?)([^\\\\#*\\s\\]]+?)(_?(?=[^\\S\\r\\n]|\\s*(?!\\]{3})\\]{2}|$))([^]*?)(\\s*(?!\\]{3})\\]{2})/im,\n      inside: {\n        \"block-name\": {\n          pattern: /(^\\[\\[\\/?)((?:[*=><](?![*=><])|f>|f<)*)([^\\s\\]]+)/i,\n          lookbehind: true,\n          inside: {\n            \"keyword\": /(^([*=><]|f>|f<))|_$/i,\n            \"tag\": /[^\\s*=><_]+/i\n          }\n        },\n        \"argument\": {\n          pattern: /(\\S+?)(\\s*=\\s*)/i,\n          inside: {\n            \"attr-name\": /[^\\s=]/i,\n            \"operator\": /=/i\n          }\n        },\n        \"string\": /\"[^\"]*\"/i,\n        \"punctuation\": /\\[\\/|[\\[\\]]/i,\n        \"block-label\": {\n          pattern: /([^\\s\\]=](?![=\"]))+/i,\n          alias: \"string\"\n        }\n      }\n    },\n\n    \"table-mark\": {\n      pattern: /(\\|{2,})([~=]?)/i,\n      alias: \"punctuation\"\n    },\n\n    \"blockquote\": {\n      pattern: /^\\s*>(?:[\\t ]*>)*/im,\n      alias: \"keyword\"\n    },\n\n    \"list-hash\": {\n      pattern: /^\\s*#(?!#)(?:[\\t ]*#(?!#))*/im,\n      alias: \"keyword\"\n    },\n\n    \"list-star\": {\n      pattern: /^\\s*\\*(?!\\*)(?:[\\t ]*\\*(?!\\*))*/im,\n      alias: \"keyword\"\n    },\n\n    \"hr\": {\n      pattern: /(^(?:\\s*|>*|\\|\\|[~=]?))(?:-{3,}|={3,})\\s*$/im,\n      lookbehind: true,\n      alias: \"keyword\"\n    },\n\n    \"heading\": {\n      pattern: /(^(?:\\s*|>*|\\|\\|[~=]?))(?:\\++\\*?)\\s+(?!$)/im,\n      lookbehind: true,\n      alias: \"keyword\"\n    },\n\n    \"colored-text\": {\n      pattern: /##\\w+\\|/i,\n      inside: {\n        \"punctuation\": /##|\\|/i,\n        \"constant\": /\\w+/i\n      }\n    },\n\n    \"colored-text-end\": {\n      pattern: /##/i,\n      alias: \"punctuation\"\n    },\n\n    \"formatting\": {\n      pattern: /\\*\\*|\\/\\/|__|--|,,|\\^\\^|\\{\\{|\\}\\}/i,\n      alias: \"operator\"\n    }\n  }\n\n  Prism.languages.wikidot = Prism.languages.ftml\n  Prism.languages.wikijump = Prism.languages.ftml\n  Prism.languages.wikitext = Prism.languages.ftml\n}\n"],"names":["domParser","globalThis","idleCallbackShim","scheduleStart","throttleDelay","lazytimer","lazyraf","root","window","requestAnimationFrame","cancelRequestAnimationFrame","setTimeout","clearTimeout","tasks","runAttempts","isRunning","remainingTime","minThrottle","throttle","index","taskStart","tasklength","IdleDeadline","didTimeout","timeRemaining","performance","now","Math","max","setInactive","debounce","fn","id","timestamp","wait","check","last","abortRunning","onInputorMutation","scheduleAfterRaf","runTasks","scheduleRaf","scheduleLazy","task","i","len","timeThreshold","length","shift","requestIdleCallbackShim","push","cancelIdleCallbackShim","requestIdleCallback","cancelIdleCallback","timeout","e","rIC","timeRemainingProto","IdleCallbackDeadline","prototype","Object","getOwnPropertyDescriptor","configurable","get","defineProperty","value","call","this","enumerable","document","addEventListener","forEach","name","capture","passive","MutationObserver","observe","documentElement","childList","subtree","attributes","request","cancel","factory","DOMParser","TextDecoder","TextEncoder","proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","serialized","Error","isError","message","stack","assign","ep","allowedOrigins","callback","ev","data","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","r","p","toString","bind","_thisArg","rawArgumentList","processArguments","construct","register","registerProxy","processed","v","arr","Array","concat","handler","serializedValue","msg","fill","floor","random","Number","MAX_SAFE_INTEGER","join","l","Prism","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","isArray","replace","o","objId","clone","deepClone","visited","key","hasOwnProperty","getLanguage","element","className","parentElement","match","toLowerCase","currentScript","err","src","exec","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","grammar","ret","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","language","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","add","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","to","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","aliases","parse","script","highlightAutomaticallyCallback","readyState","defer","WorkerGlobalScope","self","module","exports","url","email","linkMd","candidates","autolinker","processGrammar","def","indexOf","Prism$1","href","decodeURIComponent","adder","mapper","prefixString","customClass","classAdder","classMapper","prefix","string","result","c","keyword","modName","coreRules","markup","comment","prolog","doctype","punctuation","cdata","namespace","entity","tagName","includedCdataInside","attrName","html","mathml","svg","xml","ssml","atom","rss","css","atrule","rule","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","regex","parameter","constant","hashbang","interpolation","js","abnf","range","terminal","repetition","definition","actionscript","apl","statement","assignment","dfn","macro","directive","expression","cpp","generic","arduino","builtin","quoted","interpreted","variable","asciidoc","table","specifiers","title","hr","admonition","callout","inline","italic","bold","replacement","copyFromAsciiDoc","keys","split","adoc","replacements","m","re","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","identifier","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","csharp","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","attribute","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","aspnet","autohotkey","symbol","envVars","commandAfterHeredoc","insideString","bash","environment","shebang","toBeCopied","shell","basic","batch","label","command","bnf","rbnf","brainfuck","pointer","increment","decrement","branching","brightscript","clojure","cobol","level","coffeescript","delimiter","coffee","ruby","rb","crystal","expansion","selectorInside","class","combinator","unit","hexcode","color","csv","d","packagePrefix","dart","metadata","generics","diff","coord","PREFIXES","unchanged","line","spaceAfterBackSlash","space","option","stringRule","commentRule","docker","instruction","options","dockerfile","ebnf","special","editorconfig","section","elixir","doc","argument","elm","char","hvariable","erlang","fsharp","annotation","flow","unshift","fortran","git","deleted","inserted","glsl","go","graphql","description","markdown","fragment","haskell","hs","hcl","heredoc","hlsl","http","method","uri","contentType","suffix","langs","httpLanguages","json","suffixTypes","hpkp","safe","unsafe","hsts","ignore","entry","gitignore","hgignore","npmignore","ini","header","classNamePrefix","java","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","walkTokens","t","substring","middle","splice","php","package","string_interpolation","javaDocLike","javadoclike","docLanguage","tokenName","docCommentSupport","addSupport","codeLinePattern","memberReference","reference","javadoc","field","typescript","decorator","at","ts","parameterPrefix","jsdoc","example","withId","imports","spread","arrow","dom","maybeClassNameTokens","null","webmanifest","json5","jsonp","jsstacktrace","julia","kotlin","kt","kts","funcPattern","insideEqu","latex","equation","headline","tex","context","less","simple_form","primitive","marker","par","endpar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","sublist","lisp","elisp","emacs","log","separator","domain","uuid","hash","date","time","lua","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","blockquote","strike","codeLang","codeBlock","cls","tempContainer","createElement","autoloader","Date","valueOf","loadLanguages","ele","getElementById","md","matlab","nasm","nginx","escape","nim","objectivec","objc","ocaml","variant","opencl","pascal","objectpascal","perl","filehandle","vstring","phpdoc","scope","sql","plsql","powershell","stringInside","purescript","purs","python","py","jsString","jsComment","jsExpr","qml","ellipsis","braces","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","tsx","specialEscape","rangeChar","groupName","charset","charclass","backreference","anchor","group","quantifier","alternation","substitution","role","link","multilineComment","rust","sass","scss","scala","scheme","SortedBNF","smalltalk","smarty","smartyLitteralMode","func","stylus","swift","insertKey","toml","interpolationExpr","vim","wasm","anchorOrAlias","properties","plainKey","createValuePattern","scalar","datetime","yml","literal","IDENTIFIER","ALIGN","TYPE","zig","blocks","svelte","each","block","prismSvelte","generateEmbedded","embed","end","codePatterns","highlightLanguages","ftml","formatting","wikidot","wikijump","wikitext","prismFTML","RAW_LANGS","getLanguages","filter","includes"],"mappings":"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","x_google_ignoreList":[3]}